[{"/home/user/projects/samuhikProject/src/Routes.js":"1","/home/user/projects/samuhikProject/src/components/SearchPeople.js":"2","/home/user/projects/samuhikProject/src/pages/EditPeople.js":"3","/home/user/projects/samuhikProject/src/reportWebVitals.js":"4","/home/user/projects/samuhikProject/src/pages/PaymentCondition.js":"5","/home/user/projects/samuhikProject/src/pages/Home.js":"6","/home/user/projects/samuhikProject/src/pages/Sadsya.js":"7","/home/user/projects/samuhikProject/src/pages/Prerna.js":"8","/home/user/projects/samuhikProject/src/pages/Master.js":"9","/home/user/projects/samuhikProject/src/components/Layout.js":"10","/home/user/projects/samuhikProject/src/components/PaymentSearch.js":"11","/home/user/projects/samuhikProject/src/components/Sidebar.js":"12","/home/user/projects/samuhikProject/src/components/Due.js":"13","/home/user/projects/samuhikProject/src/components/ProductSearch.js":"14","/home/user/projects/samuhikProject/src/pages/Suchna.js":"15","/home/user/projects/samuhikProject/src/pages/Photo.js":"16","/home/user/projects/samuhikProject/src/pages/Samachaar.js":"17","/home/user/projects/samuhikProject/src/components/Row.js":"18","/home/user/projects/samuhikProject/src/pages/Login.js":"19","/home/user/projects/samuhikProject/src/pages/Reports.js":"20","/home/user/projects/samuhikProject/src/pages/Gourav.js":"21","/home/user/projects/samuhikProject/src/pages/EditUser.js":"22","/home/user/projects/samuhikProject/src/firebase.config.js":"23","/home/user/projects/samuhikProject/src/components/Received.js":"24","/home/user/projects/samuhikProject/src/pages/Video.js":"25","/home/user/projects/samuhikProject/src/components/DonationMaster.js":"26","/home/user/projects/samuhikProject/src/components/Display.js":"27","/home/user/projects/samuhikProject/src/components/ShowMedia.js":"28","/home/user/projects/samuhikProject/src/App.js":"29","/home/user/projects/samuhikProject/src/components/Ghoshna.js":"30","/home/user/projects/samuhikProject/src/components/RegNoSearch.js":"31","/home/user/projects/samuhikProject/src/pages/Nirman.js":"32","/home/user/projects/samuhikProject/src/pages/Tkp.js":"33","/home/user/projects/samuhikProject/src/index.js":"34","/home/user/projects/samuhikProject/src/components/GVSearch.js":"35","/home/user/projects/samuhikProject/src/components/GaadiMaster.js":"36","/home/user/projects/samuhikProject/src/pages/SearchEntry.js":"37","/home/user/projects/samuhikProject/src/pages/MaargDarshan.js":"38","/home/user/projects/samuhikProject/src/pages/Skp.js":"39"},{"size":795,"mtime":1618750929195,"results":"40","hashOfConfig":"41"},{"size":3819,"mtime":1618243710936,"results":"42","hashOfConfig":"41"},{"size":13956,"mtime":1618927880607,"results":"43","hashOfConfig":"41"},{"size":362,"mtime":1616163076152,"results":"44","hashOfConfig":"41"},{"size":2483,"mtime":1617592392999,"results":"45","hashOfConfig":"41"},{"size":8807,"mtime":1617591409975,"results":"46","hashOfConfig":"41"},{"size":6275,"mtime":1617103567349,"results":"47","hashOfConfig":"41"},{"size":6301,"mtime":1618074489398,"results":"48","hashOfConfig":"41"},{"size":1510,"mtime":1617642892892,"results":"49","hashOfConfig":"41"},{"size":4694,"mtime":1617591439777,"results":"50","hashOfConfig":"41"},{"size":3955,"mtime":1616163076152,"results":"51","hashOfConfig":"41"},{"size":1868,"mtime":1616163076152,"results":"52","hashOfConfig":"41"},{"size":6672,"mtime":1616163076152,"results":"53","hashOfConfig":"41"},{"size":4452,"mtime":1616163076152,"results":"54","hashOfConfig":"41"},{"size":3468,"mtime":1617258064976,"results":"55","hashOfConfig":"41"},{"size":4545,"mtime":1617119414005,"results":"56","hashOfConfig":"41"},{"size":3477,"mtime":1617119542441,"results":"57","hashOfConfig":"41"},{"size":2062,"mtime":1618942339564,"results":"58","hashOfConfig":"41"},{"size":3839,"mtime":1616163076152,"results":"59","hashOfConfig":"41"},{"size":7008,"mtime":1616163076152,"results":"60","hashOfConfig":"41"},{"size":6275,"mtime":1617103526484,"results":"61","hashOfConfig":"41"},{"size":19981,"mtime":1616262756314,"results":"62","hashOfConfig":"41"},{"size":560,"mtime":1616163076152,"results":"63","hashOfConfig":"41"},{"size":7667,"mtime":1616163076152,"results":"64","hashOfConfig":"41"},{"size":5129,"mtime":1617119434338,"results":"65","hashOfConfig":"41"},{"size":4130,"mtime":1617637486785,"results":"66","hashOfConfig":"41"},{"size":1625,"mtime":1616163076152,"results":"67","hashOfConfig":"41"},{"size":3081,"mtime":1618751694446,"results":"68","hashOfConfig":"41"},{"size":181,"mtime":1616163076152,"results":"69","hashOfConfig":"41"},{"size":4869,"mtime":1616163076152,"results":"70","hashOfConfig":"41"},{"size":3977,"mtime":1616163076152,"results":"71","hashOfConfig":"41"},{"size":6275,"mtime":1617258246415,"results":"72","hashOfConfig":"41"},{"size":6266,"mtime":1617103604437,"results":"73","hashOfConfig":"41"},{"size":455,"mtime":1616163076152,"results":"74","hashOfConfig":"41"},{"size":8371,"mtime":1616163076152,"results":"75","hashOfConfig":"41"},{"size":3854,"mtime":1618942057017,"results":"76","hashOfConfig":"41"},{"size":7345,"mtime":1616755553728,"results":"77","hashOfConfig":"41"},{"size":6293,"mtime":1617103552577,"results":"78","hashOfConfig":"41"},{"size":6266,"mtime":1617103584433,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"n5z2ta",{"filePath":"83","messages":"84","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"172","usedDeprecatedRules":"82"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/user/projects/samuhikProject/src/Routes.js",[],["181","182"],"/home/user/projects/samuhikProject/src/components/SearchPeople.js",["183","184","185","186","187","188","189","190"],"import React, { useState, useEffect } from \"react\";\nimport { navigate } from \"hookrouter\";\nimport { firestore, storage } from \"../firebase.config\";\nimport { isDOMComponentElement } from \"react-dom/test-utils\";\n\nexport default function SearchPeople({ type }) {\n  const [finalData, setFinalData] = useState([]);\n  const[key,setKeys] = useState([])\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const query = firestore.collection(type);\n      const exeQuery = await query.get();\n      var data = [];\n\n      exeQuery.forEach((d) => {\n        data.push(d.data());\n      });\n\n      // var keys = Object.keys(data[0]);\n      // const index = keys.indexOf('pid');\n      // if (index > -1) {\n      //   keys.splice(index, 1);\n      // }\n      // setKeys(keys)\n      console.log(\"data\", data);\n      setFinalData(data);\n    };\n    fetchData();\n  }, []);\n\n  const deleteUser = (id) => {\n    var data = [] \n    finalData.map((d) => {\n        if(d.pid !== id){\n            data.push(d)\n        }\n    })\n    // console.log(data);\n    setFinalData(data)\n    const query = firestore\n      .collection(type)\n      .where(\"pid\", \"==\", id);\n    const exe = query.get().then(function (q) {\n      q.forEach(function (doc) {\n        doc.ref.delete();\n        alert(\"User Deleted\");\n      });\n    });\n  };\n\n  return (\n    <div>\n      {finalData.length > 0 && (\n        <div>\n          <table id=\"example2\" className=\"table table-bordered\">\n            <thead>\n              <tr>\n                {finalData.some(obj => obj.hasOwnProperty(\"event\")) && <th>Event</th>}\n                {finalData.some(obj => obj.hasOwnProperty(\"note\")) &&<th>Note</th>}\n                {finalData.some(obj => obj.hasOwnProperty(\"date\")) &&<th>Date</th>}\n                {finalData.some(obj => obj.hasOwnProperty(\"image\")) && <th>Image</th>}\n                {finalData.some(obj => obj.hasOwnProperty(\"name\")) && <th>Name</th>}\n                {finalData.some(obj => obj.hasOwnProperty(\"fname\")) &&<th>Father's Name</th>}\n                {finalData.some(obj => obj.hasOwnProperty(\"address\")) &&<th>Address</th>}\n                {finalData.some(obj => obj.hasOwnProperty(\"mno\")) && <th>Mobile Number</th>}\n                {finalData.some(obj => obj.hasOwnProperty(\"vivran\")) &&<th>Vivran</th>}\n                <th>Edit</th>\n                <th>Delete</th>\n              </tr>\n            </thead>\n            <tbody>\n              {finalData.map((val, i) => (\n                <tr>\n                  {val.event && <td>{val.event}</td>}\n                  {val.note && <td>{val.note}</td>}\n                  {val.date && <td>{val.date}</td>}\n                  {val.image && <td>\n                    <img src={val.image} style={{ width: 180, height: 180 }} />\n                  </td>}\n                  {val.name && <td>{val.name}</td>}\n                  {val.fname && <td>{val.fname}</td>}\n                  {val.address && <td>{val.address}</td>}\n                  {val.mno && <td>{val.mno}</td>}\n                  {val.vivran && <td>{val.vivran}</td>}\n                  <td style={{ flexDirection: \"row\" }}>\n                    <span\n                      onClick={() => navigate(\"/editPeople/\"+type+\"*\"+ val.pid)}\n                      style={{ color: \"blue\" }}\n                    >\n                      <i className=\"fas fa-edit\" style={{ color: \"black\" }}></i>\n                    </span>\n                  </td>\n                  <td>\n                    <span\n                      onClick={() => deleteUser(val.pid)}\n                      style={{ color: \"blue\" }}\n                    >\n                      <i className=\"fas fa-trash\" style={{ color: \"red\" }}></i>\n                    </span>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n}\n",["191","192"],"/home/user/projects/samuhikProject/src/pages/EditPeople.js",["193","194","195","196","197","198"],"import React, { useEffect, useState } from \"react\";\nimport SideBar from \"../components/Sidebar\";\nimport { useFormik } from \"formik\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { firestore, storage } from \"../firebase.config\";\nimport { navigate } from \"hookrouter\";\n\nexport default function EditPeople({ id }) {\n  const [fieldValue, setFieldValue] = useState();\n  const [imgUrl, setImgUrl] = useState();\n  const [userId, setUserId] = useState(\"\");\n  const [userType, setUserType] = useState(\"\");\n  const [userData, setUserData] = useState({});\n  const [reUpload, setReupload] = useState(false);\n  var storageRef = storage.ref();\n\n  useEffect(() => {\n    if (localStorage.getItem(\"logged\") !== \"true\") {\n      navigate(\"/\");\n    }\n    console.log(id.id.split(\"*\"));\n    setUserType(id.id.split(\"*\")[0]);\n    setUserId(id.id.split(\"*\")[1]);\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    console.log(\"loading data..\");\n    var data = [];\n    var arr = id.id.split(\"*\");\n    // if (userId && userType) {\n    const q = firestore.collection(arr[0]).where(\"pid\", \"==\", arr[1]);\n    const eq = await q.get();\n    eq.forEach((d) => {\n      data.push(d.data());\n    });\n    console.log(\"data\", JSON.stringify(data));\n    var final = { ...data };\n    setUserData(final[0]);\n    // }\n  };\n\n  const validate = (values) => {\n    console.log(\"in validate\");\n    const errors = {};\n    if (!fieldValue) {\n      errors.file = \"Image Required\";\n    }\n    if (!values.name) {\n      errors.name = \"Name Required\";\n    }\n\n    if (userType !== \"prerna\" && values.mno && !values.mno.match(/^\\d{10}$/)) {\n      errors.mno = \"Invalid Phone Number. 10 Digits Required\";\n    }\n    return errors;\n  };\n\n  const imageUpload = async (pid) => {\n    // console.log(\"image upload\",fieldValue);\n    if (fieldValue) {\n      const uploadTask = storageRef.child(`images/${pid}`).put(fieldValue);\n\n      return new Promise((resolve, reject) => {\n        uploadTask.on(\n          \"state_changed\",\n          (snapshot) => {},\n          (error) => {\n            reject(error);\n          },\n          () => {\n            storageRef\n              .child(`images/${pid}`)\n              .getDownloadURL()\n              .then((url) => {\n                setImgUrl(url);\n                resolve(url);\n              });\n          }\n        );\n      });\n    }\n  };\n\n  const handleClick = () => {\n    setReupload(!reUpload);\n  };\n\n  const registerForm = useFormik({\n    initialValues: userData,\n    enableReinitialize: true,\n    // validate,\n    onSubmit: async (values) => {\n      console.log(\"values\", values);\n      const url = reUpload === true ? await imageUpload(userId) : values.image;\n      const data = {};\n      if (\"name\" in userData) data[\"name\"] = values.name;\n      if (\"fname\" in userData) data[\"fname\"] = values.fname;\n      if (\"address\" in userData) data[\"address\"] = values.address;\n      if (\"image\" in userData) data[\"image\"] = url;\n      if (\"mno\" in userData) data[\"mno\"] = values.mno;\n      if (\"vivran\" in userData) data[\"vivran\"] = values.vivran;\n      if (\"event\" in userData) data[\"event\"] = values.event;\n      if (\"date\" in userData) data[\"date\"] = values.date;\n      if (\"note\" in userData) data[\"note\"] = values.note;\n      console.log(\"data edited\", data);\n      \n      firestore\n        .collection(userType)\n        .doc(userId)\n        .set(data, { merge: true })\n        .then(function () {\n          console.log(\"success\");\n          navigate(\"/home\");\n        });\n    },\n  });\n\n  return (\n    <div>\n      <SideBar />\n      <div className=\"content-wrapper\">\n        <div className=\"content-header\">\n          <div className=\"container-fluid\">\n            <div className=\"row mb-2\">\n              <div className=\"col-sm-6\">\n                <h1 className=\"m-0 text-dark\">Edit</h1>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div>\n          <section className=\"content\">\n            <div className=\"container-fluid\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <form role=\"form\" onSubmit={registerForm.handleSubmit}>\n                    <div className=\"row\">\n                      {\"image\" in userData && (\n                        <div\n                          style={{ display: \"flex\", justifyContent: \"center\" }}\n                        >\n                          <img\n                            src={registerForm.values.image}\n                            style={{ width: 180, height: 180 }}\n                          />\n                          <div onClick={() => handleClick()}>\n                            <h6>Upload New</h6>\n                          </div>\n                          <br></br>\n                          {reUpload && (\n                            <div className=\"form-group\">\n                              <input\n                                type=\"file\"\n                                className=\"form-control\"\n                                placeholder=\"फोटो\"\n                                name=\"file\"\n                                id=\"file\"\n                                onChange={(event) => {\n                                  setFieldValue(event.currentTarget.files[0]);\n                                }}\n                              />\n                            </div>\n                          )}\n                          {registerForm.errors.image ? (\n                            <p style={{ color: \"red\" }}>\n                              {registerForm.errors.image}\n                            </p>\n                          ) : null}\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"row\">\n                      {\"name\" in userData && (\n                        <div className=\"col-sm-6\">\n                          <div className=\"form-group\">\n                            <label>नाम </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"नाम\"\n                              name=\"name\"\n                              onChange={registerForm.handleChange}\n                              defaultValue={registerForm.values.name}\n                            />\n                          </div>\n                          {registerForm.errors.name ? (\n                            <p style={{ color: \"red\" }}>\n                              {registerForm.errors.name}\n                            </p>\n                          ) : null}\n                        </div>\n                      )}\n                      {\"fname\" in userData && (\n                        <div className=\"col-sm-6\">\n                          <div className=\"form-group\">\n                            <label>पिता का नाम </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"पिता का नाम\"\n                              name=\"fname\"\n                              onChange={registerForm.handleChange}\n                              defaultValue={registerForm.values.fname}\n                            />\n                          </div>\n                          {registerForm.errors.fname ? (\n                            <p style={{ color: \"red\" }}>\n                              {registerForm.errors.fname}\n                            </p>\n                          ) : null}\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"row\">\n                      {\"address\" in userData && (\n                        <div className=\"col-sm-6\">\n                          <div className=\"form-group\">\n                            <label>पता </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"Address\"\n                              name=\"address\"\n                              onChange={registerForm.handleChange}\n                              defaultValue={registerForm.values.address}\n                            />\n                          </div>\n                          {registerForm.errors.address ? (\n                            <p style={{ color: \"red\" }}>\n                              {registerForm.errors.address}\n                            </p>\n                          ) : null}\n                        </div>\n                      )}\n\n                      {\"vivran\" in userData && (\n                        <div className=\"col-sm-6\">\n                          <div className=\"form-group\">\n                            <label>विवरण </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"विवरण\"\n                              name=\"vivran\"\n                              onChange={registerForm.handleChange}\n                              defaultValue={registerForm.values.vivran}\n                            />\n                          </div>\n                          {registerForm.errors.vivran ? (\n                            <p style={{ color: \"red\" }}>\n                              {registerForm.errors.vivran}\n                            </p>\n                          ) : null}\n                        </div>\n                      )}\n                      {\"mno\" in userData && (\n                        <div className=\"col-sm-6\">\n                          <div className=\"form-group\">\n                            <label>मोबाइल नंबर </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"मोबाइल नंबर \"\n                              name=\"mno\"\n                              onChange={registerForm.handleChange}\n                              value={registerForm.values.mno}\n                            />\n                          </div>\n                          {registerForm.errors.mno ? (\n                            <p style={{ color: \"red\" }}>\n                              {registerForm.errors.mno}\n                            </p>\n                          ) : null}\n                        </div>\n                      )}\n                    </div>\n\n                    <div className=\"row\">\n                      {\"event\" in userData && (\n                        <div className=\"col-sm-6\">\n                          <div className=\"form-group\">\n                            <label>\n                              {userType === \"suchna\" ? \"सुचना\" : \"आयोजन\"}{\" \"}\n                            </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"आयोजन\"\n                              name=\"event\"\n                              onChange={registerForm.handleChange}\n                              defaultValue={registerForm.values.event}\n                            />\n                          </div>\n                          {registerForm.errors.event ? (\n                            <p style={{ color: \"red\" }}>\n                              {registerForm.errors.event}\n                            </p>\n                          ) : null}\n                        </div>\n                      )}\n                      {\"date\" in userData && (\n                        <div className=\"col-sm-6\">\n                          <div className=\"form-group\">\n                            <label>दिनांक </label>\n                            <input\n                              type=\"date\"\n                              className=\"form-control\"\n                              placeholder=\" दिनांक \"\n                              name=\"date\"\n                              onChange={registerForm.handleChange}\n                              value={registerForm.values.date}\n                            />\n                          </div>\n                          {registerForm.errors.date ? (\n                            <p style={{ color: \"red\" }}>\n                              {registerForm.errors.event}\n                            </p>\n                          ) : null}\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"row\">\n                      {\"note\" in userData && (\n                        <div className=\"col-sm-6\">\n                          <div className=\"form-group\">\n                            <label>नोट </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"नोट\"\n                              name=\"note\"\n                              onChange={registerForm.handleChange}\n                              defaultValue={registerForm.values.note}\n                            />\n                          </div>\n                          {registerForm.errors.note ? (\n                            <p style={{ color: \"red\" }}>\n                              {registerForm.errors.note}\n                            </p>\n                          ) : null}\n                        </div>\n                      )}\n                    </div>\n\n                    <button type=\"submit\" className=\"btn btn-info\">\n                      रजिस्टर{\" \"}\n                    </button>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/user/projects/samuhikProject/src/reportWebVitals.js",[],["199","200"],"/home/user/projects/samuhikProject/src/pages/PaymentCondition.js",["201","202","203","204"],"import React, { useState, useEffect } from \"react\";\nimport SideBar from \"../components/Sidebar\";\nimport { firestore } from \"../firebase.config\";\nimport { navigate } from \"hookrouter\";\nimport Ghoshna from \"../components/Ghoshna\";\nimport Due from \"../components/Due\";\nimport Received from \"../components/Received\";\n\nexport default function Payment() {\n  const [dtypes, setdTypes] = useState([]);\n  const [ptype, setPType] = useState(\"\");\n  let ref = firestore.collection(\"receipts\").doc(\"AllsReceipts\");\n\n  useEffect(async () => {\n    if (localStorage.getItem(\"logged\") !== \"true\") {\n      navigate(\"/\");\n    }\n    const document = firestore.collection(\"donation_type\");\n    const activeRef = await document.get();\n    var dt = [];\n    activeRef.forEach((docs) => {\n      dt.push(docs.data());\n    });\n\n    setdTypes(dt);\n  });\n\n  const handleType = (e) => {\n    console.log(e.target.value);\n    setPType(e.target.value);\n  };\n\n  return (\n    <div>\n      <SideBar />\n      <div className=\"content-wrapper\">\n        {/* ye */}\n        <div className=\"content-header\">\n          <div className=\"container-fluid\">\n            <div className=\"row mb-2\">\n              <div className=\"col-sm-6\">\n                <h1 className=\"m-0 text-dark\">Payment Method</h1>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* idhar */}\n        <section className=\"content\">\n          <div className=\"container-fluid\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <div>\n                  <div className=\"form-group\">\n                    <label>Payment Type</label>\n                    <select\n                      className=\"form-control\"\n                      name=\"pc\"\n                      onChange={handleType}\n                      value={ptype}\n                    >\n                      <option value=\"\" disabled selected>\n                        Select one\n                      </option>\n                      <option value=\"ghoshna\">Ghoshna</option>\n                      <option value=\"due\">Due</option>\n                      <option value=\"received\">Received</option>\n                    </select>\n                  </div>\n                </div>\n                {ptype === \"ghoshna\" && <Ghoshna />}\n\n                {ptype === \"due\" && <Due  />}\n\n                {ptype === \"received\" && <Received />}\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n}\n","/home/user/projects/samuhikProject/src/pages/Home.js",["205","206","207","208","209","210","211","212","213","214","215"],"import React from 'react'\nimport SideBar from '../components/Sidebar'\nimport { navigate } from \"hookrouter\";\n\nexport default function Home(){\n\n    React.useEffect(() => {\n        if (localStorage.getItem(\"logged\") !== \"true\") {\n          navigate(\"/\");\n        }\n      });\n    \n\n    return(\n        <div>\n            <SideBar />\n            <div className=\"content-wrapper\" >\n            {/* Content Header (Page header) */}\n            <div className=\"content-header\">\n                <div className=\"container-fluid\">\n                <div className=\"row mb-2\">\n                    <div className=\"col-sm-6\">\n                    <h1 className=\"m-0 text-dark\">Dashboard</h1>\n                    </div>{/* /.col */}\n                </div>{/* /.row */}\n                </div>{/* /.container-fluid */}\n            </div>\n            {/* /.content-header */}\n            {/* Main content */}\n            <section className=\"content\" >\n                <div className=\"container-fluid\" >\n                {/* Info boxes */}\n                <div className=\"row\">\n                    <div className=\"col-12 col-sm-6 col-md-3\" >\n                    <div className=\"info-box\" onClick={() => navigate(\"/layout/\"+\"prerna\")}>\n                        <div className=\"info-box-content\">\n                        <span className=\"info-box-text\" style={{textAlign:\"center\"}}>समाज के प्रेरणास्त्रोत</span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                    </div>\n                    {/* /.col */}\n                    <div className=\"col-12 col-sm-6 col-md-3\">\n                    <div className=\"info-box mb-3\" onClick={() => navigate(\"/layout/\"+\"gourav\")}>\n                        <div className=\"info-box-content\">\n                        <span className=\"info-box-text\" style={{textAlign:\"center\"}}>समाज के गौरव</span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                    </div>\n                    {/* /.col */}\n                    {/* fix for small devices only */}\n                    <div className=\"clearfix hidden-md-up\" />\n                    <div className=\"col-12 col-sm-6 col-md-3\">\n                    <div className=\"info-box mb-3\" onClick={() => navigate(\"/layout/\"+\"maargdarshan\")}>\n                        <div className=\"info-box-content\">\n                        <span className=\"info-box-text\" style={{textAlign:\"center\"}}>समाज के मार्गदर्शक </span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                    </div>\n                    {/* /.col */}\n                    \n                    {/* /.col */}\n                </div>\n                \n                {/* /.row */}\n                <div className=\"row\">\n                    <div className=\"col-12 col-sm-6 col-md-3\">\n                    <div className=\"info-box\" onClick={() => navigate(\"/layout/\"+\"sadsya\")}>\n                        <div className=\"info-box-content\">\n                        <span className=\"info-box-text\" style={{textAlign:\"center\"}}>समाज की केंद्रीय समिति के सदस्य  </span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                    </div>\n                    {/* /.col */}\n                    <div className=\"col-12 col-sm-6 col-md-3\">\n                    <div className=\"info-box mb-3\" onClick={() => navigate(\"/layout/\"+\"skp\")}>\n                        <div className=\"info-box-content\">\n                        <span className=\"info-box-text\" style={{textAlign:\"center\"}}>समाज की केंद्रीय समिति के पदाधिकारी </span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                    </div>\n                    <div className=\"col-12 col-sm-6 col-md-3\">\n                    <div className=\"info-box mb-3\" onClick={() => navigate(\"/layout/\"+\"tkp\")}>\n                        <div className=\"info-box-content\">\n                        <span className=\"info-box-text\" style={{textAlign:\"center\"}}>समाज के ट्रस्ट के पदाधिकारी </span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                    </div>\n                   \n                </div>\n                <div className=\"row\">\n                    <div className=\"col-12 col-sm-6 col-md-3\">\n                    <div className=\"info-box\" onClick={() => navigate(\"/layout/\"+\"photo\")}>\n                        <div className=\"info-box-content\">\n                        <span className=\"info-box-text\" style={{textAlign:\"center\"}}>फोटो</span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                    </div>\n                    {/* /.col */}\n                    <div className=\"col-12 col-sm-6 col-md-3\">\n                    <div className=\"info-box mb-3\" onClick={() => navigate(\"/layout/\"+\"video\")}>\n                        <div className=\"info-box-content\">\n                        <span className=\"info-box-text\" style={{textAlign:\"center\"}}> वीडियो</span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                    </div>\n                    <div className=\"col-12 col-sm-6 col-md-3\">\n                    <div className=\"info-box mb-3\" onClick={() => navigate(\"/layout/\"+\"samachaar\")}>\n                        <div className=\"info-box-content\">\n                        <span className=\"info-box-text\" style={{textAlign:\"center\"}}>समाज के मुख्य समाचार</span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                    </div>\n                    <div className=\"col-12 col-sm-6 col-md-3\">\n                    <div className=\"info-box mb-3\" onClick={() => navigate(\"/layout/\"+\"suchna\")}>\n                        <div className=\"info-box-content\">\n                        <span className=\"info-box-text\" style={{textAlign:\"center\"}}>आवश्यक सुचना </span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                    </div>\n                   \n                </div>\n                <div className=\"row\">\n                    <div className=\"col-12 col-sm-6 col-md-3\">\n                    <div className=\"info-box\">\n                        <div className=\"info-box-content\">\n                        <span className=\"info-box-text\" style={{textAlign:\"center\"}}>समाज का इतिहास</span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                    </div>\n                    {/* /.col */}\n                    <div className=\"col-12 col-sm-6 col-md-3\">\n                    <div className=\"info-box mb-3\" onClick={() => navigate(\"/layout/\"+\"nirman\")}>\n                        <div className=\"info-box-content\">\n                        <span className=\"info-box-text\" style={{textAlign:\"center\"}} >शौर्य स्थल निर्माण समिति</span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                    </div>\n                    <div className=\"col-12 col-sm-6 col-md-3\">\n                    <div className=\"info-box mb-3\" onClick={() => navigate(\"/layout/master\")}>\n                        <div className=\"info-box-content\">\n                        <span className=\"info-box-text\" style={{textAlign:\"center\"}}>मास्टर</span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                    </div>\n                   \n                </div>\n                </div>{/*/. container-fluid */}\n            </section>\n            {/* /.content */}\n            </div>\n\n        </div>\n    )\n}","/home/user/projects/samuhikProject/src/pages/Sadsya.js",["216","217"],"import React, { useState } from \"react\";\nimport SideBar from \"../components/Sidebar\";\nimport { useFormik } from \"formik\";\nimport { navigate } from \"hookrouter\";\nimport { firestore, storage } from \"../firebase.config\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Sadsya = () => {\n  const [fieldValue, setFieldValue] = useState({});\n  var storageRef = storage.ref();\n  const [imgUrl, setImgUrl] = useState();\n\n  const validate = (values) => {\n    console.log(\"in validate\");\n    const errors = {};\n    if (!fieldValue) {\n      errors.file = \"Image Required\";\n    }\n    if (!values.name) {\n      errors.name = \"Name Required\";\n    }\n\n    if (values.mno && !values.mno.match(/^\\d{10}$/)) {\n      errors.mno = \"Invalid Phone Number. 10 Digits Required\";\n    }\n    return errors;\n  };\n\n  const imageUpload = async (pid) => {\n    // console.log(\"image upload\",fieldValue);\n    if (fieldValue) {\n      const uploadTask = storageRef.child(`images/${pid}`).put(fieldValue);\n\n      return new Promise((resolve, reject) => {\n        uploadTask.on(\n          \"state_changed\",\n          (snapshot) => {},\n          (error) => {\n            reject(error);\n          },\n          () => {\n            storageRef\n              .child(`images/${pid}`)\n              .getDownloadURL()\n              .then((url) => {\n                setImgUrl(url);\n                resolve(url);\n              });\n          }\n        );\n      });\n    }\n  };\n\n  const registerForm = useFormik({\n    initialValues: {\n      pid: uuidv4(),\n      name: \"\",\n      fname: \"\",\n      address: \"\",\n      mno: \"\",\n      file: \"\",\n    },\n    validate,\n    onSubmit: async (values) => {\n      console.log(values);\n      const url = await imageUpload(values.pid);\n      // console.log(\"file\",fieldValue);\n      const data = {\n        pid: values.pid,\n        name: values.name,\n        fname: values.fname,\n        address: values.address,\n        mno: values.mno,\n        image: url,\n      };\n      firestore\n        .collection(\"sadsya\")\n        .doc(values.pid)\n        .set(data, { merge: true })\n        .then(function () {\n          console.log(\"success\");\n          navigate(\"/home\");\n        });\n    },\n  });\n\n  return (\n    <div>\n      <SideBar />\n      <div\n        className=\"row\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <div>\n          <form role=\"form\" onSubmit={registerForm.handleSubmit}>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>नाम </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"नाम\"\n                    name=\"name\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.name}\n                  />\n                </div>\n                {registerForm.errors.name ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.name}</p>\n                ) : null}\n              </div>\n              <div className=\"col-sm-6\">\n                {/* text input */}\n                <div className=\"form-group\">\n                  <label>पिता का नाम </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"पिता का नाम\"\n                    name=\"fname\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.fname}\n                  />\n                </div>\n                {registerForm.errors.fname ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.fname}</p>\n                ) : null}\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                {/* text input */}\n                <div className=\"form-group\">\n                  <label>फोटो </label>\n                  <input\n                    type=\"file\"\n                    className=\"form-control\"\n                    placeholder=\"फोटो\"\n                    name=\"file\"\n                    id=\"file\"\n                    // onChange={registerForm.handleChange}\n                    onChange={(event) => {\n                      setFieldValue(event.currentTarget.files[0]);\n                    }}\n                  ></input>\n                </div>\n                {registerForm.errors.file ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.file}</p>\n                ) : null}\n              </div>\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>पता </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Address\"\n                    name=\"address\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.address}\n                  />\n                </div>\n                {registerForm.errors.address ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.address}</p>\n                ) : null}\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>मोबाइल नंबर </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"मोबाइल नंबर \"\n                    name=\"mno\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.mno}\n                  />\n                </div>\n                {registerForm.errors.mno ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.mno}</p>\n                ) : null}\n              </div>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-info\">\n              रजिस्टर{\" \"}\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Sadsya;\n","/home/user/projects/samuhikProject/src/pages/Prerna.js",["218","219","220"],"/home/user/projects/samuhikProject/src/pages/Master.js",["221","222"],"/home/user/projects/samuhikProject/src/components/Layout.js",["223"],"import React, { useState } from \"react\";\nimport Gourav from \"../pages/Gourav\";\nimport MaargDarshan from \"../pages/MaargDarshan\";\nimport Master from \"../pages/Master\";\nimport Nirman from \"../pages/Nirman\";\nimport Photo from \"../pages/Photo\";\nimport Prerna from \"../pages/Prerna\";\nimport Sadsya from \"../pages/Sadsya\";\nimport Samachaar from \"../pages/Samachaar\";\nimport Skp from \"../pages/Skp\";\nimport Suchna from \"../pages/Suchna\";\nimport Tkp from \"../pages/Tkp\";\nimport Video from \"../pages/Video\";\nimport SearchPeople from \"./SearchPeople\";\nimport ShowMedia from \"./ShowMedia\";\nimport SideBar from \"./Sidebar\";\n\nconst Layout = ({ type }) => {\n  const components = {\n    prerna: Prerna,\n    gourav: Gourav,\n    maargdarshan: MaargDarshan,\n    sadsya: Sadsya,\n    skp: Skp,\n    tkp: Tkp,\n    photo: Photo,\n    video: Video,\n    samachaar: Samachaar,\n    suchna: Suchna,\n    nirman: Nirman,\n    master: Master,\n  };\n  const heading = {\n    prerna: \"प्रेरणास्त्रोत\",\n    gourav: \"समाज के गौरव\",\n    maargdarshan: \"समाज के मार्गदर्शक\",\n    sadsya: \"समाज की केंद्रीय समिति के सदस्य\",\n    skp: \"समाज की केंद्रीय समिति के पदाधिकारी  \",\n    tkp: \"समाज के ट्रस्ट के पदाधिकारी\",\n    photo: \"फोटो\",\n    video: \"वीडियो\",\n    samachaar: \"समाचार \",\n    suchna: \"सुचना\",\n    nirman: \"निर्माण\",\n    master:\"मास्टर\",\n  };\n  const CurrentComponent = components[type.type];\n  return (\n    <div className=\"content-wrapper\">\n      <div className=\"content-header\">\n        <div className=\"container-fluid\">\n          <div className=\"row mb-2\">\n            <div className=\"col-sm-6\">\n              <h1 className=\"m-0 text-dark\"> {heading[type.type]}</h1>\n            </div>\n          </div>\n        </div>\n      </div>\n      <section className=\"content\">\n        <div className=\"container-fluid\">\n          <SideBar />\n          <div className=\"row\">\n            <div className=\"col-12 \">\n              <div className=\"card card-primary card-tabs\">\n                <div className=\"card-header p-0 pt-1\">\n                  <ul\n                    className=\"nav nav-tabs\"\n                    id=\"custom-tabs-one-tab\"\n                    role=\"tablist\"\n                  >\n                    <li className=\"nav-item\">\n                      <a\n                        className=\"nav-link active\"\n                        id=\"custom-tabs-one-home-tab\"\n                        data-toggle=\"pill\"\n                        href=\"#custom-tabs-one-home\"\n                        role=\"tab\"\n                        aria-controls=\"custom-tabs-one-home\"\n                        aria-selected=\"true\"\n                      >\n                        Add\n                      </a>\n                    </li>\n                    <li className=\"nav-item\">\n                      <a\n                        className=\"nav-link\"\n                        id=\"custom-tabs-one-profile-tab\"\n                        data-toggle=\"pill\"\n                        href=\"#custom-tabs-one-profile\"\n                        role=\"tab\"\n                        aria-controls=\"custom-tabs-one-profile\"\n                        aria-selected=\"false\"\n                      >\n                        View\n                      </a>\n                    </li>\n                  </ul>\n                </div>\n                <div className=\"card-body\">\n                  <div className=\"tab-content\" id=\"custom-tabs-one-tabContent\">\n                    <div\n                      className=\"tab-pane fade show active\"\n                      id=\"custom-tabs-one-home\"\n                      role=\"tabpanel\"\n                      aria-labelledby=\"custom-tabs-one-home-tab\"\n                    >\n                      <CurrentComponent />\n                    </div>\n                    <div\n                      className=\"tab-pane fade\"\n                      id=\"custom-tabs-one-profile\"\n                      role=\"tabpanel\"\n                      aria-labelledby=\"custom-tabs-one-profile-tab\"\n                    >\n                      {type.type === \"photo\" || type.type === \"video\" ? (\n                        <ShowMedia type={type.type} />\n                      ) : (\n                        <SearchPeople type={type.type} />\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Layout;\n","/home/user/projects/samuhikProject/src/components/PaymentSearch.js",[],"/home/user/projects/samuhikProject/src/components/Sidebar.js",[],"/home/user/projects/samuhikProject/src/components/Due.js",["224","225"],"import React,{useState,useEffect} from \"react\";\nimport { firestore } from \"../firebase.config\";\nimport { navigate } from \"hookrouter\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useFormik } from \"formik\";\n\nexport default function Due() {\n  const [dtype, setdTypes] = useState([]);\n\n  useEffect(async () => {\n    if (localStorage.getItem(\"logged\") !== \"true\") {\n      navigate(\"/\");\n    }\n    const document = firestore.collection(\"donation_type\");\n    const activeRef = await document.get();\n    var dt = [];\n    activeRef.forEach((docs) => {\n      dt.push(docs.data());\n    });\n\n    setdTypes(dt);\n  });\n\n  const validate = (values) => {\n    const errors = {};\n    if (!values.rno) {\n      errors.rno = \"Reciept Number Required\";\n    }\n    if (!values.date) {\n      errors.date = \"Date Required\";\n    }\n    if (!values.donation) {\n      errors.donation = \"Donation Required\";\n    }\n    if (!values.amt) {\n      errors.amt = \"Amount Required\";\n    }\n    return errors;\n  };\n  const newFormik = useFormik({\n    initialValues: {\n      note: \"\",\n      rno: \"\",\n      date: \"\",\n      donation: \"\",\n      amt: \"\",\n      ntp: \"\",\n    },\n    validate,\n    onSubmit: async (values) => {\n      //console.log(values)\n      let uid = localStorage.getItem(\"userid\");\n      let id = uuidv4();\n      console.log(\"due val\", values);\n\n      const due_data = {\n        id: id,\n        uid: uid,\n        date: values.date,\n        amount: values.amt,\n        donation: values.donation,\n        reciept_no: values.rno,\n        ntp: values.ntp,\n        note: values.note,\n        type: \"due\",\n      };\n      //  console.log(due_data);\n      firestore\n        .collection(\"all_receipts\")\n        .where(\"reciept_no\", \"==\", values.rno)\n        .get()\n        .then(function (deets) {\n          if (deets.size > 0) {\n            alert(\"Reciept Number already exists\");\n          } else {\n            firestore\n              .collection(\"all_receipts\")\n              // .doc(\"AllReceipts\")\n              // .collection(\"due\")\n              .doc(id)\n              .set(due_data, { merge: true })\n              .then(function () {\n                console.log(\"success\");\n                //update in entries\n                firestore.collection(\"entries\").doc(uid).update({\n                  due: true,\n                });\n                console.log(\"updated\");\n                localStorage.removeItem(\"userid\");\n                navigate(\"/home\");\n              });\n          }\n        });\n    },\n  });\n  return (\n    <div>\n      <div>\n        <form onSubmit={newFormik.handleSubmit}>\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <div className=\"form-group\">\n                <label>रसीद नंबर </label>\n                <input\n                  type=\"text\"\n                  placeholder=\"रसीद नंबर \"\n                  name=\"rno\"\n                  className=\"form-control\"\n                  onChange={newFormik.handleChange}\n                  value={newFormik.values.rno}\n                />\n              </div>\n              {newFormik.errors.rno ? (\n                <p style={{ color: \"red\" }}>{newFormik.errors.rno}</p>\n              ) : null}\n            </div>\n            <div className=\"col-sm-6\">\n              <div className=\"form-group\">\n                <label>दिनांक </label>\n                <input\n                  type=\"date\"\n                  placeholder=\"दिनांक \"\n                  className=\"form-control\"\n                  name=\"date\"\n                  onChange={newFormik.handleChange}\n                />\n              </div>\n              {newFormik.errors.date ? (\n                <p style={{ color: \"red\" }}>{newFormik.errors.date}</p>\n              ) : null}\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <div className=\"form-group\">\n                <label>बाकी राशि </label>\n                <input\n                  type=\"number\"\n                  placeholder=\"बाकी राशि \"\n                  name=\"amt\"\n                  className=\"form-control\"\n                  onChange={newFormik.handleChange}\n                  value={newFormik.values.amt}\n                />\n              </div>\n              {newFormik.errors.amt ? (\n                <p style={{ color: \"red\" }}>{newFormik.errors.amt}</p>\n              ) : null}\n            </div>\n            <div className=\"col-sm-6\">\n              <div className=\"form-group\">\n                <label>दान के प्रकार</label>\n                <select\n                  name=\"donation\"\n                  value={newFormik.values.ddonation}\n                  className=\"form-control\"\n                  onChange={newFormik.handleChange}\n                  tw=\"w-full p-3 bg-white rounded-md font-medium border border-gray-500 text-sm focus:outline-none focus:border-gray-400\"\n                >\n                  <option value=\"\" disabled selected>\n                    Select one\n                  </option>\n                  {dtype.map((dt) => (\n                    <option value={dt.id}>{dt.name}</option>\n                  ))}\n                </select>\n              </div>\n              {newFormik.errors.donation ? (\n                <p style={{ color: \"red\" }}>{newFormik.errors.donation}</p>\n              ) : null}\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <div className=\"form-group\">\n                <label>Name to be Printed</label>\n                <input\n                  type=\"text\"\n                  placeholder=\"Name to be printed\"\n                  name=\"ntp\"\n                  className=\"form-control\"\n                  onChange={newFormik.handleChange}\n                  value={newFormik.values.ntp}\n                />\n              </div>\n              {newFormik.errors.ntp ? (\n                <p style={{ color: \"red\" }}>{newFormik.errors.ntp}</p>\n              ) : null}\n            </div>\n            <div className=\"col-sm-6\">\n              <div className=\"form-group\">\n                <label>नोट </label>\n                <input\n                  type=\"text\"\n                  placeholder=\"नोट \"\n                  name=\"note\"\n                  className=\"form-control\"\n                  value={newFormik.values.note}\n                  onChange={newFormik.handleChange}\n                />\n              </div>\n            </div>\n          </div>\n          <button type=\"submit\" className=\"btn btn-info\">\n            सबमिट{\" \"}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","/home/user/projects/samuhikProject/src/components/ProductSearch.js",[],"/home/user/projects/samuhikProject/src/pages/Suchna.js",["226","227","228"],"import React, { useState } from \"react\";\nimport SideBar from \"../components/Sidebar\";\nimport { useFormik } from \"formik\";\nimport { navigate } from \"hookrouter\";\nimport { firestore, storage } from \"../firebase.config\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Suchna = () => {\n  const validate = (values) => {\n    console.log(\"in validate\");\n    const errors = {};\n    if (!values.event) {\n      errors.event = \"Event Required\";\n    }\n\n    return errors;\n  };\n\n\n  const registerForm = useFormik({\n    initialValues: {\n      pid: uuidv4(),\n      date:\"\",\n      event:\"\",\n      note:\"\",\n    },\n    validate,\n    onSubmit: async (values) => {\n      console.log(values);\n      const data = {\n        pid: values.pid,\n        event: values.event,\n        date: values.date,\n        note: values.note,\n      };\n      firestore\n        .collection(\"suchna\")\n        .doc(values.pid)\n        .set(data, { merge: true })\n        .then(function () {\n          console.log(\"success\");\n          navigate(\"/home\");\n        });\n    },\n  });\n\n  return (\n    <div>\n      <SideBar />\n      <div\n        className=\"row\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <div>\n          <form role=\"form\" onSubmit={registerForm.handleSubmit}>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>सुचना  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"सुचना \"\n                    name=\"event\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.event}\n                  />\n                </div>\n                {registerForm.errors.event ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.event}</p>\n                ) : null}\n              </div>\n              <div className=\"col-sm-6\">\n              <div className=\"form-group\">\n                <label>दिनांक </label>\n                <input\n                  type=\"date\"\n                  placeholder=\"Date\"\n                  className=\"form-control\"\n                  name=\"date\"\n                  onChange={registerForm.handleChange}\n                />\n              </div>\n              {registerForm.errors.date ? (\n                <p style={{ color: \"red\" }}>{registerForm.errors.date}</p>\n              ) : null}\n            </div>\n            </div>\n            <div className=\"row\">\n            <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>नोट   </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"नोट  \"\n                    name=\"note\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.note}\n                  />\n                </div>\n                {registerForm.errors.note ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.note}</p>\n                ) : null}\n              </div>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-info\">\n            ऐड करे {\" \"}\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Suchna;\n","/home/user/projects/samuhikProject/src/pages/Photo.js",["229","230"],"import React, { useState } from \"react\";\nimport SideBar from \"../components/Sidebar\";\nimport { useFormik } from \"formik\";\nimport { navigate } from \"hookrouter\";\nimport { firestore, storage } from \"../firebase.config\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Photo = () => {\n  const [fieldValue, setFieldValue] = useState({});\n  var storageRef = storage.ref();\n  const [imgUrl, setImgUrl] = useState();\n\n  const validate = (values) => {\n    console.log(\"in validate\");\n    const errors = {};\n    if (!fieldValue) {\n      errors.file = \"Image Required\";\n    }\n    if (!values.event) {\n      errors.event = \"Event Required\";\n    }\n\n    return errors;\n  };\n\n  const imageUpload = async (pid) => {\n    // console.log(\"image upload\",fieldValue);\n    if (fieldValue) {\n      const uploadTask = storageRef.child(`images/${pid}`).put(fieldValue);\n\n      return new Promise((resolve, reject) => {\n        uploadTask.on(\n          \"state_changed\",\n          (snapshot) => {},\n          (error) => {\n            reject(error);\n          },\n          () => {\n            storageRef\n              .child(`images/${pid}`)\n              .getDownloadURL()\n              .then((url) => {\n                setImgUrl(url);\n                resolve(url);\n              });\n          }\n        );\n      });\n    }\n  };\n\n  const registerForm = useFormik({\n    initialValues: {\n      pid: uuidv4(),\n      event: \"\",\n      date:\"\",\n      file: \"\",\n    },\n    validate,\n    onSubmit: async (values) => {\n      console.log(values);\n      const url = await imageUpload(values.pid);\n      // console.log(\"file\",fieldValue);\n      const data = {\n        pid: values.pid,\n        event: values.event,\n        date: values.date,\n        image: url,\n      };\n      firestore\n        .collection(\"photo\")\n        .doc(values.pid)\n        .set(data, { merge: true })\n        .then(function () {\n          console.log(\"success\");\n          navigate(\"/home\");\n        });\n    },\n  });\n\n  return (\n    <div>\n      <SideBar />\n      <div\n        className=\"row\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <div>\n          <form role=\"form\" onSubmit={registerForm.handleSubmit}>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>आयोजन  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"आयोजन \"\n                    name=\"event\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.event}\n                  />\n                </div>\n                {registerForm.errors.event ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.event}</p>\n                ) : null}\n              </div>\n              <div className=\"col-sm-6\">\n              <div className=\"form-group\">\n                <label>दिनांक </label>\n                <input\n                  type=\"date\"\n                  placeholder=\"Date\"\n                  className=\"form-control\"\n                  name=\"date\"\n                  onChange={registerForm.handleChange}\n                />\n              </div>\n              {registerForm.errors.date ? (\n                <p style={{ color: \"red\" }}>{registerForm.errors.date}</p>\n              ) : null}\n            </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                {/* text input */}\n                <div className=\"form-group\">\n                  <label>फोटो </label>\n                  <input\n                    type=\"file\"\n                    className=\"form-control\"\n                    placeholder=\"फोटो\"\n                    name=\"file\"\n                    id=\"file\"\n                    // onChange={registerForm.handleChange}\n                    onChange={(event) => {\n                      setFieldValue(event.currentTarget.files[0]);\n                    }}\n                  ></input>\n                </div>\n                {registerForm.errors.file ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.file}</p>\n                ) : null}\n              </div>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-info\">\n            ऐड करे {\" \"}\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Photo;\n","/home/user/projects/samuhikProject/src/pages/Samachaar.js",["231","232","233"],"import React, { useState } from \"react\";\nimport SideBar from \"../components/Sidebar\";\nimport { useFormik } from \"formik\";\nimport { navigate } from \"hookrouter\";\nimport { firestore, storage } from \"../firebase.config\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Samachaar = () => {\n  const validate = (values) => {\n    console.log(\"in validate\");\n    const errors = {};\n    if (!values.event) {\n      errors.event = \"Event Required\";\n    }\n\n    return errors;\n  };\n\n\n  const registerForm = useFormik({\n    initialValues: {\n      pid: uuidv4(),\n      date:\"\",\n      event:\"\",\n      note:\"\",\n    },\n    validate,\n    onSubmit: async (values) => {\n      console.log(values);\n      const data = {\n        pid: values.pid,\n        event: values.event,\n        date: values.date,\n        note: values.note,\n      };\n      firestore\n        .collection(\"samachaar\")\n        .doc(values.pid)\n        .set(data, { merge: true })\n        .then(function () {\n          console.log(\"success\");\n          navigate(\"/home\");\n        });\n    },\n  });\n\n  return (\n    <div>\n      <SideBar />\n      <div\n        className=\"row\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <div>\n          <form role=\"form\" onSubmit={registerForm.handleSubmit}>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>आयोजन  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"आयोजन \"\n                    name=\"event\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.event}\n                  />\n                </div>\n                {registerForm.errors.event ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.event}</p>\n                ) : null}\n              </div>\n              <div className=\"col-sm-6\">\n              <div className=\"form-group\">\n                <label>दिनांक </label>\n                <input\n                  type=\"date\"\n                  placeholder=\"Date\"\n                  className=\"form-control\"\n                  name=\"date\"\n                  onChange={registerForm.handleChange}\n                />\n              </div>\n              {registerForm.errors.date ? (\n                <p style={{ color: \"red\" }}>{registerForm.errors.date}</p>\n              ) : null}\n            </div>\n            </div>\n            <div className=\"row\">\n            <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>नोट   </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"नोट  \"\n                    name=\"note\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.note}\n                  />\n                </div>\n                {registerForm.errors.note ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.note}</p>\n                ) : null}\n              </div>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-info\">\n            ऐड करे {\" \"}\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Samachaar;\n","/home/user/projects/samuhikProject/src/components/Row.js",["234","235","236"],"/home/user/projects/samuhikProject/src/pages/Login.js",["237"],"/home/user/projects/samuhikProject/src/pages/Reports.js",["238","239","240"],"import React,{useState,useEffect} from 'react'\nimport SideBar from '../components/Sidebar'\nimport GVSearch from '../components/GVSearch'\nimport PaymentSearch from '../components/PaymentSearch.js'\nimport ProductSearch from '../components/ProductSearch'\nimport { navigate } from \"hookrouter\";\nimport _ from 'underscore'\n\nconst Reports = () =>{\n    const [type,setType] = useState('');\n    const [finalData,setFinalData] = useState([]);\n\n    useEffect( () => {\n        if (localStorage.getItem(\"logged\") !== \"true\") {\n            navigate(\"/\");\n          }\n    },[]);\n    \n\n    const handleChange = (event) =>{\n        setType(event.target.value)\n    }\n\n\n    // const getFData = () => {\n    //     console.log(\"here\",finalData);\n    //     finalData.map((val,i) => {\n    //         //console.log(typeof val);\n    //         let ind = 0;\n    //         if(typeof val[ind] === \"object\"){\n    //             Object.entries(val[ind]).map(([key, value]) => {\n                  \n    //                 ind++;\n    //             })\n    //             setKeys(ind)\n    //         }\n            \n    //     })\n    // }\n\n    \n\n    const handleCallback = (s1,s2) =>{\n        console.log(\"rec s1\",s1);\n        console.log(\"rec s2\",s2);\n        console.log(\"merging...\");\n        var final = []\n        if(s1.length > 0 && s2.length > 0){\n            s2.map((val,i) => {\n                var data = {}\n                data = val;\n                var curId = val.uid\n                console.log(\"cur id\",val.uid);\n                s1.map((v,j) => {\n                     if(v.uid === curId ){\n                        //  console.log(\"matched val\",v);\n                        data = {...data,v}\n                     }\n                })\n                console.log(\"fdata\",data);\n                final.push(data)\n            })\n            setFinalData(final)\n        }else{\n            setFinalData(final)\n            // console.log(\"Error\");\n        }\n    }\n\n    return(\n        <div>\n        <SideBar />\n        <div className=\"content-wrapper\">\n           <section class=\"content-header\">\n             <div class=\"container-fluid\">\n                 <div class=\"row mb-2\">\n                 <div class=\"col-sm-6\">\n                     <h1>Generate Reports</h1>\n                 </div>\n                 </div>\n             </div>\n           </section>\n           <section className=\"content\">\n             <div className=\"container-fluid\">\n                 <div className=\"card\">\n                     <div className = \"card-body\">\n                        <div className=\"form-group\">\n                                 <label>Reports according to : </label>\n                                 <select \n                                     className=\"form-control\"\n                                     name=\"type\" \n                                     onChange={handleChange}\n                                     value={type}\n                                 >\n                                     <option value=\"\" disabled defaultValue=\"select\" selected>Select one</option>\n                                     <option value=\"place\">Gaadi and Village</option>\n                                     <option value=\"pt\">Payment Type</option>\n                                     <option value=\"pro\">Product</option>\n                                 </select>\n                         </div>\n                         \n                         {type === \"place\" && <GVSearch parentCallback = {handleCallback}/>}\n                         {type === \"pt\" && <PaymentSearch parentCallback = {handleCallback} />}\n                         {type === \"pro\" && <ProductSearch parentCallback = {handleCallback} />}\n                         {/* {type === \"place\" && <GVSearch st1={gvRes} setSt1={setGVRes} st2={recData} setSt2 = {setRecData} />} */}\n                         {/* {type === \"pt\" && <PaymentSearch st1={gvRes} setSt1={setGVRes} st2={recData} setSt2 = {setRecData}/>}\n                         {type === \"pro\" && <ProductSearch st1={gvRes} setSt1={setGVRes} st2={recData} setSt2 = {setRecData}/>} */}\n                         \n                        {finalData.length > 0 && <div className=\"row\">\n                         <div className=\"col-12\">\n                             <div className=\"card\">\n                             <div className=\"card-body\">\n                                 <table id=\"example2\" className=\"table table-bordered table-hover\">\n                                 <thead>\n                                     <tr>\n                                     <th>Name</th>\n                                     <th>Father's Name</th>\n                                     <th>Address</th>\n                                     <th>Village Name</th>\n                                     <th>Gaadi Name</th>\n                                     <th>Mobile Number</th>\n                                     <th>Donation For</th>\n                                     <th>Payment type</th>\n                                     <th>Date</th>\n                                     <th>Amount</th>\n                                     <th>Reciept Number</th>\n                                     <th>Name to be Printed</th>\n                                     <th>Note</th>\n                                     </tr>\n                                 </thead>\n                                 <tbody>\n                                 { finalData.map((val) => \n                                            <tr>\n                                                <td>{val.v.name}</td>\n                                                <td>{val.v.fname}</td>\n                                                <td>{val.v.address}</td>\n                                                <td>{val.v.vname}</td>\n                                                <td>{val.v.gname}</td>\n                                                <td>{val.v.mnno}</td>\n                                                <td>{val.donation}</td>\n                                                <td>{val.type}</td>\n                                                <td>{val.date}</td>\n                                                <td>{val.amount}</td>\n                                                {val.reciept_no  ?  <td>{val.reciept_no}</td> : <td>-</td>}\n                                                {val.ntp  ? <td>{val.ntp}</td> : <td>-</td>}\n                                                {val.note ? <td>{val.note}</td> : <td>-</td>}\n                                            </tr>\n                                 )}\n                                 </tbody>\n                                 \n                                 </table>\n                             </div>\n                             </div>\n                             \n                         </div>\n                         </div>}\n                     </div>\n                 </div>\n             </div>\n           </section>\n         </div>\n     </div>\n    )\n}\n\nexport default Reports","/home/user/projects/samuhikProject/src/pages/Gourav.js",["241","242"],"import React, { useState } from \"react\";\nimport SideBar from \"../components/Sidebar\";\nimport { useFormik } from \"formik\";\nimport { navigate } from \"hookrouter\";\nimport { firestore, storage } from \"../firebase.config\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Gourav = () => {\n  const [fieldValue, setFieldValue] = useState({});\n  var storageRef = storage.ref();\n  const [imgUrl, setImgUrl] = useState();\n\n  const validate = (values) => {\n    console.log(\"in validate\");\n    const errors = {};\n    if (!fieldValue) {\n      errors.file = \"Image Required\";\n    }\n    if (!values.name) {\n      errors.name = \"Name Required\";\n    }\n\n    if (values.mno && !values.mno.match(/^\\d{10}$/)) {\n      errors.mno = \"Invalid Phone Number. 10 Digits Required\";\n    }\n    return errors;\n  };\n\n  const imageUpload = async (pid) => {\n    // console.log(\"image upload\",fieldValue);\n    if (fieldValue) {\n      const uploadTask = storageRef.child(`images/${pid}`).put(fieldValue);\n\n      return new Promise((resolve, reject) => {\n        uploadTask.on(\n          \"state_changed\",\n          (snapshot) => {},\n          (error) => {\n            reject(error);\n          },\n          () => {\n            storageRef\n              .child(`images/${pid}`)\n              .getDownloadURL()\n              .then((url) => {\n                setImgUrl(url);\n                resolve(url);\n              });\n          }\n        );\n      });\n    }\n  };\n\n  const registerForm = useFormik({\n    initialValues: {\n      pid: uuidv4(),\n      name: \"\",\n      fname: \"\",\n      address: \"\",\n      mno: \"\",\n      file: \"\",\n    },\n    validate,\n    onSubmit: async (values) => {\n      console.log(values);\n      const url = await imageUpload(values.pid);\n      // console.log(\"file\",fieldValue);\n      const data = {\n        pid: values.pid,\n        name: values.name,\n        fname: values.fname,\n        address: values.address,\n        mno: values.mno,\n        image: url,\n      };\n      firestore\n        .collection(\"gourav\")\n        .doc(values.pid)\n        .set(data, { merge: true })\n        .then(function () {\n          console.log(\"success\");\n          navigate(\"/home\");\n        });\n    },\n  });\n\n  return (\n    <div>\n      <SideBar />\n      <div\n        className=\"row\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <div>\n          <form role=\"form\" onSubmit={registerForm.handleSubmit}>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>नाम </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"नाम\"\n                    name=\"name\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.name}\n                  />\n                </div>\n                {registerForm.errors.name ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.name}</p>\n                ) : null}\n              </div>\n              <div className=\"col-sm-6\">\n                {/* text input */}\n                <div className=\"form-group\">\n                  <label>पिता का नाम </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"पिता का नाम\"\n                    name=\"fname\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.fname}\n                  />\n                </div>\n                {registerForm.errors.fname ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.fname}</p>\n                ) : null}\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                {/* text input */}\n                <div className=\"form-group\">\n                  <label>फोटो </label>\n                  <input\n                    type=\"file\"\n                    className=\"form-control\"\n                    placeholder=\"फोटो\"\n                    name=\"file\"\n                    id=\"file\"\n                    // onChange={registerForm.handleChange}\n                    onChange={(event) => {\n                      setFieldValue(event.currentTarget.files[0]);\n                    }}\n                  ></input>\n                </div>\n                {registerForm.errors.file ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.file}</p>\n                ) : null}\n              </div>\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>पता </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Address\"\n                    name=\"address\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.address}\n                  />\n                </div>\n                {registerForm.errors.address ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.address}</p>\n                ) : null}\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>मोबाइल नंबर </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"मोबाइल नंबर \"\n                    name=\"mno\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.mno}\n                  />\n                </div>\n                {registerForm.errors.mno ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.mno}</p>\n                ) : null}\n              </div>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-info\">\n              रजिस्टर{\" \"}\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Gourav;\n","/home/user/projects/samuhikProject/src/pages/EditUser.js",["243","244","245"],"import React,{useState,useEffect} from 'react'\nimport SideBar from '../components/Sidebar'\nimport { firestore } from \"../firebase.config\";\nimport { navigate } from \"hookrouter\";\nimport { useFormik} from \"formik\";\n\nfunction EditUser({id}) {\n    // console.log(\"rno:\",rno);\n    const [dtypes,setdTypes] = useState([])\n    const [val,setVal] = useState({})\n    const [gaadiName,setGaadiName] = useState([]);\n    const [villageName,setVillageName] = useState([])\n    \n    useEffect(async () => {\n        if (localStorage.getItem(\"logged\") !== \"true\") {\n          navigate(\"/\");\n        }\n        const document = firestore.collection(\"donation_type\")\n        const activeRef =  await document.get()\n          var dt = [];\n          activeRef.forEach((docs) => {\n            dt.push(docs.data())\n          })\n          setdTypes(dt)\n      },[]);\n\n    useEffect(() => {\n        loadUserData()\n        loadGaadis()\n        console.log(\"val\",val);\n    },[id.id])   \n\n    const loadUserData = async() =>{\n        var userData = []\n        var recieptData = []\n        var ids;\n        const getData = firestore.collection(\"all_receipts\").where(\"id\" ,\"==\",id.id)\n        const exeGetData = await getData.get()\n        exeGetData.forEach((d) => {\n            recieptData.push(d.data())\n            ids = d.data().uid\n        })\n        const query = firestore.collection(\"entries\").where(\"uid\" ,\"==\",ids)\n        const exe = await query.get()\n        exe.forEach((d) => {\n            userData.push(d.data())\n        })\n        var final = {...userData[0],...recieptData[0]}\n        setVal(final)\n    }\n\n    const loadGaadis = async() =>{\n        const document = firestore.collection(\"gaadi_name\")\n        const activeRef =  await document.get()\n          var gaadis = [];\n          activeRef.forEach((docs) => {\n            gaadis.push(docs.data())\n          })\n          \n          setGaadiName(gaadis)\n    }\n\n    const loadVillages = async () =>{\n        if(newFormik.values.gname){\n          const coll_name = \"gaadi_name/\"+newFormik.values.gname+\"/village_name\"\n          const document = await firestore.collection(coll_name).get()\n          //console.log(\"gname\",document.docs)\n          var villages = []\n          document.docs.map((village) => {\n            villages.push(village.data())\n          })\n          // console.log(villages)\n          setVillageName(villages)\n          loadVillages()\n        }else{\n          alert(\"गादी का नाम डाले \")\n        }\n       \n      }\n\n      const validate = (values) =>{\n           \n        console.log(\"in validate\");\n          const errors = {}\n          if (!values.type) {\n            errors.type = \"Type Required\";\n          }\n          if (!values.address) {\n            errors.address = \"Address Required\";\n          }\n          if (values.type !== \"ghoshna\" && !values.reciept_no) {\n            errors.reciept_no = \"Reciept No Required\";\n          }\n          if (!values.donation) {\n            errors.donation = \"Donation Type Required\";\n          }\n          if (!values.date) {\n            errors.date = \"Date Required\";\n          }\n          if (!values.name) {\n              errors.name = \"Name Required\";\n          }\n          if (!values.vname) {\n              errors.vname = \"Village Name Required\";\n          }\n         if (!values.mnno.match(/^\\d{10}$/)) {\n            errors.mnno = \"Invalid Phone Number. 10 Digits Required\";\n          }\n          if (!values.gname) {\n              errors.gname = \"Gaadi Name Required\";\n          }\n          if (!values.amount) {\n            errors.amount = \"Amount  Required\";\n          }\n          return errors\n       }  \n\n\n    const newFormik = useFormik({\n        initialValues: val,  \n        enableReinitialize: true,\n        validate,\n        onSubmit:(values) => {\n            // console.log(values);\n            // console.log(\"val rec\",val);\n            const uid = val.uid\n            if(values.type === \"ghoshna\"){\n                values.reciept_no = \"\";\n                values.ntp = \"\"\n            }\n                \n            const user_data = {\n                address : values.address,\n                fname: values.fname,\n                due:values.type === \"due\",\n                ghoshna:values.type === \"ghoshna\",\n                received:values.type === \"received\",\n                gname:values.gname,\n                mnno:values.mnno,\n                name:values.name,\n                vname:values.vname\n            }\n            const rec_data = {\n                type: values.type,\n                amount: values.amount,\n                date: values.date,\n                donation: values.donation,\n                note: values.note,\n                ntp: values.ntp,\n                id: id.id,\n            }\n            console.log(values);\n            firestore\n                .collection(\"entries\")\n                .doc(uid)\n                .set(user_data,{merge:true})\n                .then(function () {\n                    firestore\n                        .collection(\"all_receipts\")\n                        .doc(id.id)\n                        .set(rec_data,{merge:true})\n                        .then(function() {\n                            navigate(\"/search\")\n                        })\n                })\n        }\n    })\n    return (\n        <div>\n            <SideBar />\n            <div className=\"content-wrapper\">\n                {/* ye */}\n                <div className=\"content-header\">\n                    <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                        <h1 className=\"m-0 text-dark\">Edit User</h1>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n                <section className=\"content\">\n                    <div className=\"container-fluid\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <form  onSubmit = {newFormik.handleSubmit}>\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-6\">\n                                            <div className=\"form-group\">\n                                            <label>Name</label>\n                                            <input \n                                                type=\"text\"\n                                                // placeholder=\"Name\" \n                                                className=\"form-control\" \n                                                name=\"name\"\n                                                defaultValue={newFormik.values.name}\n                                                onChange={newFormik.handleChange}\n                                            />\n                                            </div>\n                                            {newFormik.errors.name ? (<p style={{color:\"red\"}}>{ newFormik.errors.name}</p>) : null}\n                                        </div>\n                                        <div className=\"col-sm-6\">\n                                            <div className=\"form-group\">\n                                            <label>गादी का नाम </label>\n                                            <select \n                                                className=\"form-control\"\n                                                name=\"gname\" \n                                                value={newFormik.values.gname}\n                                                onChange={newFormik.handleChange}\n                                            >\n                                                <option value=\"\" disabled selected>Select one</option>\n                                                { gaadiName.map((gaadi) => \n                                                    <option  value={gaadi.id}>{gaadi.name}</option>\n                                                )}\n                                            </select>\n                                            </div>\n                                            {newFormik.errors.gname ? (<p style={{color:\"red\"}}>{ newFormik.errors.gname}</p>) : null}\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-6\">\n                                            <div className=\"form-group\" onClick ={() => loadVillages()}>\n                                            <label>गांव का नाम </label>\n                                            <select \n                                                className=\"form-control\"\n                                                name=\"vname\" \n                                                value={newFormik.values.vname}\n                                                onChange={newFormik.handleChange}\n                                            >\n                                            <option value=\"\" disabled selected>Select one</option>\n                                            { villageName.map((vname) => \n                                                <option value={vname.id}>{vname.name}</option>\n                                            )}\n                                            </select>\n                                            </div>\n                                            {newFormik.errors.vname ? (<p style={{color:\"red\"}}>{ newFormik.errors.vname}</p>) : null}\n                                        </div>\n                                        <div className=\"col-sm-6\">\n                                            <div className=\"form-group\">\n                                            <label>Address</label>\n                                            <input \n                                                type=\"text\"\n                                                // placeholder=\"Name\" \n                                                className=\"form-control\" \n                                                name=\"address\"\n                                                defaultValue={newFormik.values.address}\n                                                onChange={newFormik.handleChange}\n                                            />\n                                            </div>\n                                            {newFormik.errors.address ? (<p style={{color:\"red\"}}>{ newFormik.errors.address}</p>) : null}\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-6\">\n                                            <div className=\"form-group\">\n                                            <label>Mobile</label>\n                                            <input \n                                                type=\"text\"\n                                                // placeholder=\"Name\" \n                                                className=\"form-control\" \n                                                name=\"mnno\"\n                                                defaultValue={newFormik.values.mnno}\n                                                onChange={newFormik.handleChange}\n                                            />\n                                            </div>\n                                            {newFormik.errors.mnno ? (<p style={{color:\"red\"}}>{ newFormik.errors.mnno}</p>) : null}\n                                        </div>\n                                        <div className=\"col-sm-6\">\n                                            <div className=\"form-group\">\n                                            <label>Type</label>\n                                            <select \n                                                className=\"form-control\"\n                                                name=\"type\" \n                                                onChange={newFormik.handleChange}\n                                                value={newFormik.values.type}\n                                            >\n                                                <option value=\"\" disabled selected>Select one</option>\n                                                <option value=\"ghoshna\">Ghoshna</option>\n                                                <option value=\"due\">Due</option>\n                                                <option value=\"received\">Received</option>\n                                            </select>\n                                            </div>\n                                            {newFormik.errors.type ? (<p style={{color:\"red\"}}>{ newFormik.errors.type}</p>) : null}\n                                        </div>\n                                        \n                                    </div>\n                                    <div className=\"row\">\n                                     { newFormik.values.type !== \"ghoshna\" && \n                                     <div className=\"col-sm-6\">\n                                        <div className=\"form-group\">\n                                            <label>Reciept No</label>\n                                            <input \n                                                type=\"text\"\n                                                // placeholder=\"Name\" \n                                                className=\"form-control\" \n                                                name=\"reciept_no\"\n                                                readOnly\n                                                defaultValue={newFormik.values.reciept_no}\n                                                onChange={newFormik.handleChange}\n                                            />\n                                         </div>\n                                            {newFormik.errors.reciept_no ? (<p style={{color:\"red\"}}>{ newFormik.errors.reciept_no}</p>) : null}\n                                     </div>\n                                     \n                                     }\n                                        \n                                        <div className=\"col-sm-6\">\n                                        <div className=\"form-group\">\n                                        <label>दान के प्रकार </label>\n                                        <select \n                                            name=\"donation\"\n                                            value={newFormik.values.donation}\n                                            className=\"form-control\" \n                                            onChange={newFormik.handleChange}\n                                            tw=\"w-full p-3 bg-white rounded-md font-medium border border-gray-500 text-sm focus:outline-none focus:border-gray-400\"\n                                        >\n                                            <option value=\"\" disabled selected>Select one</option>\n                                            {dtypes.map((dt) => \n                                                <option value={dt.id}>{dt.name}</option>\n                                            )}\n                                        </select>\n                                            </div>\n                                            {newFormik.errors.donation ? (<p style={{color:\"red\"}}>{ newFormik.errors.donation}</p>) : null}\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-6\">\n                                            <div className=\"form-group\">\n                                            <label>Date</label>\n                                            <input \n                                                type=\"date\"\n                                                placeholder=\"Date\" \n                                                className=\"form-control\" \n                                                name=\"date\"\n                                                defaultValue={newFormik.values.date}\n                                                onChange={newFormik.handleChange}\n                                            />\n                                            </div>\n                                            {newFormik.errors.date ? (<p style={{color:\"red\"}}>{ newFormik.errors.date}</p>) : null}\n                                        </div>\n                                        <div className=\"col-sm-6\">\n                                        <div className=\"form-group\">\n                                            <label>Amount</label>\n                                            <input \n                                                type=\"text\"\n                                                // placeholder=\"Name\" \n                                                className=\"form-control\" \n                                                name=\"amt\"\n                                                defaultValue={newFormik.values.amount}\n                                                onChange={newFormik.handleChange}\n                                            />\n                                            </div>\n                                            {newFormik.errors.amt ? (<p style={{color:\"red\"}}>{ newFormik.errors.amt}</p>) : null}\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-6\">\n                                        <div className=\"form-group\">\n                                            <label>Note</label>\n                                            <input \n                                                type=\"text\"\n                                                // placeholder=\"Name\" \n                                                className=\"form-control\" \n                                                name=\"note\"\n                                                defaultValue={newFormik.values.note}\n                                                onChange={newFormik.handleChange}\n                                            />\n                                            </div> \n                                            \n                                        </div>\n                                        <div className=\"col-sm-6\">\n                                            <div className=\"form-group\">\n                                            <label>Name to be printed</label>\n                                            <input \n                                                type=\"text\"\n                                                // placeholder=\"Name\" \n                                                className=\"form-control\" \n                                                name=\"ntp\"\n                                                defaultValue={newFormik.values.ntp}\n                                                onChange={newFormik.handleChange}\n                                            />\n                                            </div>\n                                            \n                                        </div>\n                                    </div>\n                                    <button type=\"submit\" className=\"btn btn-info\">Edit  </button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n        </div>\n    )\n}\n\nexport default EditUser\n","/home/user/projects/samuhikProject/src/firebase.config.js",[],"/home/user/projects/samuhikProject/src/components/Received.js",["246","247","248"],"/home/user/projects/samuhikProject/src/pages/Video.js",["249","250"],"import React, { useState } from \"react\";\nimport SideBar from \"../components/Sidebar\";\nimport { useFormik } from \"formik\";\nimport { navigate } from \"hookrouter\";\nimport { firestore, storage } from \"../firebase.config\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Video = () => {\n  const [fieldValue, setFieldValue] = useState({});\n  const [uploadPercent, setUploadPercent] = useState(0);\n  const [imgUrl, setImgUrl] = useState();\n  \n  var storageRef = storage.ref();\n\n  const validate = (values) => {\n    console.log(\"in validate\");\n    const errors = {};\n    if (!fieldValue) {\n      errors.file = \"Video Required\";\n    }\n    if (!values.event) {\n      errors.event = \"Event Required\";\n    }\n\n    return errors;\n  };\n\n  const videoUpload = async (pid) => {\n    // console.log(\"image upload\",fieldValue);\n    if (fieldValue) {\n      var metadata = {\n        contentType: fieldValue.type,\n      };\n      const uploadTask = storageRef.child(`video/${pid}`).put(fieldValue,metadata);\n\n      return new Promise((resolve, reject) => {\n        uploadTask.on(\n          \"state_changed\",\n          (snapshot) => {\n            var progress =\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                setUploadPercent(progress);\n            console.log(\"Upload is \" + progress + \"% done\");\n          },\n          (error) => {\n            reject(error);\n          },\n          () => {\n            storageRef\n              .child(`video/${pid}`)\n              .getDownloadURL()\n              .then((url) => {\n                setImgUrl(url);\n                resolve(url);\n              });\n          }\n        );\n      });\n    }\n  };\n\n  const registerForm = useFormik({\n    initialValues: {\n      pid: uuidv4(),\n      event: \"\",\n      date:\"\",\n      file: \"\",\n    },\n    validate,\n    onSubmit: async (values) => {\n      console.log(values);\n      const url = await videoUpload(values.pid);\n      // console.log(\"file\",fieldValue);\n      const data = {\n        pid: values.pid,\n        event: values.event,\n        date: values.date,\n        video: url,\n      };\n      firestore\n        .collection(\"video\")\n        .doc(values.pid)\n        .set(data, { merge: true })\n        .then(function () {\n          console.log(\"success\");\n          navigate(\"/home\");\n        });\n    },\n  });\n\n  return (\n    <div>\n      <SideBar />\n      <div\n        className=\"row\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <div>\n          <form role=\"form\" onSubmit={registerForm.handleSubmit}>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>आयोजन </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"आयोजन \"\n                    name=\"event\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.event}\n                  />\n                </div>\n                {registerForm.errors.event ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.event}</p>\n                ) : null}\n              </div>\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>दिनांक </label>\n                  <input\n                    type=\"date\"\n                    placeholder=\"Date\"\n                    className=\"form-control\"\n                    name=\"date\"\n                    onChange={registerForm.handleChange}\n                  />\n                </div>\n                {registerForm.errors.date ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.date}</p>\n                ) : null}\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                {/* text input */}\n                <div className=\"form-group\">\n                  <label>फोटो </label>\n                  <input\n                    type=\"file\"\n                    className=\"form-control\"\n                    placeholder=\"फोटो\"\n                    name=\"file\"\n                    id=\"file\"\n                    // onChange={registerForm.handleChange}\n                    onChange={(event) => {\n                      setFieldValue(event.currentTarget.files[0]);\n                    }}\n                  ></input>\n                </div>\n                {registerForm.errors.file ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.file}</p>\n                ) : null}\n                {uploadPercent ? (\n                    <span>\n                      Video Upload Progress: {uploadPercent}\n                      {\"%\"}\n                    </span>\n                  ) : null}\n              </div>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-info\">\n              ऐड करे{\" \"}\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Video;\n","/home/user/projects/samuhikProject/src/components/DonationMaster.js",["251","252","253","254"],"import React, { useEffect, useState } from \"react\";\nimport { firestore } from \"../firebase.config\";\nimport { navigate } from \"hookrouter\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useFormik } from \"formik\";\n\nexport default function DonationMaster() {\n  const [dtype, setdTypes] = useState([]);\n  const [showResult, setShowResult] = useState(false);\n  const [showForm, setShowForm] = useState(false);\n\n  useEffect(async () => {\n    if (localStorage.getItem(\"logged\") !== \"true\") {\n      navigate(\"/\");\n    }\n    const document = firestore.collection(\"donation_type\");\n    const activeRef = await document.get();\n    var dt = [];\n    activeRef.forEach((docs) => {\n      dt.push(docs.data());\n    });\n\n    setdTypes(dt);\n    setShowResult(true);\n  });\n\n  const changeState = () => {\n    console.log(\"changinhg\");\n    setShowForm(!showForm);\n  };\n\n  const deleteType = (id) => {\n    var data = [];\n    dtype.map((d) => {\n      if (d.id !== id) {\n        data.push(d);\n      }\n    });\n    // console.log(data);\n    setShowResult(data);\n    const query = firestore\n      .collection(\"donation_type\")\n      .where(\"id\", \"==\", id);\n    const exe = query.get().then(function (q) {\n      q.forEach(function (doc) {\n        doc.ref.delete();\n        alert(\"Donation Type Deleted\");\n      });\n    });\n  };\n\n  const validate = (values) => {\n    const errors = {};\n    if (!values.name) {\n      errors.name = \"Name Required\";\n    }\n\n    return errors;\n  };\n  const newFormik = useFormik({\n    initialValues: {\n      id: \"\",\n      name: \"\",\n    },\n    validate,\n    onSubmit: (values) => {\n      console.log(values);\n      let id = uuidv4();\n      const data = {\n        id: id,\n        name: values.name,\n      };\n      console.log(data);\n      firestore\n        .collection(\"donation_type\")\n        .doc(id)\n        .set(data, { merge: true })\n        .then(function () {\n          console.log(\"success\");\n          navigate(\"/home\");\n        });\n    },\n  });\n\n  return (\n    <div>\n      {showResult && (\n        <div>\n          <table id=\"example2\" className=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th>Donation Type</th>\n                <th>Delete</th>\n              </tr>\n            </thead>\n            <tbody>\n              {dtype.map((val, i) => (\n                <tr>\n                  <td>{val.name}</td>\n                  <td>\n                    <span\n                      onClick={() => deleteType(val.id)}\n                      style={{ color: \"blue\" }}\n                    >\n                      <i className=\"fas fa-trash\" style={{ color: \"red\" }}></i>\n                    </span>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              flexDirection: \"row\",\n              width: \"10%\",\n              backgroundColor: \"#007bff\",\n              padding: \"8px\",\n            }}\n            onClick={() => changeState()}\n          >\n            <i className=\"fas fa-plus\" style={{ color: \"black\" }}></i>\n            <h6>Add New</h6>\n          </div>\n        </div>\n      )}\n      <div>\n        {showForm && (\n          <form onSubmit={newFormik.handleSubmit}>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>नाम </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"नाम\"\n                    name=\"name\"\n                    onChange={newFormik.handleChange}\n                    value={newFormik.values.name}\n                  />\n                </div>\n                {newFormik.errors.name ? (\n                  <p style={{ color: \"red\" }}>{newFormik.errors.name}</p>\n                ) : null}\n              </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-info\">\n              सबमिट{\" \"}\n            </button>\n          </form>\n        )}\n      </div>\n    </div>\n  );\n}\n","/home/user/projects/samuhikProject/src/components/Display.js",["255","256","257","258"],"import React, { useEffect,useState } from 'react'\n\nexport default function Display(props) {\n    const [finalData, setFinalData] = useState([])\n    useEffect(() => {\n      var recData = [];\n      console.log(\"props\",props.uData);\n\n    },[])\n    return (\n        // <div>\n             <tbody>\n                                 {/* {finalData && finalData.map((val,i) => {\n                                     let ind = 0\n                                     val[ind].map((sub,j) => {\n                                     <tr>\n                                        <td>{val.name}</td>\n                                        <td>{val.fname}</td>\n                                        <td>{val.address}</td>\n                                        <td>{val.vname}</td>\n                                        <td>{val.gname}</td>\n                                        <td>{val.mnno}</td>\n                                        <td>{sub.donation}</td>\n                                        <td>{sub.type}</td>\n                                        <td>{sub.date}</td>\n                                        <td>{sub.amount}</td>\n                                        {sub.reciept_no  && <td>{sub.reciept_no}</td>}\n                                        {sub.ntp  &&<td>{sub.ntp}</td>}\n                                        <td>{sub.note}</td>\n                                    </tr>\n                                    ind++;\n                                    })\n                                })} */}\n                                 \n             </tbody>\n                        \n        // </div>\n    )\n}\n","/home/user/projects/samuhikProject/src/components/ShowMedia.js",["259","260","261","262","263"],"import React, { useState, useEffect } from \"react\";\nimport { navigate } from \"hookrouter\";\nimport { firestore, storage } from \"../firebase.config\";\nimport ReactPlayer from \"react-player\";\n\nexport default function ShowMedia({ type }) {\n  const [finalData, setFinalData] = useState([]);\n  var storageRef = storage.ref();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const query = firestore.collection(type);\n      const exeQuery = await query.get();\n      var data = [];\n\n      exeQuery.forEach((d) => {\n        data.push(d.data());\n      });\n\n      console.log(\"data\", data);\n      setFinalData(data);\n    };\n    fetchData();\n  }, []);\n\n  const deleteMedia = (id) => {\n    var data = [];\n    finalData.map((d) => {\n      if (d.pid !== id) {\n        data.push(d);\n      }\n    });\n    // console.log(data);\n    setFinalData(data);\n    const query = firestore.collection(type).where(\"pid\", \"==\", id);\n    const exe = query.get().then(function (q) {\n      q.forEach(function (doc) {\n        doc.ref.delete();\n        var folder = type === \"photo\" ? \"images\" :\"video\"\n        const delRef = storageRef.child(`${folder}/${id}`);\n        delRef\n          .delete()\n          .then(function () {\n            alert(\"Media deleted\");\n          })\n          .catch(function (err) {\n            console.log(\"Error deleting\");\n          });\n      });\n    });\n  };\n  return (\n    <div>\n      {finalData.length > 0 && (\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n          {finalData.map((val, i) => (\n            <div style={{ flexBasis: \"33.33%\" }}>\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <div className=\"card-title\">\n                    <h3>{val.event}</h3>\n                  </div>\n                </div>\n                <div className=\"card-body\">\n                  {type === \"photo\" ? (\n                    <img\n                      src={val.image}\n                      style={{ width: \"100%\", height: \"100%\" }}\n                    />\n                  ) : (\n                    <ReactPlayer url={val.video} controls={true} width=\"100%\" />\n                  )}\n                </div>\n                <div className=\"card-footer\">\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      flexDirection: \"row\",\n                      flexWrap: \"wrap\",\n                    }}\n                  >\n                    <h6>{val.date}</h6>\n                    <div>\n                      <span\n                        onClick={() => deleteMedia(val.pid)}\n                        style={{ color: \"blue\" }}\n                      >\n                        <i\n                          className=\"fas fa-trash\"\n                          style={{ color: \"red\" }}\n                        ></i>\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n","/home/user/projects/samuhikProject/src/App.js",[],"/home/user/projects/samuhikProject/src/components/Ghoshna.js",["264","265"],"/home/user/projects/samuhikProject/src/components/RegNoSearch.js",[],"/home/user/projects/samuhikProject/src/pages/Nirman.js",["266","267"],"import React, { useState } from \"react\";\nimport SideBar from \"../components/Sidebar\";\nimport { useFormik } from \"formik\";\nimport { navigate } from \"hookrouter\";\nimport { firestore, storage } from \"../firebase.config\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Nirman = () => {\n  const [fieldValue, setFieldValue] = useState({});\n  var storageRef = storage.ref();\n  const [imgUrl, setImgUrl] = useState();\n\n  const validate = (values) => {\n    console.log(\"in validate\");\n    const errors = {};\n    if (!fieldValue) {\n      errors.file = \"Image Required\";\n    }\n    if (!values.name) {\n      errors.name = \"Name Required\";\n    }\n\n    if (values.mno && !values.mno.match(/^\\d{10}$/)) {\n      errors.mno = \"Invalid Phone Number. 10 Digits Required\";\n    }\n    return errors;\n  };\n\n  const imageUpload = async (pid) => {\n    // console.log(\"image upload\",fieldValue);\n    if (fieldValue) {\n      const uploadTask = storageRef.child(`images/${pid}`).put(fieldValue);\n\n      return new Promise((resolve, reject) => {\n        uploadTask.on(\n          \"state_changed\",\n          (snapshot) => {},\n          (error) => {\n            reject(error);\n          },\n          () => {\n            storageRef\n              .child(`images/${pid}`)\n              .getDownloadURL()\n              .then((url) => {\n                setImgUrl(url);\n                resolve(url);\n              });\n          }\n        );\n      });\n    }\n  };\n\n  const registerForm = useFormik({\n    initialValues: {\n      pid: uuidv4(),\n      name: \"\",\n      fname: \"\",\n      address: \"\",\n      mno: \"\",\n      file: \"\",\n    },\n    validate,\n    onSubmit: async (values) => {\n      console.log(values);\n      const url = await imageUpload(values.pid);\n      // console.log(\"file\",fieldValue);\n      const data = {\n        pid: values.pid,\n        name: values.name,\n        fname: values.fname,\n        address: values.address,\n        mno: values.mno,\n        image: url,\n      };\n      firestore\n        .collection(\"nirman\")\n        .doc(values.pid)\n        .set(data, { merge: true })\n        .then(function () {\n          console.log(\"success\");\n          navigate(\"/home\");\n        });\n    },\n  });\n\n  return (\n    <div>\n      <SideBar />\n      <div\n        className=\"row\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <div>\n          <form role=\"form\" onSubmit={registerForm.handleSubmit}>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>नाम </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"नाम\"\n                    name=\"name\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.name}\n                  />\n                </div>\n                {registerForm.errors.name ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.name}</p>\n                ) : null}\n              </div>\n              <div className=\"col-sm-6\">\n                {/* text input */}\n                <div className=\"form-group\">\n                  <label>पिता का नाम </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"पिता का नाम\"\n                    name=\"fname\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.fname}\n                  />\n                </div>\n                {registerForm.errors.fname ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.fname}</p>\n                ) : null}\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                {/* text input */}\n                <div className=\"form-group\">\n                  <label>फोटो </label>\n                  <input\n                    type=\"file\"\n                    className=\"form-control\"\n                    placeholder=\"फोटो\"\n                    name=\"file\"\n                    id=\"file\"\n                    // onChange={registerForm.handleChange}\n                    onChange={(event) => {\n                      setFieldValue(event.currentTarget.files[0]);\n                    }}\n                  ></input>\n                </div>\n                {registerForm.errors.file ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.file}</p>\n                ) : null}\n              </div>\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>पता </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Address\"\n                    name=\"address\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.address}\n                  />\n                </div>\n                {registerForm.errors.address ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.address}</p>\n                ) : null}\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>मोबाइल नंबर </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"मोबाइल नंबर \"\n                    name=\"mno\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.mno}\n                  />\n                </div>\n                {registerForm.errors.mno ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.mno}</p>\n                ) : null}\n              </div>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-info\">\n              रजिस्टर{\" \"}\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Nirman;\n","/home/user/projects/samuhikProject/src/pages/Tkp.js",["268","269"],"import React, { useState } from \"react\";\nimport SideBar from \"../components/Sidebar\";\nimport { useFormik } from \"formik\";\nimport { navigate } from \"hookrouter\";\nimport { firestore, storage } from \"../firebase.config\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Tkp = () => {\n  const [fieldValue, setFieldValue] = useState({});\n  var storageRef = storage.ref();\n  const [imgUrl, setImgUrl] = useState();\n\n  const validate = (values) => {\n    console.log(\"in validate\");\n    const errors = {};\n    if (!fieldValue) {\n      errors.file = \"Image Required\";\n    }\n    if (!values.name) {\n      errors.name = \"Name Required\";\n    }\n\n    if (values.mno && !values.mno.match(/^\\d{10}$/)) {\n      errors.mno = \"Invalid Phone Number. 10 Digits Required\";\n    }\n    return errors;\n  };\n\n  const imageUpload = async (pid) => {\n    // console.log(\"image upload\",fieldValue);\n    if (fieldValue) {\n      const uploadTask = storageRef.child(`images/${pid}`).put(fieldValue);\n\n      return new Promise((resolve, reject) => {\n        uploadTask.on(\n          \"state_changed\",\n          (snapshot) => {},\n          (error) => {\n            reject(error);\n          },\n          () => {\n            storageRef\n              .child(`images/${pid}`)\n              .getDownloadURL()\n              .then((url) => {\n                setImgUrl(url);\n                resolve(url);\n              });\n          }\n        );\n      });\n    }\n  };\n\n  const registerForm = useFormik({\n    initialValues: {\n      pid: uuidv4(),\n      name: \"\",\n      fname: \"\",\n      address: \"\",\n      mno: \"\",\n      file: \"\",\n    },\n    validate,\n    onSubmit: async (values) => {\n      console.log(values);\n      const url = await imageUpload(values.pid);\n      // console.log(\"file\",fieldValue);\n      const data = {\n        pid: values.pid,\n        name: values.name,\n        fname: values.fname,\n        address: values.address,\n        mno: values.mno,\n        image: url,\n      };\n      firestore\n        .collection(\"tkp\")\n        .doc(values.pid)\n        .set(data, { merge: true })\n        .then(function () {\n          console.log(\"success\");\n          navigate(\"/home\");\n        });\n    },\n  });\n\n  return (\n    <div>\n      <SideBar />\n      <div\n        className=\"row\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <div>\n          <form role=\"form\" onSubmit={registerForm.handleSubmit}>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>नाम </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"नाम\"\n                    name=\"name\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.name}\n                  />\n                </div>\n                {registerForm.errors.name ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.name}</p>\n                ) : null}\n              </div>\n              <div className=\"col-sm-6\">\n                {/* text input */}\n                <div className=\"form-group\">\n                  <label>पिता का नाम </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"पिता का नाम\"\n                    name=\"fname\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.fname}\n                  />\n                </div>\n                {registerForm.errors.fname ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.fname}</p>\n                ) : null}\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                {/* text input */}\n                <div className=\"form-group\">\n                  <label>फोटो </label>\n                  <input\n                    type=\"file\"\n                    className=\"form-control\"\n                    placeholder=\"फोटो\"\n                    name=\"file\"\n                    id=\"file\"\n                    // onChange={registerForm.handleChange}\n                    onChange={(event) => {\n                      setFieldValue(event.currentTarget.files[0]);\n                    }}\n                  ></input>\n                </div>\n                {registerForm.errors.file ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.file}</p>\n                ) : null}\n              </div>\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>पता </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Address\"\n                    name=\"address\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.address}\n                  />\n                </div>\n                {registerForm.errors.address ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.address}</p>\n                ) : null}\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>मोबाइल नंबर </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"मोबाइल नंबर \"\n                    name=\"mno\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.mno}\n                  />\n                </div>\n                {registerForm.errors.mno ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.mno}</p>\n                ) : null}\n              </div>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-info\">\n              रजिस्टर{\" \"}\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Tkp;\n","/home/user/projects/samuhikProject/src/index.js",[],"/home/user/projects/samuhikProject/src/components/GVSearch.js",["270","271","272","273"],"import React,{useState,useEffect} from \"react\"\nimport { firestore } from \"../firebase.config\";\nimport { navigate } from \"hookrouter\";\nimport { useFormik,} from \"formik\";\nimport _ from 'underscore'\nimport Display from './Display'\n\nconst GVSearch = (props) => {\n    const [gaadiName,setGaadiName] = useState([]);\n    const [villageName,setVillageName] = useState([])  \n    const [usersData, setUserData] = useState([]);\n    const [recData, setRecData] = useState([]);\n\n    useEffect( () => {\n        if (localStorage.getItem(\"logged\") !== \"true\") {\n            navigate(\"/\");\n          }\n          loadGaadis()\n    },[]);\n    \n\n    const loadGaadis = async() =>{\n        const document = firestore.collection(\"gaadi_name\")\n        const activeRef =  await document.get()\n          var gaadis = [];\n          activeRef.forEach((docs) => {\n            gaadis.push(docs.data())\n          })\n          \n        setGaadiName(gaadis)\n    }\n\n    const loadVillages = async () =>{\n        if(searchForm.values.gname){\n          const coll_name = \"gaadi_name/\"+searchForm.values.gname+\"/village_name\"\n          const document = await firestore.collection(coll_name).get()\n          //console.log(\"gname\",document.docs)\n          var villages = []\n          document.docs.map((village) => {\n            villages.push(village.data())\n          })\n          // console.log(villages)\n          setVillageName(villages)\n        }else{\n          alert(\"गादी का नाम डाले \")\n        }\n       \n    }\n\n    const mergeData = () =>{\n        // console.log(\"ud \",usersData);\n        // console.log(\"rec \",recData);\n        // console.log(\"ud len\",usersData.length);\n        //  console.log(\"rec len\",recData.length);\n        if(usersData.length > 0 && recData.length > 0)\n           {\n                console.log(\"callback userdata\",usersData);\n                console.log(\"callback recData\",recData);    \n                props.parentCallback(usersData,recData)\n            }else if( usersData.length === 0 || recData.length === 0){\n                props.parentCallback(usersData,recData)\n                alert(\"No data found\")\n\n            }\n    }\n\n   \n    const searchForm = useFormik({\n        initialValues:{\n          gname:\"\",\n          vname:\"\",\n        },\n        onSubmit: async(values) => {\n            console.log(values);\n            if(values.gname.length > 0 && values.vname.length > 0){\n                const query = firestore.collection(\"entries\").where(\"gname\",\"==\",values.gname) .where(\"vname\",\"==\",values.vname) \n                const exeQuery = await query.get();\n                let userData = []\n                let ids = []\n                let recieptData = []\n\n                for(const doc of exeQuery.docs){\n                    userData.push(doc.data())\n                    ids.push(doc.id);\n                }\n                setUserData(userData)\n                ids.forEach(async (id) => {\n                    const getData = firestore.collection(\"all_receipts\").where(\"uid\" ,\"==\",id)\n                    const exeGetData = await getData.get()\n                   for(const d of exeGetData.docs){\n                        recieptData.push(d.data())\n                    }\n                    setRecData(recieptData)\n                })    \n                 \n            mergeData() \n\n            }else if(values.gname.length > 0  && values.vname.length === 0){\n                const query = firestore.collection(\"entries\").where(\"gname\",\"==\",values.gname)\n                const exeQuery = await query.get();\n                var userData = []\n                var ids = []\n                var recieptData = []\n               \n                exeQuery.forEach((d) => {\n                    userData.push(d.data())\n                    ids.push(d.id);\n                })\n                console.log(userData);\n                setUserData(userData)\n                ids.forEach(async (id) => {\n                    const getData = firestore.collection(\"all_receipts\").where(\"uid\" ,\"==\",id)\n                    const exeGetData = await getData.get()\n                    exeGetData.forEach((d) => {\n                         recieptData.push(d.data())\n                    })\n                    setRecData(recieptData)\n                })    \n                 \n                mergeData()\n            }\n        }\n    })\n\n    return(\n        <div>\n           <form onSubmit ={searchForm.handleSubmit}>\n                <div className=\"row\">\n                        <div className=\"col-sm-6\">\n                            <div className=\"form-group\">\n                                <label>गादी का नाम </label>\n                                <select \n                                    className=\"form-control\"\n                                    name=\"gname\" \n                                    value={searchForm.values.gname}\n                                    onChange={searchForm.handleChange}\n                                >\n                                    <option value=\"\" disabled defaultValue=\"select\">Select one</option>\n                                        { gaadiName.map((gaadi) => \n                                        <option value={gaadi.id}>{gaadi.name}</option>\n                                        )}\n                                </select>\n                            </div>\n                         </div>\n                            <div className=\"col-sm-6\">\n                                <div className=\"form-group\" onClick ={() => loadVillages()}>\n                                    <label>गांव का नाम </label>\n                                    <select \n                                        className=\"form-control\"\n                                        name=\"vname\" \n                                        value={searchForm.values.vname}\n                                        onChange={searchForm.handleChange}\n                                    >\n                                        <option value=\"\" disabled defaultValue=\"select\">Select one</option>\n                                            { villageName.map((vname) => \n                                            <option value={vname.id}>{vname.name}</option>\n                                            )}\n                                    </select>\n                                </div>\n                           </div>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-info\">Search </button>\n           </form>\n           {/* <div>\n        //    {usersData && <div className=\"row\">\n        //                  <div className=\"col-12\">\n        //                      <div className=\"card\">\n        //                      <div className=\"card-body\">\n        //                          <table id=\"example2\" className=\"table table-bordered table-hover\">\n        //                          <thead>\n        //                              <tr>\n        //                              <th>Name</th>\n        //                              <th>Father's Name</th>\n        //                              <th>Address</th>\n        //                              <th>Village Name</th>\n        //                              <th>Gaadi Name</th>\n        //                              <th>Mobile Number</th>\n        //                              <th>Donation For</th>\n        //                              <th>Payment type</th>\n        //                              <th>Date</th>\n        //                              <th>Amount</th>\n        //                              <th>Reciept Number</th>\n        //                              <th>Name to be Printed</th>\n        //                              <th>Note</th>\n        //                              </tr>\n        //                          </thead>\n        //                             {usersData.map((val,i) =>{\n        //                                 // console.log(val)\n        //                                 <Display uData = {val}  index = {i} />\n        //                             })}\n        //                          </table>\n        //                      </div>\n        //                      </div>\n                             \n        //                  </div>\n        //                  </div>\n        // </div>   */}\n        </div>\n    )\n}\n\nexport default GVSearch","/home/user/projects/samuhikProject/src/components/GaadiMaster.js",[],"/home/user/projects/samuhikProject/src/pages/SearchEntry.js",["274","275","276","277","278","279"],"/home/user/projects/samuhikProject/src/pages/MaargDarshan.js",["280","281"],"/home/user/projects/samuhikProject/src/pages/Skp.js",["282","283"],{"ruleId":"284","replacedBy":"285"},{"ruleId":"286","replacedBy":"287"},{"ruleId":"288","severity":1,"message":"289","line":3,"column":21,"nodeType":"290","messageId":"291","endLine":3,"endColumn":28},{"ruleId":"288","severity":1,"message":"292","line":4,"column":10,"nodeType":"290","messageId":"291","endLine":4,"endColumn":31},{"ruleId":"288","severity":1,"message":"293","line":8,"column":9,"nodeType":"290","messageId":"291","endLine":8,"endColumn":12},{"ruleId":"288","severity":1,"message":"294","line":8,"column":13,"nodeType":"290","messageId":"291","endLine":8,"endColumn":20},{"ruleId":"295","severity":1,"message":"296","line":30,"column":6,"nodeType":"297","endLine":30,"endColumn":8,"suggestions":"298"},{"ruleId":"299","severity":1,"message":"300","line":34,"column":23,"nodeType":"301","messageId":"302","endLine":34,"endColumn":25},{"ruleId":"288","severity":1,"message":"303","line":44,"column":11,"nodeType":"290","messageId":"291","endLine":44,"endColumn":14},{"ruleId":"304","severity":1,"message":"305","line":79,"column":21,"nodeType":"306","endLine":79,"endColumn":80},{"ruleId":"284","replacedBy":"307"},{"ruleId":"286","replacedBy":"308"},{"ruleId":"288","severity":1,"message":"309","line":4,"column":16,"nodeType":"290","messageId":"291","endLine":4,"endColumn":22},{"ruleId":"288","severity":1,"message":"310","line":10,"column":10,"nodeType":"290","messageId":"291","endLine":10,"endColumn":16},{"ruleId":"295","severity":1,"message":"311","line":25,"column":6,"nodeType":"297","endLine":25,"endColumn":8,"suggestions":"312"},{"ruleId":"288","severity":1,"message":"313","line":43,"column":9,"nodeType":"290","messageId":"291","endLine":43,"endColumn":17},{"ruleId":"314","severity":1,"message":"315","line":137,"column":19,"nodeType":"306","endLine":137,"endColumn":74},{"ruleId":"304","severity":1,"message":"305","line":143,"column":27,"nodeType":"306","endLine":146,"endColumn":29},{"ruleId":"284","replacedBy":"316"},{"ruleId":"286","replacedBy":"317"},{"ruleId":"288","severity":1,"message":"318","line":10,"column":10,"nodeType":"290","messageId":"291","endLine":10,"endColumn":16},{"ruleId":"288","severity":1,"message":"319","line":12,"column":7,"nodeType":"290","messageId":"291","endLine":12,"endColumn":10},{"ruleId":"295","severity":1,"message":"320","line":14,"column":3,"nodeType":"290","endLine":14,"endColumn":12,"suggestions":"321"},{"ruleId":"295","severity":1,"message":"322","line":14,"column":13,"nodeType":"301","endLine":26,"endColumn":4},{"ruleId":"323","severity":1,"message":"324","line":35,"column":81,"nodeType":"325","messageId":"326","endLine":35,"endColumn":82},{"ruleId":"323","severity":1,"message":"324","line":45,"column":86,"nodeType":"325","messageId":"326","endLine":45,"endColumn":87},{"ruleId":"323","severity":1,"message":"324","line":57,"column":86,"nodeType":"325","messageId":"326","endLine":57,"endColumn":87},{"ruleId":"323","severity":1,"message":"324","line":73,"column":81,"nodeType":"325","messageId":"326","endLine":73,"endColumn":82},{"ruleId":"323","severity":1,"message":"324","line":83,"column":86,"nodeType":"325","messageId":"326","endLine":83,"endColumn":87},{"ruleId":"323","severity":1,"message":"324","line":92,"column":86,"nodeType":"325","messageId":"326","endLine":92,"endColumn":87},{"ruleId":"323","severity":1,"message":"324","line":104,"column":81,"nodeType":"325","messageId":"326","endLine":104,"endColumn":82},{"ruleId":"323","severity":1,"message":"324","line":114,"column":86,"nodeType":"325","messageId":"326","endLine":114,"endColumn":87},{"ruleId":"323","severity":1,"message":"324","line":123,"column":86,"nodeType":"325","messageId":"326","endLine":123,"endColumn":87},{"ruleId":"323","severity":1,"message":"324","line":132,"column":86,"nodeType":"325","messageId":"326","endLine":132,"endColumn":87},{"ruleId":"323","severity":1,"message":"324","line":154,"column":86,"nodeType":"325","messageId":"326","endLine":154,"endColumn":87},{"ruleId":"288","severity":1,"message":"310","line":11,"column":10,"nodeType":"290","messageId":"291","endLine":11,"endColumn":16},{"ruleId":"314","severity":1,"message":"315","line":100,"column":11,"nodeType":"306","endLine":100,"endColumn":66},{"ruleId":"288","severity":1,"message":"327","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":26},{"ruleId":"288","severity":1,"message":"310","line":10,"column":10,"nodeType":"290","messageId":"291","endLine":10,"endColumn":16},{"ruleId":"314","severity":1,"message":"315","line":101,"column":11,"nodeType":"306","endLine":101,"endColumn":66},{"ruleId":"295","severity":1,"message":"322","line":10,"column":13,"nodeType":"301","endLine":14,"endColumn":4},{"ruleId":"288","severity":1,"message":"313","line":21,"column":9,"nodeType":"290","messageId":"291","endLine":21,"endColumn":17},{"ruleId":"288","severity":1,"message":"328","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":25},{"ruleId":"295","severity":1,"message":"320","line":10,"column":3,"nodeType":"290","endLine":10,"endColumn":12,"suggestions":"329"},{"ruleId":"295","severity":1,"message":"322","line":10,"column":13,"nodeType":"301","endLine":22,"endColumn":4},{"ruleId":"288","severity":1,"message":"328","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":25},{"ruleId":"288","severity":1,"message":"289","line":5,"column":21,"nodeType":"290","messageId":"291","endLine":5,"endColumn":28},{"ruleId":"314","severity":1,"message":"315","line":59,"column":11,"nodeType":"306","endLine":59,"endColumn":66},{"ruleId":"288","severity":1,"message":"310","line":11,"column":10,"nodeType":"290","messageId":"291","endLine":11,"endColumn":16},{"ruleId":"314","severity":1,"message":"315","line":93,"column":11,"nodeType":"306","endLine":93,"endColumn":66},{"ruleId":"288","severity":1,"message":"328","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":25},{"ruleId":"288","severity":1,"message":"289","line":5,"column":21,"nodeType":"290","messageId":"291","endLine":5,"endColumn":28},{"ruleId":"314","severity":1,"message":"315","line":59,"column":11,"nodeType":"306","endLine":59,"endColumn":66},{"ruleId":"295","severity":1,"message":"330","line":10,"column":5,"nodeType":"297","endLine":10,"endColumn":7,"suggestions":"331"},{"ruleId":"299","severity":1,"message":"300","line":36,"column":32,"nodeType":"301","messageId":"302","endLine":36,"endColumn":34},{"ruleId":"288","severity":1,"message":"303","line":44,"column":15,"nodeType":"290","messageId":"291","endLine":44,"endColumn":18},{"ruleId":"314","severity":1,"message":"315","line":51,"column":21,"nodeType":"306","endLine":51,"endColumn":77},{"ruleId":"288","severity":1,"message":"332","line":7,"column":8,"nodeType":"290","messageId":"291","endLine":7,"endColumn":9},{"ruleId":"299","severity":1,"message":"300","line":49,"column":28,"nodeType":"301","messageId":"302","endLine":49,"endColumn":30},{"ruleId":"299","severity":1,"message":"300","line":54,"column":30,"nodeType":"301","messageId":"302","endLine":54,"endColumn":32},{"ruleId":"288","severity":1,"message":"310","line":11,"column":10,"nodeType":"290","messageId":"291","endLine":11,"endColumn":16},{"ruleId":"314","severity":1,"message":"315","line":100,"column":11,"nodeType":"306","endLine":100,"endColumn":66},{"ruleId":"295","severity":1,"message":"322","line":14,"column":15,"nodeType":"301","endLine":25,"endColumn":8},{"ruleId":"295","severity":1,"message":"333","line":31,"column":7,"nodeType":"297","endLine":31,"endColumn":14,"suggestions":"334"},{"ruleId":"299","severity":1,"message":"300","line":69,"column":39,"nodeType":"301","messageId":"302","endLine":69,"endColumn":41},{"ruleId":"295","severity":1,"message":"320","line":10,"column":3,"nodeType":"290","endLine":10,"endColumn":12,"suggestions":"335"},{"ruleId":"295","severity":1,"message":"322","line":10,"column":13,"nodeType":"301","endLine":22,"endColumn":4},{"ruleId":"336","severity":1,"message":"337","line":54,"column":7,"nodeType":"338","messageId":"339","endLine":54,"endColumn":11},{"ruleId":"288","severity":1,"message":"310","line":11,"column":10,"nodeType":"290","messageId":"291","endLine":11,"endColumn":16},{"ruleId":"314","severity":1,"message":"315","line":103,"column":11,"nodeType":"306","endLine":103,"endColumn":66},{"ruleId":"295","severity":1,"message":"320","line":12,"column":3,"nodeType":"290","endLine":12,"endColumn":12,"suggestions":"340"},{"ruleId":"295","severity":1,"message":"322","line":12,"column":13,"nodeType":"301","endLine":25,"endColumn":4},{"ruleId":"299","severity":1,"message":"300","line":34,"column":19,"nodeType":"301","messageId":"302","endLine":34,"endColumn":21},{"ruleId":"288","severity":1,"message":"303","line":44,"column":11,"nodeType":"290","messageId":"291","endLine":44,"endColumn":14},{"ruleId":"288","severity":1,"message":"341","line":4,"column":12,"nodeType":"290","messageId":"291","endLine":4,"endColumn":21},{"ruleId":"288","severity":1,"message":"342","line":4,"column":23,"nodeType":"290","messageId":"291","endLine":4,"endColumn":35},{"ruleId":"288","severity":1,"message":"343","line":6,"column":11,"nodeType":"290","messageId":"291","endLine":6,"endColumn":18},{"ruleId":"295","severity":1,"message":"344","line":9,"column":7,"nodeType":"297","endLine":9,"endColumn":9,"suggestions":"345"},{"ruleId":"288","severity":1,"message":"346","line":2,"column":10,"nodeType":"290","messageId":"291","endLine":2,"endColumn":18},{"ruleId":"295","severity":1,"message":"296","line":24,"column":6,"nodeType":"297","endLine":24,"endColumn":8,"suggestions":"347"},{"ruleId":"299","severity":1,"message":"300","line":28,"column":23,"nodeType":"301","messageId":"302","endLine":28,"endColumn":25},{"ruleId":"288","severity":1,"message":"303","line":36,"column":11,"nodeType":"290","messageId":"291","endLine":36,"endColumn":14},{"ruleId":"304","severity":1,"message":"305","line":66,"column":21,"nodeType":"306","endLine":69,"endColumn":23},{"ruleId":"295","severity":1,"message":"320","line":10,"column":5,"nodeType":"290","endLine":10,"endColumn":14,"suggestions":"348"},{"ruleId":"295","severity":1,"message":"322","line":10,"column":15,"nodeType":"301","endLine":22,"endColumn":6},{"ruleId":"288","severity":1,"message":"310","line":11,"column":10,"nodeType":"290","messageId":"291","endLine":11,"endColumn":16},{"ruleId":"314","severity":1,"message":"315","line":100,"column":11,"nodeType":"306","endLine":100,"endColumn":66},{"ruleId":"288","severity":1,"message":"310","line":11,"column":10,"nodeType":"290","messageId":"291","endLine":11,"endColumn":16},{"ruleId":"314","severity":1,"message":"315","line":100,"column":11,"nodeType":"306","endLine":100,"endColumn":66},{"ruleId":"288","severity":1,"message":"332","line":5,"column":8,"nodeType":"290","messageId":"291","endLine":5,"endColumn":9},{"ruleId":"288","severity":1,"message":"349","line":6,"column":8,"nodeType":"290","messageId":"291","endLine":6,"endColumn":15},{"ruleId":"299","severity":1,"message":"300","line":39,"column":39,"nodeType":"301","messageId":"302","endLine":39,"endColumn":41},{"ruleId":"350","severity":1,"message":"351","line":76,"column":31,"nodeType":"352","messageId":"353","endLine":76,"endColumn":102,"fix":"354"},{"ruleId":"288","severity":1,"message":"327","line":1,"column":27,"nodeType":"290","messageId":"291","endLine":1,"endColumn":36},{"ruleId":"288","severity":1,"message":"355","line":9,"column":8,"nodeType":"290","messageId":"291","endLine":9,"endColumn":16},{"ruleId":"299","severity":1,"message":"300","line":25,"column":23,"nodeType":"301","messageId":"302","endLine":25,"endColumn":25},{"ruleId":"299","severity":1,"message":"300","line":30,"column":23,"nodeType":"301","messageId":"302","endLine":30,"endColumn":25},{"ruleId":"299","severity":1,"message":"300","line":49,"column":23,"nodeType":"301","messageId":"302","endLine":49,"endColumn":25},{"ruleId":"288","severity":1,"message":"303","line":59,"column":11,"nodeType":"290","messageId":"291","endLine":59,"endColumn":14},{"ruleId":"288","severity":1,"message":"310","line":11,"column":10,"nodeType":"290","messageId":"291","endLine":11,"endColumn":16},{"ruleId":"314","severity":1,"message":"315","line":100,"column":11,"nodeType":"306","endLine":100,"endColumn":66},{"ruleId":"288","severity":1,"message":"310","line":11,"column":10,"nodeType":"290","messageId":"291","endLine":11,"endColumn":16},{"ruleId":"314","severity":1,"message":"315","line":100,"column":11,"nodeType":"306","endLine":100,"endColumn":66},"no-native-reassign",["356"],"no-negated-in-lhs",["357"],"no-unused-vars","'storage' is defined but never used.","Identifier","unusedVar","'isDOMComponentElement' is defined but never used.","'key' is assigned a value but never used.","'setKeys' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'type'. Either include it or remove the dependency array.","ArrayExpression",["358"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'exe' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["356"],["357"],"'uuidv4' is defined but never used.","'imgUrl' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id.id' and 'loadData'. Either include them or remove the dependency array. If 'setUserType' needs the current value of 'id.id', you can also switch to useReducer instead of useState and read 'id.id' in the reducer.",["359"],"'validate' is assigned a value but never used.","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.",["356"],["357"],"'dtypes' is assigned a value but never used.","'ref' is assigned a value but never used.","React Hook useEffect contains a call to 'setdTypes'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["360"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'useEffect' is defined but never used.","'useState' is defined but never used.",["361"],"React Hook useEffect has missing dependencies: 'gname' and 'loadData'. Either include them or remove the dependency array.",["362"],"'_' is defined but never used.","React Hook useEffect has missing dependencies: 'loadUserData' and 'val'. Either include them or remove the dependency array.",["363"],["364"],"no-dupe-keys","Duplicate key 'note'.","ObjectExpression","unexpected",["365"],"'finalData' is assigned a value but never used.","'setFinalData' is assigned a value but never used.","'recData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.uData'. Either include it or remove the dependency array.",["366"],"'navigate' is defined but never used.",["367"],["368"],"'Display' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property where.","MemberExpression","unexpectedWhitespace",{"range":"369","text":"370"},"'EditUser' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},{"desc":"375","fix":"377"},{"desc":"378","fix":"379"},{"desc":"380","fix":"381"},{"desc":"375","fix":"382"},{"desc":"375","fix":"383"},{"desc":"384","fix":"385"},{"desc":"371","fix":"386"},{"desc":"375","fix":"387"},[2472,2474],".","Update the dependencies array to be: [type]",{"range":"388","text":"389"},"Update the dependencies array to be: [id.id, loadData]",{"range":"390","text":"391"},"Add dependencies array: []",{"range":"392","text":"393"},{"range":"394","text":"393"},"Update the dependencies array to be: [gname, loadData]",{"range":"395","text":"396"},"Update the dependencies array to be: [id.id, loadUserData, val]",{"range":"397","text":"398"},{"range":"399","text":"393"},{"range":"400","text":"393"},"Update the dependencies array to be: [props.uData]",{"range":"401","text":"402"},{"range":"403","text":"389"},{"range":"404","text":"393"},[856,858],"[type]",[860,862],"[id.id, loadData]",[823,823],", []",[605,605],[256,258],"[gname, loadData]",[946,953],"[id.id, loadUserData, val]",[610,610],[751,751],[236,238],"[props.uData]",[648,650],[662,662]]