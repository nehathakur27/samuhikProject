[{"/home/user/projects/samuhikProject/src/Routes.js":"1","/home/user/projects/samuhikProject/src/components/SearchPeople.js":"2","/home/user/projects/samuhikProject/src/pages/EditPeople.js":"3","/home/user/projects/samuhikProject/src/reportWebVitals.js":"4","/home/user/projects/samuhikProject/src/pages/PaymentCondition.js":"5","/home/user/projects/samuhikProject/src/pages/Home.js":"6","/home/user/projects/samuhikProject/src/pages/Sadsya.js":"7","/home/user/projects/samuhikProject/src/pages/Prerna.js":"8","/home/user/projects/samuhikProject/src/pages/Master.js":"9","/home/user/projects/samuhikProject/src/components/Layout.js":"10","/home/user/projects/samuhikProject/src/components/PaymentSearch.js":"11","/home/user/projects/samuhikProject/src/components/Sidebar.js":"12","/home/user/projects/samuhikProject/src/components/Due.js":"13","/home/user/projects/samuhikProject/src/components/ProductSearch.js":"14","/home/user/projects/samuhikProject/src/pages/Suchna.js":"15","/home/user/projects/samuhikProject/src/pages/Photo.js":"16","/home/user/projects/samuhikProject/src/pages/Samachaar.js":"17","/home/user/projects/samuhikProject/src/components/Row.js":"18","/home/user/projects/samuhikProject/src/pages/Login.js":"19","/home/user/projects/samuhikProject/src/pages/Reports.js":"20","/home/user/projects/samuhikProject/src/pages/Gourav.js":"21","/home/user/projects/samuhikProject/src/pages/EditUser.js":"22","/home/user/projects/samuhikProject/src/components/Received.js":"23","/home/user/projects/samuhikProject/src/pages/Video.js":"24","/home/user/projects/samuhikProject/src/components/DonationMaster.js":"25","/home/user/projects/samuhikProject/src/components/ShowMedia.js":"26","/home/user/projects/samuhikProject/src/App.js":"27","/home/user/projects/samuhikProject/src/components/Ghoshna.js":"28","/home/user/projects/samuhikProject/src/components/RegNoSearch.js":"29","/home/user/projects/samuhikProject/src/pages/Nirman.js":"30","/home/user/projects/samuhikProject/src/pages/Tkp.js":"31","/home/user/projects/samuhikProject/src/index.js":"32","/home/user/projects/samuhikProject/src/components/GVSearch.js":"33","/home/user/projects/samuhikProject/src/components/GaadiMaster.js":"34","/home/user/projects/samuhikProject/src/pages/SearchEntry.js":"35","/home/user/projects/samuhikProject/src/pages/MaargDarshan.js":"36","/home/user/projects/samuhikProject/src/pages/Skp.js":"37","/home/user/projects/samuhikProject/src/pages/AddEntry.js":"38","/home/user/projects/samuhikProject/src/components/NameSearch.js":"39","/home/user/projects/samuhikProject/src/components/Display.js":"40","/home/user/projects/samuhikProject/src/firebase.js":"41"},{"size":784,"mtime":1619024000451,"results":"42","hashOfConfig":"43"},{"size":4338,"mtime":1619024025596,"results":"44","hashOfConfig":"43"},{"size":13913,"mtime":1619024004135,"results":"45","hashOfConfig":"43"},{"size":362,"mtime":1616163076152,"results":"46","hashOfConfig":"43"},{"size":2532,"mtime":1619682077730,"results":"47","hashOfConfig":"43"},{"size":9554,"mtime":1619023984323,"results":"48","hashOfConfig":"43"},{"size":6268,"mtime":1619683683430,"results":"49","hashOfConfig":"43"},{"size":6301,"mtime":1618074489398,"results":"50","hashOfConfig":"43"},{"size":1504,"mtime":1619682016688,"results":"51","hashOfConfig":"43"},{"size":4846,"mtime":1619029076920,"results":"52","hashOfConfig":"43"},{"size":3955,"mtime":1616163076152,"results":"53","hashOfConfig":"43"},{"size":1868,"mtime":1616163076152,"results":"54","hashOfConfig":"43"},{"size":6720,"mtime":1619683486130,"results":"55","hashOfConfig":"43"},{"size":4523,"mtime":1619030552760,"results":"56","hashOfConfig":"43"},{"size":3468,"mtime":1617258064976,"results":"57","hashOfConfig":"43"},{"size":4545,"mtime":1617119414005,"results":"58","hashOfConfig":"43"},{"size":3477,"mtime":1617119542441,"results":"59","hashOfConfig":"43"},{"size":1926,"mtime":1619683459754,"results":"60","hashOfConfig":"43"},{"size":3832,"mtime":1619683733602,"results":"61","hashOfConfig":"43"},{"size":5989,"mtime":1619029319652,"results":"62","hashOfConfig":"43"},{"size":6275,"mtime":1617103526484,"results":"63","hashOfConfig":"43"},{"size":15805,"mtime":1619683480802,"results":"64","hashOfConfig":"43"},{"size":7693,"mtime":1619683449202,"results":"65","hashOfConfig":"43"},{"size":5122,"mtime":1619683646010,"results":"66","hashOfConfig":"43"},{"size":4159,"mtime":1619683478962,"results":"67","hashOfConfig":"43"},{"size":3081,"mtime":1618751694446,"results":"68","hashOfConfig":"43"},{"size":181,"mtime":1616163076152,"results":"69","hashOfConfig":"43"},{"size":4869,"mtime":1619683468970,"results":"70","hashOfConfig":"43"},{"size":3970,"mtime":1619683447266,"results":"71","hashOfConfig":"43"},{"size":6275,"mtime":1617258246415,"results":"72","hashOfConfig":"43"},{"size":6266,"mtime":1617103604437,"results":"73","hashOfConfig":"43"},{"size":455,"mtime":1616163076152,"results":"74","hashOfConfig":"43"},{"size":8364,"mtime":1619683450498,"results":"75","hashOfConfig":"43"},{"size":6125,"mtime":1619683462902,"results":"76","hashOfConfig":"43"},{"size":7449,"mtime":1619683465762,"results":"77","hashOfConfig":"43"},{"size":6286,"mtime":1619683727070,"results":"78","hashOfConfig":"43"},{"size":6266,"mtime":1617103584433,"results":"79","hashOfConfig":"43"},{"size":15037,"mtime":1619683483034,"results":"80","hashOfConfig":"43"},{"size":3908,"mtime":1616163076152,"results":"81","hashOfConfig":"43"},{"size":282,"mtime":1619681660690,"results":"82","hashOfConfig":"43"},{"size":560,"mtime":1619683360017,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"n5z2ta",{"filePath":"87","messages":"88","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"86"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"120"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"108"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"124"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"108"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"120"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"120"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"120"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/user/projects/samuhikProject/src/Routes.js",[],["183","184"],"/home/user/projects/samuhikProject/src/components/SearchPeople.js",["185","186","187","188","189","190","191","192"],"import React, { useState, useEffect } from \"react\";\nimport { navigate } from \"hookrouter\";\nimport { firestore, storage } from \"../firebase.config\";\nimport { isDOMComponentElement } from \"react-dom/test-utils\";\n\nexport default function SearchPeople({ type }) {\n  const [finalData, setFinalData] = useState([]);\n  const [key, setKeys] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const query = firestore.collection(type);\n      const exeQuery = await query.get();\n      var data = [];\n\n      exeQuery.forEach((d) => {\n        data.push(d.data());\n      });\n\n      // var keys = Object.keys(data[0]);\n      // const index = keys.indexOf('pid');\n      // if (index > -1) {\n      //   keys.splice(index, 1);\n      // }\n      // setKeys(keys)\n      console.log(\"data\", data);\n      setFinalData(data);\n    };\n    fetchData();\n  }, []);\n\n  const deleteUser = (id) => {\n    var data = [];\n    finalData.map((d) => {\n      if (d.pid !== id) {\n        data.push(d);\n      }\n    });\n    // console.log(data);\n    setFinalData(data);\n    const query = firestore.collection(type).where(\"pid\", \"==\", id);\n    const exe = query.get().then(function (q) {\n      q.forEach(function (doc) {\n        doc.ref.delete();\n        alert(\"User Deleted\");\n      });\n    });\n  };\n\n  return (\n    <div>\n      {finalData.length > 0 && (\n        <div>\n          <table id=\"example2\" className=\"table table-bordered\">\n            <thead>\n              <tr>\n                {finalData.some((obj) => obj.hasOwnProperty(\"event\")) && (\n                  <th>Event</th>\n                )}\n                {finalData.some((obj) => obj.hasOwnProperty(\"note\")) && (\n                  <th>Note</th>\n                )}\n                {finalData.some((obj) => obj.hasOwnProperty(\"date\")) && (\n                  <th>Date</th>\n                )}\n                {finalData.some((obj) => obj.hasOwnProperty(\"image\")) && (\n                  <th>Image</th>\n                )}\n                {finalData.some((obj) => obj.hasOwnProperty(\"name\")) && (\n                  <th>Name</th>\n                )}\n                {finalData.some((obj) => obj.hasOwnProperty(\"fname\")) && (\n                  <th>Father's Name</th>\n                )}\n                {finalData.some((obj) => obj.hasOwnProperty(\"address\")) && (\n                  <th>Address</th>\n                )}\n                {finalData.some((obj) => obj.hasOwnProperty(\"mno\")) && (\n                  <th>Mobile Number</th>\n                )}\n                {finalData.some((obj) => obj.hasOwnProperty(\"vivran\")) && (\n                  <th>Vivran</th>\n                )}\n                <th>Edit</th>\n                <th>Delete</th>\n              </tr>\n            </thead>\n            <tbody>\n              {finalData.map((val, i) => (\n                <tr>\n                  {val.event && <td>{val.event}</td>}\n                  {val.note && <td>{val.note}</td>}\n                  {val.date && <td>{val.date}</td>}\n                  {val.image && (\n                    <td>\n                      <img\n                        src={val.image}\n                        style={{ width: 180, height: 180 }}\n                      />\n                    </td>\n                  )}\n                  {val.name && <td>{val.name}</td>}\n                  {val.fname && <td>{val.fname}</td>}\n                  {val.address && <td>{val.address}</td>}\n                  {val.mno && <td>{val.mno}</td>}\n                  {val.vivran && <td>{val.vivran}</td>}\n                  <td style={{ flexDirection: \"row\" }}>\n                    <span\n                      onClick={() =>\n                        navigate(\"/editPeople/\" + type + \"*\" + val.pid)\n                      }\n                      style={{ color: \"blue\" }}\n                    >\n                      <i className=\"fas fa-edit\" style={{ color: \"black\" }}></i>\n                    </span>\n                  </td>\n                  <td>\n                    <span\n                      onClick={() => deleteUser(val.pid)}\n                      style={{ color: \"blue\" }}\n                    >\n                      <i className=\"fas fa-trash\" style={{ color: \"red\" }}></i>\n                    </span>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n}\n","/home/user/projects/samuhikProject/src/pages/EditPeople.js",["193","194","195","196","197"],"import React, { useEffect, useState } from \"react\";\nimport SideBar from \"../components/Sidebar\";\nimport { useFormik } from \"formik\";\nimport { firestore, storage } from \"../firebase.config\";\nimport { navigate } from \"hookrouter\";\n\nexport default function EditPeople({ id }) {\n  const [fieldValue, setFieldValue] = useState();\n  const [imgUrl, setImgUrl] = useState();\n  const [userId, setUserId] = useState(\"\");\n  const [userType, setUserType] = useState(\"\");\n  const [userData, setUserData] = useState({});\n  const [reUpload, setReupload] = useState(false);\n  var storageRef = storage.ref();\n\n  useEffect(() => {\n    if (localStorage.getItem(\"logged\") !== \"true\") {\n      navigate(\"/\");\n    }\n    console.log(id.id.split(\"*\"));\n    setUserType(id.id.split(\"*\")[0]);\n    setUserId(id.id.split(\"*\")[1]);\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    console.log(\"loading data..\");\n    var data = [];\n    var arr = id.id.split(\"*\");\n    // if (userId && userType) {\n    const q = firestore.collection(arr[0]).where(\"pid\", \"==\", arr[1]);\n    const eq = await q.get();\n    eq.forEach((d) => {\n      data.push(d.data());\n    });\n    console.log(\"data\", JSON.stringify(data));\n    var final = { ...data };\n    setUserData(final[0]);\n    // }\n  };\n\n  const validate = (values) => {\n    console.log(\"in validate\");\n    const errors = {};\n    if (!fieldValue) {\n      errors.file = \"Image Required\";\n    }\n    if (!values.name) {\n      errors.name = \"Name Required\";\n    }\n\n    if (userType !== \"prerna\" && values.mno && !values.mno.match(/^\\d{10}$/)) {\n      errors.mno = \"Invalid Phone Number. 10 Digits Required\";\n    }\n    return errors;\n  };\n\n  const imageUpload = async (pid) => {\n    // console.log(\"image upload\",fieldValue);\n    if (fieldValue) {\n      const uploadTask = storageRef.child(`images/${pid}`).put(fieldValue);\n\n      return new Promise((resolve, reject) => {\n        uploadTask.on(\n          \"state_changed\",\n          (snapshot) => {},\n          (error) => {\n            reject(error);\n          },\n          () => {\n            storageRef\n              .child(`images/${pid}`)\n              .getDownloadURL()\n              .then((url) => {\n                setImgUrl(url);\n                resolve(url);\n              });\n          }\n        );\n      });\n    }\n  };\n\n  const handleClick = () => {\n    setReupload(!reUpload);\n  };\n\n  const registerForm = useFormik({\n    initialValues: userData,\n    enableReinitialize: true,\n    // validate,\n    onSubmit: async (values) => {\n      console.log(\"values\", values);\n      const url = reUpload === true ? await imageUpload(userId) : values.image;\n      const data = {};\n      if (\"name\" in userData) data[\"name\"] = values.name;\n      if (\"fname\" in userData) data[\"fname\"] = values.fname;\n      if (\"address\" in userData) data[\"address\"] = values.address;\n      if (\"image\" in userData) data[\"image\"] = url;\n      if (\"mno\" in userData) data[\"mno\"] = values.mno;\n      if (\"vivran\" in userData) data[\"vivran\"] = values.vivran;\n      if (\"event\" in userData) data[\"event\"] = values.event;\n      if (\"date\" in userData) data[\"date\"] = values.date;\n      if (\"note\" in userData) data[\"note\"] = values.note;\n      console.log(\"data edited\", data);\n\n      firestore\n        .collection(userType)\n        .doc(userId)\n        .set(data, { merge: true })\n        .then(function () {\n          console.log(\"success\");\n          navigate(\"/home\");\n        });\n    },\n  });\n\n  return (\n    <div>\n      <SideBar />\n      <div className=\"content-wrapper\">\n        <div className=\"content-header\">\n          <div className=\"container-fluid\">\n            <div className=\"row mb-2\">\n              <div className=\"col-sm-6\">\n                <h1 className=\"m-0 text-dark\">Edit</h1>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div>\n          <section className=\"content\">\n            <div className=\"container-fluid\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <form role=\"form\" onSubmit={registerForm.handleSubmit}>\n                    <div className=\"row\">\n                      {\"image\" in userData && (\n                        <div\n                          style={{ display: \"flex\", justifyContent: \"center\" }}\n                        >\n                          <img\n                            src={registerForm.values.image}\n                            style={{ width: 180, height: 180 }}\n                          />\n                          <div onClick={() => handleClick()}>\n                            <h6>Upload New</h6>\n                          </div>\n                          <br></br>\n                          {reUpload && (\n                            <div className=\"form-group\">\n                              <input\n                                type=\"file\"\n                                className=\"form-control\"\n                                placeholder=\"फोटो\"\n                                name=\"file\"\n                                id=\"file\"\n                                onChange={(event) => {\n                                  setFieldValue(event.currentTarget.files[0]);\n                                }}\n                              />\n                            </div>\n                          )}\n                          {registerForm.errors.image ? (\n                            <p style={{ color: \"red\" }}>\n                              {registerForm.errors.image}\n                            </p>\n                          ) : null}\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"row\">\n                      {\"name\" in userData && (\n                        <div className=\"col-sm-6\">\n                          <div className=\"form-group\">\n                            <label>नाम </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"नाम\"\n                              name=\"name\"\n                              onChange={registerForm.handleChange}\n                              defaultValue={registerForm.values.name}\n                            />\n                          </div>\n                          {registerForm.errors.name ? (\n                            <p style={{ color: \"red\" }}>\n                              {registerForm.errors.name}\n                            </p>\n                          ) : null}\n                        </div>\n                      )}\n                      {\"fname\" in userData && (\n                        <div className=\"col-sm-6\">\n                          <div className=\"form-group\">\n                            <label>पिता का नाम </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"पिता का नाम\"\n                              name=\"fname\"\n                              onChange={registerForm.handleChange}\n                              defaultValue={registerForm.values.fname}\n                            />\n                          </div>\n                          {registerForm.errors.fname ? (\n                            <p style={{ color: \"red\" }}>\n                              {registerForm.errors.fname}\n                            </p>\n                          ) : null}\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"row\">\n                      {\"address\" in userData && (\n                        <div className=\"col-sm-6\">\n                          <div className=\"form-group\">\n                            <label>पता </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"Address\"\n                              name=\"address\"\n                              onChange={registerForm.handleChange}\n                              defaultValue={registerForm.values.address}\n                            />\n                          </div>\n                          {registerForm.errors.address ? (\n                            <p style={{ color: \"red\" }}>\n                              {registerForm.errors.address}\n                            </p>\n                          ) : null}\n                        </div>\n                      )}\n\n                      {\"vivran\" in userData && (\n                        <div className=\"col-sm-6\">\n                          <div className=\"form-group\">\n                            <label>विवरण </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"विवरण\"\n                              name=\"vivran\"\n                              onChange={registerForm.handleChange}\n                              defaultValue={registerForm.values.vivran}\n                            />\n                          </div>\n                          {registerForm.errors.vivran ? (\n                            <p style={{ color: \"red\" }}>\n                              {registerForm.errors.vivran}\n                            </p>\n                          ) : null}\n                        </div>\n                      )}\n                      {\"mno\" in userData && (\n                        <div className=\"col-sm-6\">\n                          <div className=\"form-group\">\n                            <label>मोबाइल नंबर </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"मोबाइल नंबर \"\n                              name=\"mno\"\n                              onChange={registerForm.handleChange}\n                              value={registerForm.values.mno}\n                            />\n                          </div>\n                          {registerForm.errors.mno ? (\n                            <p style={{ color: \"red\" }}>\n                              {registerForm.errors.mno}\n                            </p>\n                          ) : null}\n                        </div>\n                      )}\n                    </div>\n\n                    <div className=\"row\">\n                      {\"event\" in userData && (\n                        <div className=\"col-sm-6\">\n                          <div className=\"form-group\">\n                            <label>\n                              {userType === \"suchna\" ? \"सुचना\" : \"आयोजन\"}{\" \"}\n                            </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"आयोजन\"\n                              name=\"event\"\n                              onChange={registerForm.handleChange}\n                              defaultValue={registerForm.values.event}\n                            />\n                          </div>\n                          {registerForm.errors.event ? (\n                            <p style={{ color: \"red\" }}>\n                              {registerForm.errors.event}\n                            </p>\n                          ) : null}\n                        </div>\n                      )}\n                      {\"date\" in userData && (\n                        <div className=\"col-sm-6\">\n                          <div className=\"form-group\">\n                            <label>दिनांक </label>\n                            <input\n                              type=\"date\"\n                              className=\"form-control\"\n                              placeholder=\" दिनांक \"\n                              name=\"date\"\n                              onChange={registerForm.handleChange}\n                              value={registerForm.values.date}\n                            />\n                          </div>\n                          {registerForm.errors.date ? (\n                            <p style={{ color: \"red\" }}>\n                              {registerForm.errors.event}\n                            </p>\n                          ) : null}\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"row\">\n                      {\"note\" in userData && (\n                        <div className=\"col-sm-6\">\n                          <div className=\"form-group\">\n                            <label>नोट </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"नोट\"\n                              name=\"note\"\n                              onChange={registerForm.handleChange}\n                              defaultValue={registerForm.values.note}\n                            />\n                          </div>\n                          {registerForm.errors.note ? (\n                            <p style={{ color: \"red\" }}>\n                              {registerForm.errors.note}\n                            </p>\n                          ) : null}\n                        </div>\n                      )}\n                    </div>\n\n                    <button type=\"submit\" className=\"btn btn-info\">\n                      रजिस्टर{\" \"}\n                    </button>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/user/projects/samuhikProject/src/reportWebVitals.js",[],["198","199"],"/home/user/projects/samuhikProject/src/pages/PaymentCondition.js",["200","201"],"/home/user/projects/samuhikProject/src/pages/Home.js",["202","203","204","205","206","207","208","209","210","211","212"],"/home/user/projects/samuhikProject/src/pages/Sadsya.js",["213","214"],"/home/user/projects/samuhikProject/src/pages/Prerna.js",["215","216","217"],"/home/user/projects/samuhikProject/src/pages/Master.js",["218"],"/home/user/projects/samuhikProject/src/components/Layout.js",[],["219","220"],"/home/user/projects/samuhikProject/src/components/PaymentSearch.js",[],"/home/user/projects/samuhikProject/src/components/Sidebar.js",[],"/home/user/projects/samuhikProject/src/components/Due.js",[],"/home/user/projects/samuhikProject/src/components/ProductSearch.js",[],"/home/user/projects/samuhikProject/src/pages/Suchna.js",["221","222","223"],"import React, { useState } from \"react\";\nimport SideBar from \"../components/Sidebar\";\nimport { useFormik } from \"formik\";\nimport { navigate } from \"hookrouter\";\nimport { firestore, storage } from \"../firebase.config\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Suchna = () => {\n  const validate = (values) => {\n    console.log(\"in validate\");\n    const errors = {};\n    if (!values.event) {\n      errors.event = \"Event Required\";\n    }\n\n    return errors;\n  };\n\n\n  const registerForm = useFormik({\n    initialValues: {\n      pid: uuidv4(),\n      date:\"\",\n      event:\"\",\n      note:\"\",\n    },\n    validate,\n    onSubmit: async (values) => {\n      console.log(values);\n      const data = {\n        pid: values.pid,\n        event: values.event,\n        date: values.date,\n        note: values.note,\n      };\n      firestore\n        .collection(\"suchna\")\n        .doc(values.pid)\n        .set(data, { merge: true })\n        .then(function () {\n          console.log(\"success\");\n          navigate(\"/home\");\n        });\n    },\n  });\n\n  return (\n    <div>\n      <SideBar />\n      <div\n        className=\"row\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <div>\n          <form role=\"form\" onSubmit={registerForm.handleSubmit}>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>सुचना  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"सुचना \"\n                    name=\"event\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.event}\n                  />\n                </div>\n                {registerForm.errors.event ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.event}</p>\n                ) : null}\n              </div>\n              <div className=\"col-sm-6\">\n              <div className=\"form-group\">\n                <label>दिनांक </label>\n                <input\n                  type=\"date\"\n                  placeholder=\"Date\"\n                  className=\"form-control\"\n                  name=\"date\"\n                  onChange={registerForm.handleChange}\n                />\n              </div>\n              {registerForm.errors.date ? (\n                <p style={{ color: \"red\" }}>{registerForm.errors.date}</p>\n              ) : null}\n            </div>\n            </div>\n            <div className=\"row\">\n            <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>नोट   </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"नोट  \"\n                    name=\"note\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.note}\n                  />\n                </div>\n                {registerForm.errors.note ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.note}</p>\n                ) : null}\n              </div>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-info\">\n            ऐड करे {\" \"}\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Suchna;\n",["224","225"],"/home/user/projects/samuhikProject/src/pages/Photo.js",["226","227"],"import React, { useState } from \"react\";\nimport SideBar from \"../components/Sidebar\";\nimport { useFormik } from \"formik\";\nimport { navigate } from \"hookrouter\";\nimport { firestore, storage } from \"../firebase.config\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Photo = () => {\n  const [fieldValue, setFieldValue] = useState({});\n  var storageRef = storage.ref();\n  const [imgUrl, setImgUrl] = useState();\n\n  const validate = (values) => {\n    console.log(\"in validate\");\n    const errors = {};\n    if (!fieldValue) {\n      errors.file = \"Image Required\";\n    }\n    if (!values.event) {\n      errors.event = \"Event Required\";\n    }\n\n    return errors;\n  };\n\n  const imageUpload = async (pid) => {\n    // console.log(\"image upload\",fieldValue);\n    if (fieldValue) {\n      const uploadTask = storageRef.child(`images/${pid}`).put(fieldValue);\n\n      return new Promise((resolve, reject) => {\n        uploadTask.on(\n          \"state_changed\",\n          (snapshot) => {},\n          (error) => {\n            reject(error);\n          },\n          () => {\n            storageRef\n              .child(`images/${pid}`)\n              .getDownloadURL()\n              .then((url) => {\n                setImgUrl(url);\n                resolve(url);\n              });\n          }\n        );\n      });\n    }\n  };\n\n  const registerForm = useFormik({\n    initialValues: {\n      pid: uuidv4(),\n      event: \"\",\n      date:\"\",\n      file: \"\",\n    },\n    validate,\n    onSubmit: async (values) => {\n      console.log(values);\n      const url = await imageUpload(values.pid);\n      // console.log(\"file\",fieldValue);\n      const data = {\n        pid: values.pid,\n        event: values.event,\n        date: values.date,\n        image: url,\n      };\n      firestore\n        .collection(\"photo\")\n        .doc(values.pid)\n        .set(data, { merge: true })\n        .then(function () {\n          console.log(\"success\");\n          navigate(\"/home\");\n        });\n    },\n  });\n\n  return (\n    <div>\n      <SideBar />\n      <div\n        className=\"row\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <div>\n          <form role=\"form\" onSubmit={registerForm.handleSubmit}>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>आयोजन  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"आयोजन \"\n                    name=\"event\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.event}\n                  />\n                </div>\n                {registerForm.errors.event ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.event}</p>\n                ) : null}\n              </div>\n              <div className=\"col-sm-6\">\n              <div className=\"form-group\">\n                <label>दिनांक </label>\n                <input\n                  type=\"date\"\n                  placeholder=\"Date\"\n                  className=\"form-control\"\n                  name=\"date\"\n                  onChange={registerForm.handleChange}\n                />\n              </div>\n              {registerForm.errors.date ? (\n                <p style={{ color: \"red\" }}>{registerForm.errors.date}</p>\n              ) : null}\n            </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                {/* text input */}\n                <div className=\"form-group\">\n                  <label>फोटो </label>\n                  <input\n                    type=\"file\"\n                    className=\"form-control\"\n                    placeholder=\"फोटो\"\n                    name=\"file\"\n                    id=\"file\"\n                    // onChange={registerForm.handleChange}\n                    onChange={(event) => {\n                      setFieldValue(event.currentTarget.files[0]);\n                    }}\n                  ></input>\n                </div>\n                {registerForm.errors.file ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.file}</p>\n                ) : null}\n              </div>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-info\">\n            ऐड करे {\" \"}\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Photo;\n",["228","229"],"/home/user/projects/samuhikProject/src/pages/Samachaar.js",["230","231","232"],"import React, { useState } from \"react\";\nimport SideBar from \"../components/Sidebar\";\nimport { useFormik } from \"formik\";\nimport { navigate } from \"hookrouter\";\nimport { firestore, storage } from \"../firebase.config\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Samachaar = () => {\n  const validate = (values) => {\n    console.log(\"in validate\");\n    const errors = {};\n    if (!values.event) {\n      errors.event = \"Event Required\";\n    }\n\n    return errors;\n  };\n\n\n  const registerForm = useFormik({\n    initialValues: {\n      pid: uuidv4(),\n      date:\"\",\n      event:\"\",\n      note:\"\",\n    },\n    validate,\n    onSubmit: async (values) => {\n      console.log(values);\n      const data = {\n        pid: values.pid,\n        event: values.event,\n        date: values.date,\n        note: values.note,\n      };\n      firestore\n        .collection(\"samachaar\")\n        .doc(values.pid)\n        .set(data, { merge: true })\n        .then(function () {\n          console.log(\"success\");\n          navigate(\"/home\");\n        });\n    },\n  });\n\n  return (\n    <div>\n      <SideBar />\n      <div\n        className=\"row\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <div>\n          <form role=\"form\" onSubmit={registerForm.handleSubmit}>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>आयोजन  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"आयोजन \"\n                    name=\"event\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.event}\n                  />\n                </div>\n                {registerForm.errors.event ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.event}</p>\n                ) : null}\n              </div>\n              <div className=\"col-sm-6\">\n              <div className=\"form-group\">\n                <label>दिनांक </label>\n                <input\n                  type=\"date\"\n                  placeholder=\"Date\"\n                  className=\"form-control\"\n                  name=\"date\"\n                  onChange={registerForm.handleChange}\n                />\n              </div>\n              {registerForm.errors.date ? (\n                <p style={{ color: \"red\" }}>{registerForm.errors.date}</p>\n              ) : null}\n            </div>\n            </div>\n            <div className=\"row\">\n            <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>नोट   </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"नोट  \"\n                    name=\"note\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.note}\n                  />\n                </div>\n                {registerForm.errors.note ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.note}</p>\n                ) : null}\n              </div>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-info\">\n            ऐड करे {\" \"}\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Samachaar;\n","/home/user/projects/samuhikProject/src/components/Row.js",["233","234","235"],"import { firestore } from \"../firebase\";\nimport React, { useEffect, useState } from \"react\";\n\nexport default function Row({ gname }) {\n  const [vName, setvName] = useState({});\n\n  useEffect(() => {\n    console.log(\"cur\", gname);\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    var villages = [];\n    const coll_name = \"gaadi_name/\" + gname.id + \"/village_name\";\n    const q = firestore.collection(coll_name);\n    const ref = await q.get();\n    ref.forEach(function (docs) {\n      console.log(\"vil docs\", docs.data());\n      villages.push(docs.data());\n    });\n    if (villages.length === 0) {\n      console.log(\"khaali\");\n      villages.push({ name: \"no villages \" });\n      setvName({ ...vName, villages });\n    } else setvName({ ...vName, villages });\n  };\n\n  // useEffect(() => {\n  //     console.log(\"vname\", vName);\n\n  // },[vName])\n\n  const deleteType = (id) => {\n    console.log(\"id\", id);\n    var data = [];\n    vName.villages.map((d) => {\n      if (d.id !== id) {\n        data.push(d);\n      }\n    });\n    console.log(\"orginial\", vName);\n    console.log(\"after del\", data);\n    setvName(data);\n    const coll_name = \"gaadi_name/\" + gname.name + \"/village_name\";\n    const query = firestore.collection(coll_name).where(\"id\", \"==\", id);\n    const exe = query.get().then(function (q) {\n      q.forEach(function (doc) {\n        doc.ref.delete();\n        alert(\"Successfully Deleted\");\n      });\n    });\n  };\n\n  return (\n    <tbody >\n      {vName &&\n        vName.villages &&\n        vName.villages.map((val, i) => (\n          <tr>\n            <td>{gname.name}</td>\n            <td>{val.name}</td>\n            <td>\n              <span\n                onClick={() => deleteType(val.id)}\n                style={{ color: \"blue\" }}\n              >\n                <i className=\"fas fa-trash\" style={{ color: \"red\" }}></i>\n              </span>\n            </td>\n          </tr>\n        ))}\n    </tbody>\n  );\n}\n","/home/user/projects/samuhikProject/src/pages/Login.js",["236"],"/home/user/projects/samuhikProject/src/pages/Reports.js",["237","238","239"],"import React, { useState, useEffect } from \"react\";\nimport SideBar from \"../components/Sidebar\";\nimport GVSearch from \"../components/GVSearch\";\nimport PaymentSearch from \"../components/PaymentSearch.js\";\nimport ProductSearch from \"../components/ProductSearch\";\nimport { navigate } from \"hookrouter\";\nimport _ from \"underscore\";\n\nconst Reports = () => {\n  const [type, setType] = useState(\"\");\n  const [finalData, setFinalData] = useState([]);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"logged\") !== \"true\") {\n      navigate(\"/\");\n    }\n  }, []);\n\n  const handleChange = (event) => {\n    setType(event.target.value);\n  };\n\n  // const getFData = () => {\n  //     console.log(\"here\",finalData);\n  //     finalData.map((val,i) => {\n  //         //console.log(typeof val);\n  //         let ind = 0;\n  //         if(typeof val[ind] === \"object\"){\n  //             Object.entries(val[ind]).map(([key, value]) => {\n\n  //                 ind++;\n  //             })\n  //             setKeys(ind)\n  //         }\n\n  //     })\n  // }\n\n  const handleCallback = (s1, s2) => {\n    console.log(\"rec s1\", s1);\n    console.log(\"rec s2\", s2);\n    console.log(\"merging...\");\n    var final = [];\n    if (s1.length > 0 && s2.length > 0) {\n      s2.map((val, i) => {\n        var data = {};\n        data = val;\n        var curId = val.uid;\n        console.log(\"cur id\", val.uid);\n        s1.map((v, j) => {\n          if (v.uid === curId) {\n            //  console.log(\"matched val\",v);\n            data = { ...data, v };\n          }\n        });\n        console.log(\"fdata\", data);\n        final.push(data);\n      });\n      setFinalData(final);\n    } else {\n      setFinalData(final);\n      // console.log(\"Error\");\n    }\n  };\n\n  return (\n    <div>\n      <SideBar />\n      <div className=\"content-wrapper\">\n        <section class=\"content-header\">\n          <div class=\"container-fluid\">\n            <div class=\"row mb-2\">\n              <div class=\"col-sm-6\">\n                <h1>Generate Reports</h1>\n              </div>\n            </div>\n          </div>\n        </section>\n        <section className=\"content\">\n          <div className=\"container-fluid\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <div className=\"form-group\">\n                  <label>Reports according to : </label>\n                  <select\n                    className=\"form-control\"\n                    name=\"type\"\n                    onChange={handleChange}\n                    value={type}\n                  >\n                    <option value=\"\" disabled defaultValue=\"select\" selected>\n                      Select one\n                    </option>\n                    <option value=\"place\">Gaadi and Village</option>\n                    <option value=\"pt\">Payment Type</option>\n                    <option value=\"pro\">Product</option>\n                  </select>\n                </div>\n\n                {type === \"place\" && (\n                  <GVSearch parentCallback={handleCallback} />\n                )}\n                {type === \"pt\" && (\n                  <PaymentSearch parentCallback={handleCallback} />\n                )}\n                {type === \"pro\" && (\n                  <ProductSearch parentCallback={handleCallback} />\n                )}\n\n                {finalData.length > 0 && (\n                  <div className=\"row\">\n                    <div className=\"col-12\">\n                      <div className=\"card\">\n                        <div className=\"card-body\">\n                          <table\n                            id=\"example2\"\n                            className=\"table table-bordered table-hover\"\n                          >\n                            <thead>\n                              <tr>\n                                <th>Name</th>\n                                <th>Father's Name</th>\n                                <th>Address</th>\n                                <th>Village Name</th>\n                                <th>Gaadi Name</th>\n                                <th>Mobile Number</th>\n                                <th>Donation For</th>\n                                <th>Payment type</th>\n                                <th>Date</th>\n                                <th>Amount</th>\n                                <th>Reciept Number</th>\n                                <th>Name to be Printed</th>\n                                <th>Note</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              {finalData.map((val) => (\n                                <tr>\n                                  <td>{val.v.name}</td>\n                                  <td>{val.v.fname}</td>\n                                  <td>{val.v.address}</td>\n                                  <td>{val.v.vname}</td>\n                                  <td>{val.v.gname}</td>\n                                  <td>{val.v.mnno}</td>\n                                  <td>{val.donation}</td>\n                                  <td>{val.type}</td>\n                                  <td>{val.date}</td>\n                                  <td>{val.amount}</td>\n                                  {val.reciept_no ? (\n                                    <td>{val.reciept_no}</td>\n                                  ) : (\n                                    <td>-</td>\n                                  )}\n                                  {val.ntp ? <td>{val.ntp}</td> : <td>-</td>}\n                                  {val.note ? <td>{val.note}</td> : <td>-</td>}\n                                </tr>\n                              ))}\n                            </tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default Reports;\n","/home/user/projects/samuhikProject/src/pages/Gourav.js",["240","241"],"import React, { useState } from \"react\";\nimport SideBar from \"../components/Sidebar\";\nimport { useFormik } from \"formik\";\nimport { navigate } from \"hookrouter\";\nimport { firestore, storage } from \"../firebase.config\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Gourav = () => {\n  const [fieldValue, setFieldValue] = useState({});\n  var storageRef = storage.ref();\n  const [imgUrl, setImgUrl] = useState();\n\n  const validate = (values) => {\n    console.log(\"in validate\");\n    const errors = {};\n    if (!fieldValue) {\n      errors.file = \"Image Required\";\n    }\n    if (!values.name) {\n      errors.name = \"Name Required\";\n    }\n\n    if (values.mno && !values.mno.match(/^\\d{10}$/)) {\n      errors.mno = \"Invalid Phone Number. 10 Digits Required\";\n    }\n    return errors;\n  };\n\n  const imageUpload = async (pid) => {\n    // console.log(\"image upload\",fieldValue);\n    if (fieldValue) {\n      const uploadTask = storageRef.child(`images/${pid}`).put(fieldValue);\n\n      return new Promise((resolve, reject) => {\n        uploadTask.on(\n          \"state_changed\",\n          (snapshot) => {},\n          (error) => {\n            reject(error);\n          },\n          () => {\n            storageRef\n              .child(`images/${pid}`)\n              .getDownloadURL()\n              .then((url) => {\n                setImgUrl(url);\n                resolve(url);\n              });\n          }\n        );\n      });\n    }\n  };\n\n  const registerForm = useFormik({\n    initialValues: {\n      pid: uuidv4(),\n      name: \"\",\n      fname: \"\",\n      address: \"\",\n      mno: \"\",\n      file: \"\",\n    },\n    validate,\n    onSubmit: async (values) => {\n      console.log(values);\n      const url = await imageUpload(values.pid);\n      // console.log(\"file\",fieldValue);\n      const data = {\n        pid: values.pid,\n        name: values.name,\n        fname: values.fname,\n        address: values.address,\n        mno: values.mno,\n        image: url,\n      };\n      firestore\n        .collection(\"gourav\")\n        .doc(values.pid)\n        .set(data, { merge: true })\n        .then(function () {\n          console.log(\"success\");\n          navigate(\"/home\");\n        });\n    },\n  });\n\n  return (\n    <div>\n      <SideBar />\n      <div\n        className=\"row\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <div>\n          <form role=\"form\" onSubmit={registerForm.handleSubmit}>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>नाम </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"नाम\"\n                    name=\"name\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.name}\n                  />\n                </div>\n                {registerForm.errors.name ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.name}</p>\n                ) : null}\n              </div>\n              <div className=\"col-sm-6\">\n                {/* text input */}\n                <div className=\"form-group\">\n                  <label>पिता का नाम </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"पिता का नाम\"\n                    name=\"fname\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.fname}\n                  />\n                </div>\n                {registerForm.errors.fname ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.fname}</p>\n                ) : null}\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                {/* text input */}\n                <div className=\"form-group\">\n                  <label>फोटो </label>\n                  <input\n                    type=\"file\"\n                    className=\"form-control\"\n                    placeholder=\"फोटो\"\n                    name=\"file\"\n                    id=\"file\"\n                    // onChange={registerForm.handleChange}\n                    onChange={(event) => {\n                      setFieldValue(event.currentTarget.files[0]);\n                    }}\n                  ></input>\n                </div>\n                {registerForm.errors.file ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.file}</p>\n                ) : null}\n              </div>\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>पता </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Address\"\n                    name=\"address\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.address}\n                  />\n                </div>\n                {registerForm.errors.address ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.address}</p>\n                ) : null}\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>मोबाइल नंबर </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"मोबाइल नंबर \"\n                    name=\"mno\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.mno}\n                  />\n                </div>\n                {registerForm.errors.mno ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.mno}</p>\n                ) : null}\n              </div>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-info\">\n              रजिस्टर{\" \"}\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Gourav;\n","/home/user/projects/samuhikProject/src/pages/EditUser.js",["242","243"],"/home/user/projects/samuhikProject/src/components/Received.js",[],"/home/user/projects/samuhikProject/src/pages/Video.js",["244","245"],"/home/user/projects/samuhikProject/src/components/DonationMaster.js",["246","247"],"import React, { useEffect, useState } from \"react\";\nimport { firestore } from \"../firebase\";\nimport { navigate } from \"hookrouter\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useFormik } from \"formik\";\n\nexport default function DonationMaster() {\n  const [dtype, setdTypes] = useState([]);\n  const [showResult, setShowResult] = useState(false);\n  const [showForm, setShowForm] = useState(false);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"logged\") !== \"true\") {\n      navigate(\"/\");\n    }\n    fetchData()\n  });\n\n  const fetchData = async () => {\n    const document = firestore.collection(\"donation_type\");\n    const activeRef = await document.get();\n    var dt = [];\n    activeRef.forEach((docs) => {\n      dt.push(docs.data());\n    });\n\n    setdTypes(dt);\n    setShowResult(true);\n  };\n\n  const changeState = () => {\n    console.log(\"changinhg\");\n    setShowForm(!showForm);\n  };\n\n  const deleteType = (id) => {\n    var data = [];\n    dtype.map((d) => {\n      if (d.id !== id) {\n        data.push(d);\n      }\n    });\n    // console.log(data);\n    setShowResult(data);\n    const query = firestore.collection(\"donation_type\").where(\"id\", \"==\", id);\n    const exe = query.get().then(function (q) {\n      q.forEach(function (doc) {\n        doc.ref.delete();\n        alert(\"Donation Type Deleted\");\n      });\n    });\n  };\n\n  const validate = (values) => {\n    const errors = {};\n    if (!values.name) {\n      errors.name = \"Name Required\";\n    }\n\n    return errors;\n  };\n  const newFormik = useFormik({\n    initialValues: {\n      id: \"\",\n      name: \"\",\n    },\n    validate,\n    onSubmit: (values) => {\n      console.log(values);\n      let id = uuidv4();\n      const data = {\n        id: id,\n        name: values.name,\n      };\n      console.log(data);\n      firestore\n        .collection(\"donation_type\")\n        .doc(id)\n        .set(data, { merge: true })\n        .then(function () {\n          console.log(\"success\");\n          navigate(\"/home\");\n        });\n    },\n  });\n\n  return (\n    <div>\n      {showResult && (\n        <div>\n          <table id=\"example2\" className=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th>Donation Type</th>\n                <th>Delete</th>\n              </tr>\n            </thead>\n            <tbody>\n              {dtype.map((val, i) => (\n                <tr>\n                  <td>{val.name}</td>\n                  <td>\n                    <span\n                      onClick={() => deleteType(val.id)}\n                      style={{ color: \"blue\" }}\n                    >\n                      <i className=\"fas fa-trash\" style={{ color: \"red\" }}></i>\n                    </span>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              flexDirection: \"row\",\n              width: \"10%\",\n              backgroundColor: \"#007bff\",\n              padding: \"8px\",\n            }}\n            onClick={() => changeState()}\n          >\n            <i className=\"fas fa-plus\" style={{ color: \"black\" }}></i>\n            <h6>Add New</h6>\n          </div>\n        </div>\n      )}\n      <div>\n        {showForm && (\n          <form onSubmit={newFormik.handleSubmit}>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>नाम </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"नाम\"\n                    name=\"name\"\n                    onChange={newFormik.handleChange}\n                    value={newFormik.values.name}\n                  />\n                </div>\n                {newFormik.errors.name ? (\n                  <p style={{ color: \"red\" }}>{newFormik.errors.name}</p>\n                ) : null}\n              </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-info\">\n              सबमिट{\" \"}\n            </button>\n          </form>\n        )}\n      </div>\n    </div>\n  );\n}\n","/home/user/projects/samuhikProject/src/components/ShowMedia.js",["248","249","250","251","252"],"import React, { useState, useEffect } from \"react\";\nimport { navigate } from \"hookrouter\";\nimport { firestore, storage } from \"../firebase.config\";\nimport ReactPlayer from \"react-player\";\n\nexport default function ShowMedia({ type }) {\n  const [finalData, setFinalData] = useState([]);\n  var storageRef = storage.ref();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const query = firestore.collection(type);\n      const exeQuery = await query.get();\n      var data = [];\n\n      exeQuery.forEach((d) => {\n        data.push(d.data());\n      });\n\n      console.log(\"data\", data);\n      setFinalData(data);\n    };\n    fetchData();\n  }, []);\n\n  const deleteMedia = (id) => {\n    var data = [];\n    finalData.map((d) => {\n      if (d.pid !== id) {\n        data.push(d);\n      }\n    });\n    // console.log(data);\n    setFinalData(data);\n    const query = firestore.collection(type).where(\"pid\", \"==\", id);\n    const exe = query.get().then(function (q) {\n      q.forEach(function (doc) {\n        doc.ref.delete();\n        var folder = type === \"photo\" ? \"images\" :\"video\"\n        const delRef = storageRef.child(`${folder}/${id}`);\n        delRef\n          .delete()\n          .then(function () {\n            alert(\"Media deleted\");\n          })\n          .catch(function (err) {\n            console.log(\"Error deleting\");\n          });\n      });\n    });\n  };\n  return (\n    <div>\n      {finalData.length > 0 && (\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n          {finalData.map((val, i) => (\n            <div style={{ flexBasis: \"33.33%\" }}>\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <div className=\"card-title\">\n                    <h3>{val.event}</h3>\n                  </div>\n                </div>\n                <div className=\"card-body\">\n                  {type === \"photo\" ? (\n                    <img\n                      src={val.image}\n                      style={{ width: \"100%\", height: \"100%\" }}\n                    />\n                  ) : (\n                    <ReactPlayer url={val.video} controls={true} width=\"100%\" />\n                  )}\n                </div>\n                <div className=\"card-footer\">\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      flexDirection: \"row\",\n                      flexWrap: \"wrap\",\n                    }}\n                  >\n                    <h6>{val.date}</h6>\n                    <div>\n                      <span\n                        onClick={() => deleteMedia(val.pid)}\n                        style={{ color: \"blue\" }}\n                      >\n                        <i\n                          className=\"fas fa-trash\"\n                          style={{ color: \"red\" }}\n                        ></i>\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n","/home/user/projects/samuhikProject/src/App.js",[],"/home/user/projects/samuhikProject/src/components/Ghoshna.js",[],"/home/user/projects/samuhikProject/src/components/RegNoSearch.js",[],"/home/user/projects/samuhikProject/src/pages/Nirman.js",["253","254"],"import React, { useState } from \"react\";\nimport SideBar from \"../components/Sidebar\";\nimport { useFormik } from \"formik\";\nimport { navigate } from \"hookrouter\";\nimport { firestore, storage } from \"../firebase.config\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Nirman = () => {\n  const [fieldValue, setFieldValue] = useState({});\n  var storageRef = storage.ref();\n  const [imgUrl, setImgUrl] = useState();\n\n  const validate = (values) => {\n    console.log(\"in validate\");\n    const errors = {};\n    if (!fieldValue) {\n      errors.file = \"Image Required\";\n    }\n    if (!values.name) {\n      errors.name = \"Name Required\";\n    }\n\n    if (values.mno && !values.mno.match(/^\\d{10}$/)) {\n      errors.mno = \"Invalid Phone Number. 10 Digits Required\";\n    }\n    return errors;\n  };\n\n  const imageUpload = async (pid) => {\n    // console.log(\"image upload\",fieldValue);\n    if (fieldValue) {\n      const uploadTask = storageRef.child(`images/${pid}`).put(fieldValue);\n\n      return new Promise((resolve, reject) => {\n        uploadTask.on(\n          \"state_changed\",\n          (snapshot) => {},\n          (error) => {\n            reject(error);\n          },\n          () => {\n            storageRef\n              .child(`images/${pid}`)\n              .getDownloadURL()\n              .then((url) => {\n                setImgUrl(url);\n                resolve(url);\n              });\n          }\n        );\n      });\n    }\n  };\n\n  const registerForm = useFormik({\n    initialValues: {\n      pid: uuidv4(),\n      name: \"\",\n      fname: \"\",\n      address: \"\",\n      mno: \"\",\n      file: \"\",\n    },\n    validate,\n    onSubmit: async (values) => {\n      console.log(values);\n      const url = await imageUpload(values.pid);\n      // console.log(\"file\",fieldValue);\n      const data = {\n        pid: values.pid,\n        name: values.name,\n        fname: values.fname,\n        address: values.address,\n        mno: values.mno,\n        image: url,\n      };\n      firestore\n        .collection(\"nirman\")\n        .doc(values.pid)\n        .set(data, { merge: true })\n        .then(function () {\n          console.log(\"success\");\n          navigate(\"/home\");\n        });\n    },\n  });\n\n  return (\n    <div>\n      <SideBar />\n      <div\n        className=\"row\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <div>\n          <form role=\"form\" onSubmit={registerForm.handleSubmit}>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>नाम </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"नाम\"\n                    name=\"name\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.name}\n                  />\n                </div>\n                {registerForm.errors.name ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.name}</p>\n                ) : null}\n              </div>\n              <div className=\"col-sm-6\">\n                {/* text input */}\n                <div className=\"form-group\">\n                  <label>पिता का नाम </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"पिता का नाम\"\n                    name=\"fname\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.fname}\n                  />\n                </div>\n                {registerForm.errors.fname ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.fname}</p>\n                ) : null}\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                {/* text input */}\n                <div className=\"form-group\">\n                  <label>फोटो </label>\n                  <input\n                    type=\"file\"\n                    className=\"form-control\"\n                    placeholder=\"फोटो\"\n                    name=\"file\"\n                    id=\"file\"\n                    // onChange={registerForm.handleChange}\n                    onChange={(event) => {\n                      setFieldValue(event.currentTarget.files[0]);\n                    }}\n                  ></input>\n                </div>\n                {registerForm.errors.file ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.file}</p>\n                ) : null}\n              </div>\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>पता </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Address\"\n                    name=\"address\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.address}\n                  />\n                </div>\n                {registerForm.errors.address ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.address}</p>\n                ) : null}\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>मोबाइल नंबर </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"मोबाइल नंबर \"\n                    name=\"mno\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.mno}\n                  />\n                </div>\n                {registerForm.errors.mno ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.mno}</p>\n                ) : null}\n              </div>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-info\">\n              रजिस्टर{\" \"}\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Nirman;\n","/home/user/projects/samuhikProject/src/pages/Tkp.js",["255","256"],"import React, { useState } from \"react\";\nimport SideBar from \"../components/Sidebar\";\nimport { useFormik } from \"formik\";\nimport { navigate } from \"hookrouter\";\nimport { firestore, storage } from \"../firebase.config\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Tkp = () => {\n  const [fieldValue, setFieldValue] = useState({});\n  var storageRef = storage.ref();\n  const [imgUrl, setImgUrl] = useState();\n\n  const validate = (values) => {\n    console.log(\"in validate\");\n    const errors = {};\n    if (!fieldValue) {\n      errors.file = \"Image Required\";\n    }\n    if (!values.name) {\n      errors.name = \"Name Required\";\n    }\n\n    if (values.mno && !values.mno.match(/^\\d{10}$/)) {\n      errors.mno = \"Invalid Phone Number. 10 Digits Required\";\n    }\n    return errors;\n  };\n\n  const imageUpload = async (pid) => {\n    // console.log(\"image upload\",fieldValue);\n    if (fieldValue) {\n      const uploadTask = storageRef.child(`images/${pid}`).put(fieldValue);\n\n      return new Promise((resolve, reject) => {\n        uploadTask.on(\n          \"state_changed\",\n          (snapshot) => {},\n          (error) => {\n            reject(error);\n          },\n          () => {\n            storageRef\n              .child(`images/${pid}`)\n              .getDownloadURL()\n              .then((url) => {\n                setImgUrl(url);\n                resolve(url);\n              });\n          }\n        );\n      });\n    }\n  };\n\n  const registerForm = useFormik({\n    initialValues: {\n      pid: uuidv4(),\n      name: \"\",\n      fname: \"\",\n      address: \"\",\n      mno: \"\",\n      file: \"\",\n    },\n    validate,\n    onSubmit: async (values) => {\n      console.log(values);\n      const url = await imageUpload(values.pid);\n      // console.log(\"file\",fieldValue);\n      const data = {\n        pid: values.pid,\n        name: values.name,\n        fname: values.fname,\n        address: values.address,\n        mno: values.mno,\n        image: url,\n      };\n      firestore\n        .collection(\"tkp\")\n        .doc(values.pid)\n        .set(data, { merge: true })\n        .then(function () {\n          console.log(\"success\");\n          navigate(\"/home\");\n        });\n    },\n  });\n\n  return (\n    <div>\n      <SideBar />\n      <div\n        className=\"row\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <div>\n          <form role=\"form\" onSubmit={registerForm.handleSubmit}>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>नाम </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"नाम\"\n                    name=\"name\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.name}\n                  />\n                </div>\n                {registerForm.errors.name ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.name}</p>\n                ) : null}\n              </div>\n              <div className=\"col-sm-6\">\n                {/* text input */}\n                <div className=\"form-group\">\n                  <label>पिता का नाम </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"पिता का नाम\"\n                    name=\"fname\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.fname}\n                  />\n                </div>\n                {registerForm.errors.fname ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.fname}</p>\n                ) : null}\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                {/* text input */}\n                <div className=\"form-group\">\n                  <label>फोटो </label>\n                  <input\n                    type=\"file\"\n                    className=\"form-control\"\n                    placeholder=\"फोटो\"\n                    name=\"file\"\n                    id=\"file\"\n                    // onChange={registerForm.handleChange}\n                    onChange={(event) => {\n                      setFieldValue(event.currentTarget.files[0]);\n                    }}\n                  ></input>\n                </div>\n                {registerForm.errors.file ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.file}</p>\n                ) : null}\n              </div>\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>पता </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Address\"\n                    name=\"address\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.address}\n                  />\n                </div>\n                {registerForm.errors.address ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.address}</p>\n                ) : null}\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>मोबाइल नंबर </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"मोबाइल नंबर \"\n                    name=\"mno\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.mno}\n                  />\n                </div>\n                {registerForm.errors.mno ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.mno}</p>\n                ) : null}\n              </div>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-info\">\n              रजिस्टर{\" \"}\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Tkp;\n","/home/user/projects/samuhikProject/src/index.js",[],"/home/user/projects/samuhikProject/src/components/GVSearch.js",["257","258","259","260"],"/home/user/projects/samuhikProject/src/components/GaadiMaster.js",["261"],"/home/user/projects/samuhikProject/src/pages/SearchEntry.js",["262","263","264","265","266"],"/home/user/projects/samuhikProject/src/pages/MaargDarshan.js",["267","268"],"/home/user/projects/samuhikProject/src/pages/Skp.js",["269","270"],"/home/user/projects/samuhikProject/src/pages/AddEntry.js",["271","272","273","274"],"/home/user/projects/samuhikProject/src/components/NameSearch.js",[],"/home/user/projects/samuhikProject/src/components/Display.js",["275","276","277","278"],"/home/user/projects/samuhikProject/src/firebase.js",[],{"ruleId":"279","replacedBy":"280"},{"ruleId":"281","replacedBy":"282"},{"ruleId":"283","severity":1,"message":"284","line":3,"column":21,"nodeType":"285","messageId":"286","endLine":3,"endColumn":28},{"ruleId":"283","severity":1,"message":"287","line":4,"column":10,"nodeType":"285","messageId":"286","endLine":4,"endColumn":31},{"ruleId":"283","severity":1,"message":"288","line":8,"column":10,"nodeType":"285","messageId":"286","endLine":8,"endColumn":13},{"ruleId":"283","severity":1,"message":"289","line":8,"column":15,"nodeType":"285","messageId":"286","endLine":8,"endColumn":22},{"ruleId":"290","severity":1,"message":"291","line":30,"column":6,"nodeType":"292","endLine":30,"endColumn":8,"suggestions":"293"},{"ruleId":"294","severity":1,"message":"295","line":34,"column":23,"nodeType":"296","messageId":"297","endLine":34,"endColumn":25},{"ruleId":"283","severity":1,"message":"298","line":42,"column":11,"nodeType":"285","messageId":"286","endLine":42,"endColumn":14},{"ruleId":"299","severity":1,"message":"300","line":96,"column":23,"nodeType":"301","endLine":99,"endColumn":25},{"ruleId":"283","severity":1,"message":"302","line":9,"column":10,"nodeType":"285","messageId":"286","endLine":9,"endColumn":16},{"ruleId":"290","severity":1,"message":"303","line":24,"column":6,"nodeType":"292","endLine":24,"endColumn":8,"suggestions":"304"},{"ruleId":"283","severity":1,"message":"305","line":42,"column":9,"nodeType":"285","messageId":"286","endLine":42,"endColumn":17},{"ruleId":"306","severity":1,"message":"307","line":136,"column":19,"nodeType":"301","endLine":136,"endColumn":74},{"ruleId":"299","severity":1,"message":"300","line":142,"column":27,"nodeType":"301","endLine":145,"endColumn":29},{"ruleId":"279","replacedBy":"308"},{"ruleId":"281","replacedBy":"309"},{"ruleId":"283","severity":1,"message":"310","line":10,"column":10,"nodeType":"285","messageId":"286","endLine":10,"endColumn":16},{"ruleId":"283","severity":1,"message":"311","line":12,"column":7,"nodeType":"285","messageId":"286","endLine":12,"endColumn":10},{"ruleId":"312","severity":1,"message":"313","line":38,"column":54,"nodeType":"314","messageId":"315","endLine":38,"endColumn":55},{"ruleId":"312","severity":1,"message":"313","line":56,"column":54,"nodeType":"314","messageId":"315","endLine":56,"endColumn":55},{"ruleId":"312","severity":1,"message":"313","line":76,"column":54,"nodeType":"314","messageId":"315","endLine":76,"endColumn":55},{"ruleId":"312","severity":1,"message":"313","line":100,"column":54,"nodeType":"314","messageId":"315","endLine":100,"endColumn":55},{"ruleId":"312","severity":1,"message":"313","line":118,"column":54,"nodeType":"314","messageId":"315","endLine":118,"endColumn":55},{"ruleId":"312","severity":1,"message":"313","line":135,"column":54,"nodeType":"314","messageId":"315","endLine":135,"endColumn":55},{"ruleId":"312","severity":1,"message":"313","line":154,"column":54,"nodeType":"314","messageId":"315","endLine":154,"endColumn":55},{"ruleId":"312","severity":1,"message":"313","line":172,"column":54,"nodeType":"314","messageId":"315","endLine":172,"endColumn":55},{"ruleId":"312","severity":1,"message":"313","line":190,"column":54,"nodeType":"314","messageId":"315","endLine":190,"endColumn":55},{"ruleId":"312","severity":1,"message":"313","line":209,"column":54,"nodeType":"314","messageId":"315","endLine":209,"endColumn":55},{"ruleId":"312","severity":1,"message":"313","line":227,"column":54,"nodeType":"314","messageId":"315","endLine":227,"endColumn":55},{"ruleId":"283","severity":1,"message":"302","line":11,"column":10,"nodeType":"285","messageId":"286","endLine":11,"endColumn":16},{"ruleId":"306","severity":1,"message":"307","line":100,"column":11,"nodeType":"301","endLine":100,"endColumn":66},{"ruleId":"283","severity":1,"message":"316","line":1,"column":17,"nodeType":"285","messageId":"286","endLine":1,"endColumn":26},{"ruleId":"283","severity":1,"message":"302","line":10,"column":10,"nodeType":"285","messageId":"286","endLine":10,"endColumn":16},{"ruleId":"306","severity":1,"message":"307","line":101,"column":11,"nodeType":"301","endLine":101,"endColumn":66},{"ruleId":"283","severity":1,"message":"305","line":21,"column":9,"nodeType":"285","messageId":"286","endLine":21,"endColumn":17},{"ruleId":"279","replacedBy":"317"},{"ruleId":"281","replacedBy":"318"},{"ruleId":"283","severity":1,"message":"319","line":1,"column":17,"nodeType":"285","messageId":"286","endLine":1,"endColumn":25},{"ruleId":"283","severity":1,"message":"284","line":5,"column":21,"nodeType":"285","messageId":"286","endLine":5,"endColumn":28},{"ruleId":"306","severity":1,"message":"307","line":59,"column":11,"nodeType":"301","endLine":59,"endColumn":66},{"ruleId":"279","replacedBy":"320"},{"ruleId":"281","replacedBy":"321"},{"ruleId":"283","severity":1,"message":"302","line":11,"column":10,"nodeType":"285","messageId":"286","endLine":11,"endColumn":16},{"ruleId":"306","severity":1,"message":"307","line":93,"column":11,"nodeType":"301","endLine":93,"endColumn":66},{"ruleId":"279","replacedBy":"322"},{"ruleId":"281","replacedBy":"323"},{"ruleId":"283","severity":1,"message":"319","line":1,"column":17,"nodeType":"285","messageId":"286","endLine":1,"endColumn":25},{"ruleId":"283","severity":1,"message":"284","line":5,"column":21,"nodeType":"285","messageId":"286","endLine":5,"endColumn":28},{"ruleId":"306","severity":1,"message":"307","line":59,"column":11,"nodeType":"301","endLine":59,"endColumn":66},{"ruleId":"290","severity":1,"message":"324","line":10,"column":6,"nodeType":"292","endLine":10,"endColumn":8,"suggestions":"325"},{"ruleId":"294","severity":1,"message":"295","line":36,"column":28,"nodeType":"296","messageId":"297","endLine":36,"endColumn":30},{"ruleId":"283","severity":1,"message":"298","line":46,"column":11,"nodeType":"285","messageId":"286","endLine":46,"endColumn":14},{"ruleId":"306","severity":1,"message":"307","line":51,"column":21,"nodeType":"301","endLine":51,"endColumn":77},{"ruleId":"283","severity":1,"message":"326","line":7,"column":8,"nodeType":"285","messageId":"286","endLine":7,"endColumn":9},{"ruleId":"294","severity":1,"message":"295","line":45,"column":23,"nodeType":"296","messageId":"297","endLine":45,"endColumn":25},{"ruleId":"294","severity":1,"message":"295","line":50,"column":23,"nodeType":"296","messageId":"297","endLine":50,"endColumn":25},{"ruleId":"283","severity":1,"message":"302","line":11,"column":10,"nodeType":"285","messageId":"286","endLine":11,"endColumn":16},{"ruleId":"306","severity":1,"message":"307","line":100,"column":11,"nodeType":"301","endLine":100,"endColumn":66},{"ruleId":"290","severity":1,"message":"327","line":34,"column":6,"nodeType":"292","endLine":34,"endColumn":13,"suggestions":"328"},{"ruleId":"294","severity":1,"message":"295","line":75,"column":35,"nodeType":"296","messageId":"297","endLine":75,"endColumn":37},{"ruleId":"283","severity":1,"message":"302","line":11,"column":10,"nodeType":"285","messageId":"286","endLine":11,"endColumn":16},{"ruleId":"306","severity":1,"message":"307","line":103,"column":11,"nodeType":"301","endLine":103,"endColumn":66},{"ruleId":"294","severity":1,"message":"295","line":38,"column":19,"nodeType":"296","messageId":"297","endLine":38,"endColumn":21},{"ruleId":"283","severity":1,"message":"298","line":46,"column":11,"nodeType":"285","messageId":"286","endLine":46,"endColumn":14},{"ruleId":"283","severity":1,"message":"329","line":2,"column":10,"nodeType":"285","messageId":"286","endLine":2,"endColumn":18},{"ruleId":"290","severity":1,"message":"291","line":24,"column":6,"nodeType":"292","endLine":24,"endColumn":8,"suggestions":"330"},{"ruleId":"294","severity":1,"message":"295","line":28,"column":23,"nodeType":"296","messageId":"297","endLine":28,"endColumn":25},{"ruleId":"283","severity":1,"message":"298","line":36,"column":11,"nodeType":"285","messageId":"286","endLine":36,"endColumn":14},{"ruleId":"299","severity":1,"message":"300","line":66,"column":21,"nodeType":"301","endLine":69,"endColumn":23},{"ruleId":"283","severity":1,"message":"302","line":11,"column":10,"nodeType":"285","messageId":"286","endLine":11,"endColumn":16},{"ruleId":"306","severity":1,"message":"307","line":100,"column":11,"nodeType":"301","endLine":100,"endColumn":66},{"ruleId":"283","severity":1,"message":"302","line":11,"column":10,"nodeType":"285","messageId":"286","endLine":11,"endColumn":16},{"ruleId":"306","severity":1,"message":"307","line":100,"column":11,"nodeType":"301","endLine":100,"endColumn":66},{"ruleId":"283","severity":1,"message":"326","line":5,"column":8,"nodeType":"285","messageId":"286","endLine":5,"endColumn":9},{"ruleId":"283","severity":1,"message":"331","line":6,"column":8,"nodeType":"285","messageId":"286","endLine":6,"endColumn":15},{"ruleId":"294","severity":1,"message":"295","line":39,"column":39,"nodeType":"296","messageId":"297","endLine":39,"endColumn":41},{"ruleId":"332","severity":1,"message":"333","line":76,"column":31,"nodeType":"334","messageId":"335","endLine":76,"endColumn":102,"fix":"336"},{"ruleId":"283","severity":1,"message":"337","line":4,"column":16,"nodeType":"285","messageId":"286","endLine":4,"endColumn":22},{"ruleId":"283","severity":1,"message":"338","line":9,"column":8,"nodeType":"285","messageId":"286","endLine":9,"endColumn":16},{"ruleId":"294","severity":1,"message":"295","line":31,"column":23,"nodeType":"296","messageId":"297","endLine":31,"endColumn":25},{"ruleId":"294","severity":1,"message":"295","line":36,"column":23,"nodeType":"296","messageId":"297","endLine":36,"endColumn":25},{"ruleId":"294","severity":1,"message":"295","line":55,"column":23,"nodeType":"296","messageId":"297","endLine":55,"endColumn":25},{"ruleId":"283","severity":1,"message":"298","line":65,"column":11,"nodeType":"285","messageId":"286","endLine":65,"endColumn":14},{"ruleId":"283","severity":1,"message":"302","line":11,"column":10,"nodeType":"285","messageId":"286","endLine":11,"endColumn":16},{"ruleId":"306","severity":1,"message":"307","line":100,"column":11,"nodeType":"301","endLine":100,"endColumn":66},{"ruleId":"283","severity":1,"message":"302","line":11,"column":10,"nodeType":"285","messageId":"286","endLine":11,"endColumn":16},{"ruleId":"306","severity":1,"message":"307","line":100,"column":11,"nodeType":"301","endLine":100,"endColumn":66},{"ruleId":"294","severity":1,"message":"295","line":49,"column":35,"nodeType":"296","messageId":"297","endLine":49,"endColumn":37},{"ruleId":"294","severity":1,"message":"295","line":101,"column":32,"nodeType":"296","messageId":"297","endLine":101,"endColumn":34},{"ruleId":"339","severity":1,"message":"340","line":193,"column":25,"nodeType":"341","endLine":193,"endColumn":37},{"ruleId":"306","severity":1,"message":"307","line":204,"column":19,"nodeType":"301","endLine":204,"endColumn":74},{"ruleId":"283","severity":1,"message":"342","line":4,"column":12,"nodeType":"285","messageId":"286","endLine":4,"endColumn":21},{"ruleId":"283","severity":1,"message":"343","line":4,"column":23,"nodeType":"285","messageId":"286","endLine":4,"endColumn":35},{"ruleId":"283","severity":1,"message":"344","line":6,"column":11,"nodeType":"285","messageId":"286","endLine":6,"endColumn":18},{"ruleId":"290","severity":1,"message":"345","line":9,"column":7,"nodeType":"292","endLine":9,"endColumn":9,"suggestions":"346"},"no-native-reassign",["347"],"no-negated-in-lhs",["348"],"no-unused-vars","'storage' is defined but never used.","Identifier","unusedVar","'isDOMComponentElement' is defined but never used.","'key' is assigned a value but never used.","'setKeys' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'type'. Either include it or remove the dependency array.","ArrayExpression",["349"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'exe' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'imgUrl' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id.id' and 'loadData'. Either include them or remove the dependency array. If 'setUserType' needs the current value of 'id.id', you can also switch to useReducer instead of useState and read 'id.id' in the reducer.",["350"],"'validate' is assigned a value but never used.","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.",["347"],["348"],"'dtypes' is assigned a value but never used.","'ref' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'useEffect' is defined but never used.",["347"],["348"],"'useState' is defined but never used.",["347"],["348"],["347"],["348"],"React Hook useEffect has missing dependencies: 'gname' and 'loadData'. Either include them or remove the dependency array.",["351"],"'_' is defined but never used.","React Hook useEffect has missing dependencies: 'loadUserData' and 'val'. Either include them or remove the dependency array.",["352"],"'navigate' is defined but never used.",["353"],"'Display' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property where.","MemberExpression","unexpectedWhitespace",{"range":"354","text":"355"},"'uuidv4' is defined but never used.","'EditUser' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'finalData' is assigned a value but never used.","'setFinalData' is assigned a value but never used.","'recData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.uData'. Either include it or remove the dependency array.",["356"],"no-global-assign","no-unsafe-negation",{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"357","fix":"365"},[2465,2467],".",{"desc":"366","fix":"367"},"Update the dependencies array to be: [type]",{"range":"368","text":"369"},"Update the dependencies array to be: [id.id, loadData]",{"range":"370","text":"371"},"Update the dependencies array to be: [gname, loadData]",{"range":"372","text":"373"},"Update the dependencies array to be: [id.id, loadUserData, val]",{"range":"374","text":"375"},{"range":"376","text":"369"},"Update the dependencies array to be: [props.uData]",{"range":"377","text":"378"},[859,861],"[type]",[823,825],"[id.id, loadData]",[250,252],"[gname, loadData]",[928,935],"[id.id, loadUserData, val]",[648,650],[236,238],"[props.uData]"]