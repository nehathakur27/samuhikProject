[{"/home/user/projects/samuhikProject/src/Routes.js":"1","/home/user/projects/samuhikProject/src/components/SearchPeople.js":"2","/home/user/projects/samuhikProject/src/pages/EditPeople.js":"3","/home/user/projects/samuhikProject/src/reportWebVitals.js":"4","/home/user/projects/samuhikProject/src/pages/PaymentCondition.js":"5","/home/user/projects/samuhikProject/src/pages/Home.js":"6","/home/user/projects/samuhikProject/src/pages/Sadsya.js":"7","/home/user/projects/samuhikProject/src/pages/Prerna.js":"8","/home/user/projects/samuhikProject/src/pages/Master.js":"9","/home/user/projects/samuhikProject/src/components/Layout.js":"10","/home/user/projects/samuhikProject/src/components/PaymentSearch.js":"11","/home/user/projects/samuhikProject/src/components/Sidebar.js":"12","/home/user/projects/samuhikProject/src/components/Due.js":"13","/home/user/projects/samuhikProject/src/components/ProductSearch.js":"14","/home/user/projects/samuhikProject/src/pages/Suchna.js":"15","/home/user/projects/samuhikProject/src/pages/Photo.js":"16","/home/user/projects/samuhikProject/src/pages/Samachaar.js":"17","/home/user/projects/samuhikProject/src/components/Row.js":"18","/home/user/projects/samuhikProject/src/pages/Login.js":"19","/home/user/projects/samuhikProject/src/pages/Reports.js":"20","/home/user/projects/samuhikProject/src/pages/Gourav.js":"21","/home/user/projects/samuhikProject/src/pages/EditUser.js":"22","/home/user/projects/samuhikProject/src/firebase.config.js":"23","/home/user/projects/samuhikProject/src/components/Received.js":"24","/home/user/projects/samuhikProject/src/pages/Video.js":"25","/home/user/projects/samuhikProject/src/components/DonationMaster.js":"26","/home/user/projects/samuhikProject/src/components/ShowMedia.js":"27","/home/user/projects/samuhikProject/src/App.js":"28","/home/user/projects/samuhikProject/src/components/Ghoshna.js":"29","/home/user/projects/samuhikProject/src/components/RegNoSearch.js":"30","/home/user/projects/samuhikProject/src/pages/Nirman.js":"31","/home/user/projects/samuhikProject/src/pages/Tkp.js":"32","/home/user/projects/samuhikProject/src/index.js":"33","/home/user/projects/samuhikProject/src/components/GVSearch.js":"34","/home/user/projects/samuhikProject/src/components/GaadiMaster.js":"35","/home/user/projects/samuhikProject/src/pages/SearchEntry.js":"36","/home/user/projects/samuhikProject/src/pages/MaargDarshan.js":"37","/home/user/projects/samuhikProject/src/pages/Skp.js":"38","/home/user/projects/samuhikProject/src/pages/AddEntry.js":"39","/home/user/projects/samuhikProject/src/components/NameSearch.js":"40","/home/user/projects/samuhikProject/src/components/Display.js":"41"},{"size":784,"mtime":1619024000451,"results":"42","hashOfConfig":"43"},{"size":4338,"mtime":1619024025596,"results":"44","hashOfConfig":"43"},{"size":13913,"mtime":1619024004135,"results":"45","hashOfConfig":"43"},{"size":362,"mtime":1616163076152,"results":"46","hashOfConfig":"43"},{"size":2532,"mtime":1619682077730,"results":"47","hashOfConfig":"43"},{"size":9554,"mtime":1619023984323,"results":"48","hashOfConfig":"43"},{"size":6275,"mtime":1617103567349,"results":"49","hashOfConfig":"43"},{"size":6301,"mtime":1618074489398,"results":"50","hashOfConfig":"43"},{"size":1504,"mtime":1619682016688,"results":"51","hashOfConfig":"43"},{"size":4846,"mtime":1619029076920,"results":"52","hashOfConfig":"43"},{"size":3955,"mtime":1616163076152,"results":"53","hashOfConfig":"43"},{"size":1868,"mtime":1616163076152,"results":"54","hashOfConfig":"43"},{"size":6672,"mtime":1616163076152,"results":"55","hashOfConfig":"43"},{"size":4523,"mtime":1619030552760,"results":"56","hashOfConfig":"43"},{"size":3468,"mtime":1617258064976,"results":"57","hashOfConfig":"43"},{"size":4545,"mtime":1617119414005,"results":"58","hashOfConfig":"43"},{"size":3477,"mtime":1617119542441,"results":"59","hashOfConfig":"43"},{"size":1933,"mtime":1619028822615,"results":"60","hashOfConfig":"43"},{"size":3839,"mtime":1616163076152,"results":"61","hashOfConfig":"43"},{"size":5989,"mtime":1619029319652,"results":"62","hashOfConfig":"43"},{"size":6275,"mtime":1617103526484,"results":"63","hashOfConfig":"43"},{"size":15812,"mtime":1619681976962,"results":"64","hashOfConfig":"43"},{"size":560,"mtime":1616163076152,"results":"65","hashOfConfig":"43"},{"size":7700,"mtime":1619682497540,"results":"66","hashOfConfig":"43"},{"size":5129,"mtime":1617119434338,"results":"67","hashOfConfig":"43"},{"size":4130,"mtime":1617637486785,"results":"68","hashOfConfig":"43"},{"size":3081,"mtime":1618751694446,"results":"69","hashOfConfig":"43"},{"size":181,"mtime":1616163076152,"results":"70","hashOfConfig":"43"},{"size":4876,"mtime":1619681796399,"results":"71","hashOfConfig":"43"},{"size":3977,"mtime":1616163076152,"results":"72","hashOfConfig":"43"},{"size":6275,"mtime":1617258246415,"results":"73","hashOfConfig":"43"},{"size":6266,"mtime":1617103604437,"results":"74","hashOfConfig":"43"},{"size":455,"mtime":1616163076152,"results":"75","hashOfConfig":"43"},{"size":8371,"mtime":1616163076152,"results":"76","hashOfConfig":"43"},{"size":6132,"mtime":1619028838344,"results":"77","hashOfConfig":"43"},{"size":7456,"mtime":1619028948540,"results":"78","hashOfConfig":"43"},{"size":6293,"mtime":1617103552577,"results":"79","hashOfConfig":"43"},{"size":6266,"mtime":1617103584433,"results":"80","hashOfConfig":"43"},{"size":15044,"mtime":1619681903795,"results":"81","hashOfConfig":"43"},{"size":3908,"mtime":1616163076152,"results":"82","hashOfConfig":"43"},{"size":282,"mtime":1619681660690,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"n5z2ta",{"filePath":"87","messages":"88","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"86"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"103"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"103"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"122"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"103"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"103"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"122"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"122"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"122"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"122"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"172","usedDeprecatedRules":"86"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"86"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/user/projects/samuhikProject/src/Routes.js",[],["188","189"],"/home/user/projects/samuhikProject/src/components/SearchPeople.js",["190","191","192","193","194","195","196","197"],"import React, { useState, useEffect } from \"react\";\nimport { navigate } from \"hookrouter\";\nimport { firestore, storage } from \"../firebase.config\";\nimport { isDOMComponentElement } from \"react-dom/test-utils\";\n\nexport default function SearchPeople({ type }) {\n  const [finalData, setFinalData] = useState([]);\n  const [key, setKeys] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const query = firestore.collection(type);\n      const exeQuery = await query.get();\n      var data = [];\n\n      exeQuery.forEach((d) => {\n        data.push(d.data());\n      });\n\n      // var keys = Object.keys(data[0]);\n      // const index = keys.indexOf('pid');\n      // if (index > -1) {\n      //   keys.splice(index, 1);\n      // }\n      // setKeys(keys)\n      console.log(\"data\", data);\n      setFinalData(data);\n    };\n    fetchData();\n  }, []);\n\n  const deleteUser = (id) => {\n    var data = [];\n    finalData.map((d) => {\n      if (d.pid !== id) {\n        data.push(d);\n      }\n    });\n    // console.log(data);\n    setFinalData(data);\n    const query = firestore.collection(type).where(\"pid\", \"==\", id);\n    const exe = query.get().then(function (q) {\n      q.forEach(function (doc) {\n        doc.ref.delete();\n        alert(\"User Deleted\");\n      });\n    });\n  };\n\n  return (\n    <div>\n      {finalData.length > 0 && (\n        <div>\n          <table id=\"example2\" className=\"table table-bordered\">\n            <thead>\n              <tr>\n                {finalData.some((obj) => obj.hasOwnProperty(\"event\")) && (\n                  <th>Event</th>\n                )}\n                {finalData.some((obj) => obj.hasOwnProperty(\"note\")) && (\n                  <th>Note</th>\n                )}\n                {finalData.some((obj) => obj.hasOwnProperty(\"date\")) && (\n                  <th>Date</th>\n                )}\n                {finalData.some((obj) => obj.hasOwnProperty(\"image\")) && (\n                  <th>Image</th>\n                )}\n                {finalData.some((obj) => obj.hasOwnProperty(\"name\")) && (\n                  <th>Name</th>\n                )}\n                {finalData.some((obj) => obj.hasOwnProperty(\"fname\")) && (\n                  <th>Father's Name</th>\n                )}\n                {finalData.some((obj) => obj.hasOwnProperty(\"address\")) && (\n                  <th>Address</th>\n                )}\n                {finalData.some((obj) => obj.hasOwnProperty(\"mno\")) && (\n                  <th>Mobile Number</th>\n                )}\n                {finalData.some((obj) => obj.hasOwnProperty(\"vivran\")) && (\n                  <th>Vivran</th>\n                )}\n                <th>Edit</th>\n                <th>Delete</th>\n              </tr>\n            </thead>\n            <tbody>\n              {finalData.map((val, i) => (\n                <tr>\n                  {val.event && <td>{val.event}</td>}\n                  {val.note && <td>{val.note}</td>}\n                  {val.date && <td>{val.date}</td>}\n                  {val.image && (\n                    <td>\n                      <img\n                        src={val.image}\n                        style={{ width: 180, height: 180 }}\n                      />\n                    </td>\n                  )}\n                  {val.name && <td>{val.name}</td>}\n                  {val.fname && <td>{val.fname}</td>}\n                  {val.address && <td>{val.address}</td>}\n                  {val.mno && <td>{val.mno}</td>}\n                  {val.vivran && <td>{val.vivran}</td>}\n                  <td style={{ flexDirection: \"row\" }}>\n                    <span\n                      onClick={() =>\n                        navigate(\"/editPeople/\" + type + \"*\" + val.pid)\n                      }\n                      style={{ color: \"blue\" }}\n                    >\n                      <i className=\"fas fa-edit\" style={{ color: \"black\" }}></i>\n                    </span>\n                  </td>\n                  <td>\n                    <span\n                      onClick={() => deleteUser(val.pid)}\n                      style={{ color: \"blue\" }}\n                    >\n                      <i className=\"fas fa-trash\" style={{ color: \"red\" }}></i>\n                    </span>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n}\n","/home/user/projects/samuhikProject/src/pages/EditPeople.js",["198","199","200","201","202"],"import React, { useEffect, useState } from \"react\";\nimport SideBar from \"../components/Sidebar\";\nimport { useFormik } from \"formik\";\nimport { firestore, storage } from \"../firebase.config\";\nimport { navigate } from \"hookrouter\";\n\nexport default function EditPeople({ id }) {\n  const [fieldValue, setFieldValue] = useState();\n  const [imgUrl, setImgUrl] = useState();\n  const [userId, setUserId] = useState(\"\");\n  const [userType, setUserType] = useState(\"\");\n  const [userData, setUserData] = useState({});\n  const [reUpload, setReupload] = useState(false);\n  var storageRef = storage.ref();\n\n  useEffect(() => {\n    if (localStorage.getItem(\"logged\") !== \"true\") {\n      navigate(\"/\");\n    }\n    console.log(id.id.split(\"*\"));\n    setUserType(id.id.split(\"*\")[0]);\n    setUserId(id.id.split(\"*\")[1]);\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    console.log(\"loading data..\");\n    var data = [];\n    var arr = id.id.split(\"*\");\n    // if (userId && userType) {\n    const q = firestore.collection(arr[0]).where(\"pid\", \"==\", arr[1]);\n    const eq = await q.get();\n    eq.forEach((d) => {\n      data.push(d.data());\n    });\n    console.log(\"data\", JSON.stringify(data));\n    var final = { ...data };\n    setUserData(final[0]);\n    // }\n  };\n\n  const validate = (values) => {\n    console.log(\"in validate\");\n    const errors = {};\n    if (!fieldValue) {\n      errors.file = \"Image Required\";\n    }\n    if (!values.name) {\n      errors.name = \"Name Required\";\n    }\n\n    if (userType !== \"prerna\" && values.mno && !values.mno.match(/^\\d{10}$/)) {\n      errors.mno = \"Invalid Phone Number. 10 Digits Required\";\n    }\n    return errors;\n  };\n\n  const imageUpload = async (pid) => {\n    // console.log(\"image upload\",fieldValue);\n    if (fieldValue) {\n      const uploadTask = storageRef.child(`images/${pid}`).put(fieldValue);\n\n      return new Promise((resolve, reject) => {\n        uploadTask.on(\n          \"state_changed\",\n          (snapshot) => {},\n          (error) => {\n            reject(error);\n          },\n          () => {\n            storageRef\n              .child(`images/${pid}`)\n              .getDownloadURL()\n              .then((url) => {\n                setImgUrl(url);\n                resolve(url);\n              });\n          }\n        );\n      });\n    }\n  };\n\n  const handleClick = () => {\n    setReupload(!reUpload);\n  };\n\n  const registerForm = useFormik({\n    initialValues: userData,\n    enableReinitialize: true,\n    // validate,\n    onSubmit: async (values) => {\n      console.log(\"values\", values);\n      const url = reUpload === true ? await imageUpload(userId) : values.image;\n      const data = {};\n      if (\"name\" in userData) data[\"name\"] = values.name;\n      if (\"fname\" in userData) data[\"fname\"] = values.fname;\n      if (\"address\" in userData) data[\"address\"] = values.address;\n      if (\"image\" in userData) data[\"image\"] = url;\n      if (\"mno\" in userData) data[\"mno\"] = values.mno;\n      if (\"vivran\" in userData) data[\"vivran\"] = values.vivran;\n      if (\"event\" in userData) data[\"event\"] = values.event;\n      if (\"date\" in userData) data[\"date\"] = values.date;\n      if (\"note\" in userData) data[\"note\"] = values.note;\n      console.log(\"data edited\", data);\n\n      firestore\n        .collection(userType)\n        .doc(userId)\n        .set(data, { merge: true })\n        .then(function () {\n          console.log(\"success\");\n          navigate(\"/home\");\n        });\n    },\n  });\n\n  return (\n    <div>\n      <SideBar />\n      <div className=\"content-wrapper\">\n        <div className=\"content-header\">\n          <div className=\"container-fluid\">\n            <div className=\"row mb-2\">\n              <div className=\"col-sm-6\">\n                <h1 className=\"m-0 text-dark\">Edit</h1>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div>\n          <section className=\"content\">\n            <div className=\"container-fluid\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <form role=\"form\" onSubmit={registerForm.handleSubmit}>\n                    <div className=\"row\">\n                      {\"image\" in userData && (\n                        <div\n                          style={{ display: \"flex\", justifyContent: \"center\" }}\n                        >\n                          <img\n                            src={registerForm.values.image}\n                            style={{ width: 180, height: 180 }}\n                          />\n                          <div onClick={() => handleClick()}>\n                            <h6>Upload New</h6>\n                          </div>\n                          <br></br>\n                          {reUpload && (\n                            <div className=\"form-group\">\n                              <input\n                                type=\"file\"\n                                className=\"form-control\"\n                                placeholder=\"फोटो\"\n                                name=\"file\"\n                                id=\"file\"\n                                onChange={(event) => {\n                                  setFieldValue(event.currentTarget.files[0]);\n                                }}\n                              />\n                            </div>\n                          )}\n                          {registerForm.errors.image ? (\n                            <p style={{ color: \"red\" }}>\n                              {registerForm.errors.image}\n                            </p>\n                          ) : null}\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"row\">\n                      {\"name\" in userData && (\n                        <div className=\"col-sm-6\">\n                          <div className=\"form-group\">\n                            <label>नाम </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"नाम\"\n                              name=\"name\"\n                              onChange={registerForm.handleChange}\n                              defaultValue={registerForm.values.name}\n                            />\n                          </div>\n                          {registerForm.errors.name ? (\n                            <p style={{ color: \"red\" }}>\n                              {registerForm.errors.name}\n                            </p>\n                          ) : null}\n                        </div>\n                      )}\n                      {\"fname\" in userData && (\n                        <div className=\"col-sm-6\">\n                          <div className=\"form-group\">\n                            <label>पिता का नाम </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"पिता का नाम\"\n                              name=\"fname\"\n                              onChange={registerForm.handleChange}\n                              defaultValue={registerForm.values.fname}\n                            />\n                          </div>\n                          {registerForm.errors.fname ? (\n                            <p style={{ color: \"red\" }}>\n                              {registerForm.errors.fname}\n                            </p>\n                          ) : null}\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"row\">\n                      {\"address\" in userData && (\n                        <div className=\"col-sm-6\">\n                          <div className=\"form-group\">\n                            <label>पता </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"Address\"\n                              name=\"address\"\n                              onChange={registerForm.handleChange}\n                              defaultValue={registerForm.values.address}\n                            />\n                          </div>\n                          {registerForm.errors.address ? (\n                            <p style={{ color: \"red\" }}>\n                              {registerForm.errors.address}\n                            </p>\n                          ) : null}\n                        </div>\n                      )}\n\n                      {\"vivran\" in userData && (\n                        <div className=\"col-sm-6\">\n                          <div className=\"form-group\">\n                            <label>विवरण </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"विवरण\"\n                              name=\"vivran\"\n                              onChange={registerForm.handleChange}\n                              defaultValue={registerForm.values.vivran}\n                            />\n                          </div>\n                          {registerForm.errors.vivran ? (\n                            <p style={{ color: \"red\" }}>\n                              {registerForm.errors.vivran}\n                            </p>\n                          ) : null}\n                        </div>\n                      )}\n                      {\"mno\" in userData && (\n                        <div className=\"col-sm-6\">\n                          <div className=\"form-group\">\n                            <label>मोबाइल नंबर </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"मोबाइल नंबर \"\n                              name=\"mno\"\n                              onChange={registerForm.handleChange}\n                              value={registerForm.values.mno}\n                            />\n                          </div>\n                          {registerForm.errors.mno ? (\n                            <p style={{ color: \"red\" }}>\n                              {registerForm.errors.mno}\n                            </p>\n                          ) : null}\n                        </div>\n                      )}\n                    </div>\n\n                    <div className=\"row\">\n                      {\"event\" in userData && (\n                        <div className=\"col-sm-6\">\n                          <div className=\"form-group\">\n                            <label>\n                              {userType === \"suchna\" ? \"सुचना\" : \"आयोजन\"}{\" \"}\n                            </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"आयोजन\"\n                              name=\"event\"\n                              onChange={registerForm.handleChange}\n                              defaultValue={registerForm.values.event}\n                            />\n                          </div>\n                          {registerForm.errors.event ? (\n                            <p style={{ color: \"red\" }}>\n                              {registerForm.errors.event}\n                            </p>\n                          ) : null}\n                        </div>\n                      )}\n                      {\"date\" in userData && (\n                        <div className=\"col-sm-6\">\n                          <div className=\"form-group\">\n                            <label>दिनांक </label>\n                            <input\n                              type=\"date\"\n                              className=\"form-control\"\n                              placeholder=\" दिनांक \"\n                              name=\"date\"\n                              onChange={registerForm.handleChange}\n                              value={registerForm.values.date}\n                            />\n                          </div>\n                          {registerForm.errors.date ? (\n                            <p style={{ color: \"red\" }}>\n                              {registerForm.errors.event}\n                            </p>\n                          ) : null}\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"row\">\n                      {\"note\" in userData && (\n                        <div className=\"col-sm-6\">\n                          <div className=\"form-group\">\n                            <label>नोट </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"नोट\"\n                              name=\"note\"\n                              onChange={registerForm.handleChange}\n                              defaultValue={registerForm.values.note}\n                            />\n                          </div>\n                          {registerForm.errors.note ? (\n                            <p style={{ color: \"red\" }}>\n                              {registerForm.errors.note}\n                            </p>\n                          ) : null}\n                        </div>\n                      )}\n                    </div>\n\n                    <button type=\"submit\" className=\"btn btn-info\">\n                      रजिस्टर{\" \"}\n                    </button>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/user/projects/samuhikProject/src/reportWebVitals.js",[],["203","204"],"/home/user/projects/samuhikProject/src/pages/PaymentCondition.js",["205","206"],"/home/user/projects/samuhikProject/src/pages/Home.js",["207","208","209","210","211","212","213","214","215","216","217"],"/home/user/projects/samuhikProject/src/pages/Sadsya.js",["218","219"],"import React, { useState } from \"react\";\nimport SideBar from \"../components/Sidebar\";\nimport { useFormik } from \"formik\";\nimport { navigate } from \"hookrouter\";\nimport { firestore, storage } from \"../firebase.config\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Sadsya = () => {\n  const [fieldValue, setFieldValue] = useState({});\n  var storageRef = storage.ref();\n  const [imgUrl, setImgUrl] = useState();\n\n  const validate = (values) => {\n    console.log(\"in validate\");\n    const errors = {};\n    if (!fieldValue) {\n      errors.file = \"Image Required\";\n    }\n    if (!values.name) {\n      errors.name = \"Name Required\";\n    }\n\n    if (values.mno && !values.mno.match(/^\\d{10}$/)) {\n      errors.mno = \"Invalid Phone Number. 10 Digits Required\";\n    }\n    return errors;\n  };\n\n  const imageUpload = async (pid) => {\n    // console.log(\"image upload\",fieldValue);\n    if (fieldValue) {\n      const uploadTask = storageRef.child(`images/${pid}`).put(fieldValue);\n\n      return new Promise((resolve, reject) => {\n        uploadTask.on(\n          \"state_changed\",\n          (snapshot) => {},\n          (error) => {\n            reject(error);\n          },\n          () => {\n            storageRef\n              .child(`images/${pid}`)\n              .getDownloadURL()\n              .then((url) => {\n                setImgUrl(url);\n                resolve(url);\n              });\n          }\n        );\n      });\n    }\n  };\n\n  const registerForm = useFormik({\n    initialValues: {\n      pid: uuidv4(),\n      name: \"\",\n      fname: \"\",\n      address: \"\",\n      mno: \"\",\n      file: \"\",\n    },\n    validate,\n    onSubmit: async (values) => {\n      console.log(values);\n      const url = await imageUpload(values.pid);\n      // console.log(\"file\",fieldValue);\n      const data = {\n        pid: values.pid,\n        name: values.name,\n        fname: values.fname,\n        address: values.address,\n        mno: values.mno,\n        image: url,\n      };\n      firestore\n        .collection(\"sadsya\")\n        .doc(values.pid)\n        .set(data, { merge: true })\n        .then(function () {\n          console.log(\"success\");\n          navigate(\"/home\");\n        });\n    },\n  });\n\n  return (\n    <div>\n      <SideBar />\n      <div\n        className=\"row\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <div>\n          <form role=\"form\" onSubmit={registerForm.handleSubmit}>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>नाम </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"नाम\"\n                    name=\"name\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.name}\n                  />\n                </div>\n                {registerForm.errors.name ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.name}</p>\n                ) : null}\n              </div>\n              <div className=\"col-sm-6\">\n                {/* text input */}\n                <div className=\"form-group\">\n                  <label>पिता का नाम </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"पिता का नाम\"\n                    name=\"fname\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.fname}\n                  />\n                </div>\n                {registerForm.errors.fname ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.fname}</p>\n                ) : null}\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                {/* text input */}\n                <div className=\"form-group\">\n                  <label>फोटो </label>\n                  <input\n                    type=\"file\"\n                    className=\"form-control\"\n                    placeholder=\"फोटो\"\n                    name=\"file\"\n                    id=\"file\"\n                    // onChange={registerForm.handleChange}\n                    onChange={(event) => {\n                      setFieldValue(event.currentTarget.files[0]);\n                    }}\n                  ></input>\n                </div>\n                {registerForm.errors.file ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.file}</p>\n                ) : null}\n              </div>\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>पता </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Address\"\n                    name=\"address\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.address}\n                  />\n                </div>\n                {registerForm.errors.address ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.address}</p>\n                ) : null}\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>मोबाइल नंबर </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"मोबाइल नंबर \"\n                    name=\"mno\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.mno}\n                  />\n                </div>\n                {registerForm.errors.mno ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.mno}</p>\n                ) : null}\n              </div>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-info\">\n              रजिस्टर{\" \"}\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Sadsya;\n",["220","221"],"/home/user/projects/samuhikProject/src/pages/Prerna.js",["222","223","224"],"/home/user/projects/samuhikProject/src/pages/Master.js",["225"],"/home/user/projects/samuhikProject/src/components/Layout.js",[],"/home/user/projects/samuhikProject/src/components/PaymentSearch.js",[],"/home/user/projects/samuhikProject/src/components/Sidebar.js",[],"/home/user/projects/samuhikProject/src/components/Due.js",["226","227"],"import React,{useState,useEffect} from \"react\";\nimport { firestore } from \"../firebase.config\";\nimport { navigate } from \"hookrouter\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useFormik } from \"formik\";\n\nexport default function Due() {\n  const [dtype, setdTypes] = useState([]);\n\n  useEffect(async () => {\n    if (localStorage.getItem(\"logged\") !== \"true\") {\n      navigate(\"/\");\n    }\n    const document = firestore.collection(\"donation_type\");\n    const activeRef = await document.get();\n    var dt = [];\n    activeRef.forEach((docs) => {\n      dt.push(docs.data());\n    });\n\n    setdTypes(dt);\n  });\n\n  const validate = (values) => {\n    const errors = {};\n    if (!values.rno) {\n      errors.rno = \"Reciept Number Required\";\n    }\n    if (!values.date) {\n      errors.date = \"Date Required\";\n    }\n    if (!values.donation) {\n      errors.donation = \"Donation Required\";\n    }\n    if (!values.amt) {\n      errors.amt = \"Amount Required\";\n    }\n    return errors;\n  };\n  const newFormik = useFormik({\n    initialValues: {\n      note: \"\",\n      rno: \"\",\n      date: \"\",\n      donation: \"\",\n      amt: \"\",\n      ntp: \"\",\n    },\n    validate,\n    onSubmit: async (values) => {\n      //console.log(values)\n      let uid = localStorage.getItem(\"userid\");\n      let id = uuidv4();\n      console.log(\"due val\", values);\n\n      const due_data = {\n        id: id,\n        uid: uid,\n        date: values.date,\n        amount: values.amt,\n        donation: values.donation,\n        reciept_no: values.rno,\n        ntp: values.ntp,\n        note: values.note,\n        type: \"due\",\n      };\n      //  console.log(due_data);\n      firestore\n        .collection(\"all_receipts\")\n        .where(\"reciept_no\", \"==\", values.rno)\n        .get()\n        .then(function (deets) {\n          if (deets.size > 0) {\n            alert(\"Reciept Number already exists\");\n          } else {\n            firestore\n              .collection(\"all_receipts\")\n              // .doc(\"AllReceipts\")\n              // .collection(\"due\")\n              .doc(id)\n              .set(due_data, { merge: true })\n              .then(function () {\n                console.log(\"success\");\n                //update in entries\n                firestore.collection(\"entries\").doc(uid).update({\n                  due: true,\n                });\n                console.log(\"updated\");\n                localStorage.removeItem(\"userid\");\n                navigate(\"/home\");\n              });\n          }\n        });\n    },\n  });\n  return (\n    <div>\n      <div>\n        <form onSubmit={newFormik.handleSubmit}>\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <div className=\"form-group\">\n                <label>रसीद नंबर </label>\n                <input\n                  type=\"text\"\n                  placeholder=\"रसीद नंबर \"\n                  name=\"rno\"\n                  className=\"form-control\"\n                  onChange={newFormik.handleChange}\n                  value={newFormik.values.rno}\n                />\n              </div>\n              {newFormik.errors.rno ? (\n                <p style={{ color: \"red\" }}>{newFormik.errors.rno}</p>\n              ) : null}\n            </div>\n            <div className=\"col-sm-6\">\n              <div className=\"form-group\">\n                <label>दिनांक </label>\n                <input\n                  type=\"date\"\n                  placeholder=\"दिनांक \"\n                  className=\"form-control\"\n                  name=\"date\"\n                  onChange={newFormik.handleChange}\n                />\n              </div>\n              {newFormik.errors.date ? (\n                <p style={{ color: \"red\" }}>{newFormik.errors.date}</p>\n              ) : null}\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <div className=\"form-group\">\n                <label>बाकी राशि </label>\n                <input\n                  type=\"number\"\n                  placeholder=\"बाकी राशि \"\n                  name=\"amt\"\n                  className=\"form-control\"\n                  onChange={newFormik.handleChange}\n                  value={newFormik.values.amt}\n                />\n              </div>\n              {newFormik.errors.amt ? (\n                <p style={{ color: \"red\" }}>{newFormik.errors.amt}</p>\n              ) : null}\n            </div>\n            <div className=\"col-sm-6\">\n              <div className=\"form-group\">\n                <label>दान के प्रकार</label>\n                <select\n                  name=\"donation\"\n                  value={newFormik.values.ddonation}\n                  className=\"form-control\"\n                  onChange={newFormik.handleChange}\n                  tw=\"w-full p-3 bg-white rounded-md font-medium border border-gray-500 text-sm focus:outline-none focus:border-gray-400\"\n                >\n                  <option value=\"\" disabled selected>\n                    Select one\n                  </option>\n                  {dtype.map((dt) => (\n                    <option value={dt.id}>{dt.name}</option>\n                  ))}\n                </select>\n              </div>\n              {newFormik.errors.donation ? (\n                <p style={{ color: \"red\" }}>{newFormik.errors.donation}</p>\n              ) : null}\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <div className=\"form-group\">\n                <label>Name to be Printed</label>\n                <input\n                  type=\"text\"\n                  placeholder=\"Name to be printed\"\n                  name=\"ntp\"\n                  className=\"form-control\"\n                  onChange={newFormik.handleChange}\n                  value={newFormik.values.ntp}\n                />\n              </div>\n              {newFormik.errors.ntp ? (\n                <p style={{ color: \"red\" }}>{newFormik.errors.ntp}</p>\n              ) : null}\n            </div>\n            <div className=\"col-sm-6\">\n              <div className=\"form-group\">\n                <label>नोट </label>\n                <input\n                  type=\"text\"\n                  placeholder=\"नोट \"\n                  name=\"note\"\n                  className=\"form-control\"\n                  value={newFormik.values.note}\n                  onChange={newFormik.handleChange}\n                />\n              </div>\n            </div>\n          </div>\n          <button type=\"submit\" className=\"btn btn-info\">\n            सबमिट{\" \"}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","/home/user/projects/samuhikProject/src/components/ProductSearch.js",[],"/home/user/projects/samuhikProject/src/pages/Suchna.js",["228","229","230"],"import React, { useState } from \"react\";\nimport SideBar from \"../components/Sidebar\";\nimport { useFormik } from \"formik\";\nimport { navigate } from \"hookrouter\";\nimport { firestore, storage } from \"../firebase.config\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Suchna = () => {\n  const validate = (values) => {\n    console.log(\"in validate\");\n    const errors = {};\n    if (!values.event) {\n      errors.event = \"Event Required\";\n    }\n\n    return errors;\n  };\n\n\n  const registerForm = useFormik({\n    initialValues: {\n      pid: uuidv4(),\n      date:\"\",\n      event:\"\",\n      note:\"\",\n    },\n    validate,\n    onSubmit: async (values) => {\n      console.log(values);\n      const data = {\n        pid: values.pid,\n        event: values.event,\n        date: values.date,\n        note: values.note,\n      };\n      firestore\n        .collection(\"suchna\")\n        .doc(values.pid)\n        .set(data, { merge: true })\n        .then(function () {\n          console.log(\"success\");\n          navigate(\"/home\");\n        });\n    },\n  });\n\n  return (\n    <div>\n      <SideBar />\n      <div\n        className=\"row\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <div>\n          <form role=\"form\" onSubmit={registerForm.handleSubmit}>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>सुचना  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"सुचना \"\n                    name=\"event\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.event}\n                  />\n                </div>\n                {registerForm.errors.event ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.event}</p>\n                ) : null}\n              </div>\n              <div className=\"col-sm-6\">\n              <div className=\"form-group\">\n                <label>दिनांक </label>\n                <input\n                  type=\"date\"\n                  placeholder=\"Date\"\n                  className=\"form-control\"\n                  name=\"date\"\n                  onChange={registerForm.handleChange}\n                />\n              </div>\n              {registerForm.errors.date ? (\n                <p style={{ color: \"red\" }}>{registerForm.errors.date}</p>\n              ) : null}\n            </div>\n            </div>\n            <div className=\"row\">\n            <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>नोट   </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"नोट  \"\n                    name=\"note\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.note}\n                  />\n                </div>\n                {registerForm.errors.note ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.note}</p>\n                ) : null}\n              </div>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-info\">\n            ऐड करे {\" \"}\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Suchna;\n",["231","232"],"/home/user/projects/samuhikProject/src/pages/Photo.js",["233","234"],"import React, { useState } from \"react\";\nimport SideBar from \"../components/Sidebar\";\nimport { useFormik } from \"formik\";\nimport { navigate } from \"hookrouter\";\nimport { firestore, storage } from \"../firebase.config\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Photo = () => {\n  const [fieldValue, setFieldValue] = useState({});\n  var storageRef = storage.ref();\n  const [imgUrl, setImgUrl] = useState();\n\n  const validate = (values) => {\n    console.log(\"in validate\");\n    const errors = {};\n    if (!fieldValue) {\n      errors.file = \"Image Required\";\n    }\n    if (!values.event) {\n      errors.event = \"Event Required\";\n    }\n\n    return errors;\n  };\n\n  const imageUpload = async (pid) => {\n    // console.log(\"image upload\",fieldValue);\n    if (fieldValue) {\n      const uploadTask = storageRef.child(`images/${pid}`).put(fieldValue);\n\n      return new Promise((resolve, reject) => {\n        uploadTask.on(\n          \"state_changed\",\n          (snapshot) => {},\n          (error) => {\n            reject(error);\n          },\n          () => {\n            storageRef\n              .child(`images/${pid}`)\n              .getDownloadURL()\n              .then((url) => {\n                setImgUrl(url);\n                resolve(url);\n              });\n          }\n        );\n      });\n    }\n  };\n\n  const registerForm = useFormik({\n    initialValues: {\n      pid: uuidv4(),\n      event: \"\",\n      date:\"\",\n      file: \"\",\n    },\n    validate,\n    onSubmit: async (values) => {\n      console.log(values);\n      const url = await imageUpload(values.pid);\n      // console.log(\"file\",fieldValue);\n      const data = {\n        pid: values.pid,\n        event: values.event,\n        date: values.date,\n        image: url,\n      };\n      firestore\n        .collection(\"photo\")\n        .doc(values.pid)\n        .set(data, { merge: true })\n        .then(function () {\n          console.log(\"success\");\n          navigate(\"/home\");\n        });\n    },\n  });\n\n  return (\n    <div>\n      <SideBar />\n      <div\n        className=\"row\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <div>\n          <form role=\"form\" onSubmit={registerForm.handleSubmit}>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>आयोजन  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"आयोजन \"\n                    name=\"event\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.event}\n                  />\n                </div>\n                {registerForm.errors.event ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.event}</p>\n                ) : null}\n              </div>\n              <div className=\"col-sm-6\">\n              <div className=\"form-group\">\n                <label>दिनांक </label>\n                <input\n                  type=\"date\"\n                  placeholder=\"Date\"\n                  className=\"form-control\"\n                  name=\"date\"\n                  onChange={registerForm.handleChange}\n                />\n              </div>\n              {registerForm.errors.date ? (\n                <p style={{ color: \"red\" }}>{registerForm.errors.date}</p>\n              ) : null}\n            </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                {/* text input */}\n                <div className=\"form-group\">\n                  <label>फोटो </label>\n                  <input\n                    type=\"file\"\n                    className=\"form-control\"\n                    placeholder=\"फोटो\"\n                    name=\"file\"\n                    id=\"file\"\n                    // onChange={registerForm.handleChange}\n                    onChange={(event) => {\n                      setFieldValue(event.currentTarget.files[0]);\n                    }}\n                  ></input>\n                </div>\n                {registerForm.errors.file ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.file}</p>\n                ) : null}\n              </div>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-info\">\n            ऐड करे {\" \"}\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Photo;\n","/home/user/projects/samuhikProject/src/pages/Samachaar.js",["235","236","237"],"import React, { useState } from \"react\";\nimport SideBar from \"../components/Sidebar\";\nimport { useFormik } from \"formik\";\nimport { navigate } from \"hookrouter\";\nimport { firestore, storage } from \"../firebase.config\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Samachaar = () => {\n  const validate = (values) => {\n    console.log(\"in validate\");\n    const errors = {};\n    if (!values.event) {\n      errors.event = \"Event Required\";\n    }\n\n    return errors;\n  };\n\n\n  const registerForm = useFormik({\n    initialValues: {\n      pid: uuidv4(),\n      date:\"\",\n      event:\"\",\n      note:\"\",\n    },\n    validate,\n    onSubmit: async (values) => {\n      console.log(values);\n      const data = {\n        pid: values.pid,\n        event: values.event,\n        date: values.date,\n        note: values.note,\n      };\n      firestore\n        .collection(\"samachaar\")\n        .doc(values.pid)\n        .set(data, { merge: true })\n        .then(function () {\n          console.log(\"success\");\n          navigate(\"/home\");\n        });\n    },\n  });\n\n  return (\n    <div>\n      <SideBar />\n      <div\n        className=\"row\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <div>\n          <form role=\"form\" onSubmit={registerForm.handleSubmit}>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>आयोजन  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"आयोजन \"\n                    name=\"event\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.event}\n                  />\n                </div>\n                {registerForm.errors.event ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.event}</p>\n                ) : null}\n              </div>\n              <div className=\"col-sm-6\">\n              <div className=\"form-group\">\n                <label>दिनांक </label>\n                <input\n                  type=\"date\"\n                  placeholder=\"Date\"\n                  className=\"form-control\"\n                  name=\"date\"\n                  onChange={registerForm.handleChange}\n                />\n              </div>\n              {registerForm.errors.date ? (\n                <p style={{ color: \"red\" }}>{registerForm.errors.date}</p>\n              ) : null}\n            </div>\n            </div>\n            <div className=\"row\">\n            <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>नोट   </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"नोट  \"\n                    name=\"note\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.note}\n                  />\n                </div>\n                {registerForm.errors.note ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.note}</p>\n                ) : null}\n              </div>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-info\">\n            ऐड करे {\" \"}\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Samachaar;\n","/home/user/projects/samuhikProject/src/components/Row.js",["238","239","240"],"import { firestore } from \"../firebase.config\";\nimport React, { useEffect, useState } from \"react\";\n\nexport default function Row({ gname }) {\n  const [vName, setvName] = useState({});\n\n  useEffect(() => {\n    console.log(\"cur\", gname);\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    var villages = [];\n    const coll_name = \"gaadi_name/\" + gname.id + \"/village_name\";\n    const q = firestore.collection(coll_name);\n    const ref = await q.get();\n    ref.forEach(function (docs) {\n      console.log(\"vil docs\", docs.data());\n      villages.push(docs.data());\n    });\n    if (villages.length === 0) {\n      console.log(\"khaali\");\n      villages.push({ name: \"no villages \" });\n      setvName({ ...vName, villages });\n    } else setvName({ ...vName, villages });\n  };\n\n  // useEffect(() => {\n  //     console.log(\"vname\", vName);\n\n  // },[vName])\n\n  const deleteType = (id) => {\n    console.log(\"id\", id);\n    var data = [];\n    vName.villages.map((d) => {\n      if (d.id !== id) {\n        data.push(d);\n      }\n    });\n    console.log(\"orginial\", vName);\n    console.log(\"after del\", data);\n    setvName(data);\n    const coll_name = \"gaadi_name/\" + gname.name + \"/village_name\";\n    const query = firestore.collection(coll_name).where(\"id\", \"==\", id);\n    const exe = query.get().then(function (q) {\n      q.forEach(function (doc) {\n        doc.ref.delete();\n        alert(\"Successfully Deleted\");\n      });\n    });\n  };\n\n  return (\n    <tbody >\n      {vName &&\n        vName.villages &&\n        vName.villages.map((val, i) => (\n          <tr>\n            <td>{gname.name}</td>\n            <td>{val.name}</td>\n            <td>\n              <span\n                onClick={() => deleteType(val.id)}\n                style={{ color: \"blue\" }}\n              >\n                <i className=\"fas fa-trash\" style={{ color: \"red\" }}></i>\n              </span>\n            </td>\n          </tr>\n        ))}\n    </tbody>\n  );\n}\n","/home/user/projects/samuhikProject/src/pages/Login.js",["241"],"/home/user/projects/samuhikProject/src/pages/Reports.js",["242","243","244"],"import React, { useState, useEffect } from \"react\";\nimport SideBar from \"../components/Sidebar\";\nimport GVSearch from \"../components/GVSearch\";\nimport PaymentSearch from \"../components/PaymentSearch.js\";\nimport ProductSearch from \"../components/ProductSearch\";\nimport { navigate } from \"hookrouter\";\nimport _ from \"underscore\";\n\nconst Reports = () => {\n  const [type, setType] = useState(\"\");\n  const [finalData, setFinalData] = useState([]);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"logged\") !== \"true\") {\n      navigate(\"/\");\n    }\n  }, []);\n\n  const handleChange = (event) => {\n    setType(event.target.value);\n  };\n\n  // const getFData = () => {\n  //     console.log(\"here\",finalData);\n  //     finalData.map((val,i) => {\n  //         //console.log(typeof val);\n  //         let ind = 0;\n  //         if(typeof val[ind] === \"object\"){\n  //             Object.entries(val[ind]).map(([key, value]) => {\n\n  //                 ind++;\n  //             })\n  //             setKeys(ind)\n  //         }\n\n  //     })\n  // }\n\n  const handleCallback = (s1, s2) => {\n    console.log(\"rec s1\", s1);\n    console.log(\"rec s2\", s2);\n    console.log(\"merging...\");\n    var final = [];\n    if (s1.length > 0 && s2.length > 0) {\n      s2.map((val, i) => {\n        var data = {};\n        data = val;\n        var curId = val.uid;\n        console.log(\"cur id\", val.uid);\n        s1.map((v, j) => {\n          if (v.uid === curId) {\n            //  console.log(\"matched val\",v);\n            data = { ...data, v };\n          }\n        });\n        console.log(\"fdata\", data);\n        final.push(data);\n      });\n      setFinalData(final);\n    } else {\n      setFinalData(final);\n      // console.log(\"Error\");\n    }\n  };\n\n  return (\n    <div>\n      <SideBar />\n      <div className=\"content-wrapper\">\n        <section class=\"content-header\">\n          <div class=\"container-fluid\">\n            <div class=\"row mb-2\">\n              <div class=\"col-sm-6\">\n                <h1>Generate Reports</h1>\n              </div>\n            </div>\n          </div>\n        </section>\n        <section className=\"content\">\n          <div className=\"container-fluid\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <div className=\"form-group\">\n                  <label>Reports according to : </label>\n                  <select\n                    className=\"form-control\"\n                    name=\"type\"\n                    onChange={handleChange}\n                    value={type}\n                  >\n                    <option value=\"\" disabled defaultValue=\"select\" selected>\n                      Select one\n                    </option>\n                    <option value=\"place\">Gaadi and Village</option>\n                    <option value=\"pt\">Payment Type</option>\n                    <option value=\"pro\">Product</option>\n                  </select>\n                </div>\n\n                {type === \"place\" && (\n                  <GVSearch parentCallback={handleCallback} />\n                )}\n                {type === \"pt\" && (\n                  <PaymentSearch parentCallback={handleCallback} />\n                )}\n                {type === \"pro\" && (\n                  <ProductSearch parentCallback={handleCallback} />\n                )}\n\n                {finalData.length > 0 && (\n                  <div className=\"row\">\n                    <div className=\"col-12\">\n                      <div className=\"card\">\n                        <div className=\"card-body\">\n                          <table\n                            id=\"example2\"\n                            className=\"table table-bordered table-hover\"\n                          >\n                            <thead>\n                              <tr>\n                                <th>Name</th>\n                                <th>Father's Name</th>\n                                <th>Address</th>\n                                <th>Village Name</th>\n                                <th>Gaadi Name</th>\n                                <th>Mobile Number</th>\n                                <th>Donation For</th>\n                                <th>Payment type</th>\n                                <th>Date</th>\n                                <th>Amount</th>\n                                <th>Reciept Number</th>\n                                <th>Name to be Printed</th>\n                                <th>Note</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              {finalData.map((val) => (\n                                <tr>\n                                  <td>{val.v.name}</td>\n                                  <td>{val.v.fname}</td>\n                                  <td>{val.v.address}</td>\n                                  <td>{val.v.vname}</td>\n                                  <td>{val.v.gname}</td>\n                                  <td>{val.v.mnno}</td>\n                                  <td>{val.donation}</td>\n                                  <td>{val.type}</td>\n                                  <td>{val.date}</td>\n                                  <td>{val.amount}</td>\n                                  {val.reciept_no ? (\n                                    <td>{val.reciept_no}</td>\n                                  ) : (\n                                    <td>-</td>\n                                  )}\n                                  {val.ntp ? <td>{val.ntp}</td> : <td>-</td>}\n                                  {val.note ? <td>{val.note}</td> : <td>-</td>}\n                                </tr>\n                              ))}\n                            </tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default Reports;\n","/home/user/projects/samuhikProject/src/pages/Gourav.js",["245","246"],"import React, { useState } from \"react\";\nimport SideBar from \"../components/Sidebar\";\nimport { useFormik } from \"formik\";\nimport { navigate } from \"hookrouter\";\nimport { firestore, storage } from \"../firebase.config\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Gourav = () => {\n  const [fieldValue, setFieldValue] = useState({});\n  var storageRef = storage.ref();\n  const [imgUrl, setImgUrl] = useState();\n\n  const validate = (values) => {\n    console.log(\"in validate\");\n    const errors = {};\n    if (!fieldValue) {\n      errors.file = \"Image Required\";\n    }\n    if (!values.name) {\n      errors.name = \"Name Required\";\n    }\n\n    if (values.mno && !values.mno.match(/^\\d{10}$/)) {\n      errors.mno = \"Invalid Phone Number. 10 Digits Required\";\n    }\n    return errors;\n  };\n\n  const imageUpload = async (pid) => {\n    // console.log(\"image upload\",fieldValue);\n    if (fieldValue) {\n      const uploadTask = storageRef.child(`images/${pid}`).put(fieldValue);\n\n      return new Promise((resolve, reject) => {\n        uploadTask.on(\n          \"state_changed\",\n          (snapshot) => {},\n          (error) => {\n            reject(error);\n          },\n          () => {\n            storageRef\n              .child(`images/${pid}`)\n              .getDownloadURL()\n              .then((url) => {\n                setImgUrl(url);\n                resolve(url);\n              });\n          }\n        );\n      });\n    }\n  };\n\n  const registerForm = useFormik({\n    initialValues: {\n      pid: uuidv4(),\n      name: \"\",\n      fname: \"\",\n      address: \"\",\n      mno: \"\",\n      file: \"\",\n    },\n    validate,\n    onSubmit: async (values) => {\n      console.log(values);\n      const url = await imageUpload(values.pid);\n      // console.log(\"file\",fieldValue);\n      const data = {\n        pid: values.pid,\n        name: values.name,\n        fname: values.fname,\n        address: values.address,\n        mno: values.mno,\n        image: url,\n      };\n      firestore\n        .collection(\"gourav\")\n        .doc(values.pid)\n        .set(data, { merge: true })\n        .then(function () {\n          console.log(\"success\");\n          navigate(\"/home\");\n        });\n    },\n  });\n\n  return (\n    <div>\n      <SideBar />\n      <div\n        className=\"row\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <div>\n          <form role=\"form\" onSubmit={registerForm.handleSubmit}>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>नाम </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"नाम\"\n                    name=\"name\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.name}\n                  />\n                </div>\n                {registerForm.errors.name ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.name}</p>\n                ) : null}\n              </div>\n              <div className=\"col-sm-6\">\n                {/* text input */}\n                <div className=\"form-group\">\n                  <label>पिता का नाम </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"पिता का नाम\"\n                    name=\"fname\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.fname}\n                  />\n                </div>\n                {registerForm.errors.fname ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.fname}</p>\n                ) : null}\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                {/* text input */}\n                <div className=\"form-group\">\n                  <label>फोटो </label>\n                  <input\n                    type=\"file\"\n                    className=\"form-control\"\n                    placeholder=\"फोटो\"\n                    name=\"file\"\n                    id=\"file\"\n                    // onChange={registerForm.handleChange}\n                    onChange={(event) => {\n                      setFieldValue(event.currentTarget.files[0]);\n                    }}\n                  ></input>\n                </div>\n                {registerForm.errors.file ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.file}</p>\n                ) : null}\n              </div>\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>पता </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Address\"\n                    name=\"address\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.address}\n                  />\n                </div>\n                {registerForm.errors.address ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.address}</p>\n                ) : null}\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>मोबाइल नंबर </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"मोबाइल नंबर \"\n                    name=\"mno\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.mno}\n                  />\n                </div>\n                {registerForm.errors.mno ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.mno}</p>\n                ) : null}\n              </div>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-info\">\n              रजिस्टर{\" \"}\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Gourav;\n","/home/user/projects/samuhikProject/src/pages/EditUser.js",["247","248"],"/home/user/projects/samuhikProject/src/firebase.config.js",[],"/home/user/projects/samuhikProject/src/components/Received.js",[],"/home/user/projects/samuhikProject/src/pages/Video.js",["249","250"],"import React, { useState } from \"react\";\nimport SideBar from \"../components/Sidebar\";\nimport { useFormik } from \"formik\";\nimport { navigate } from \"hookrouter\";\nimport { firestore, storage } from \"../firebase.config\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Video = () => {\n  const [fieldValue, setFieldValue] = useState({});\n  const [uploadPercent, setUploadPercent] = useState(0);\n  const [imgUrl, setImgUrl] = useState();\n  \n  var storageRef = storage.ref();\n\n  const validate = (values) => {\n    console.log(\"in validate\");\n    const errors = {};\n    if (!fieldValue) {\n      errors.file = \"Video Required\";\n    }\n    if (!values.event) {\n      errors.event = \"Event Required\";\n    }\n\n    return errors;\n  };\n\n  const videoUpload = async (pid) => {\n    // console.log(\"image upload\",fieldValue);\n    if (fieldValue) {\n      var metadata = {\n        contentType: fieldValue.type,\n      };\n      const uploadTask = storageRef.child(`video/${pid}`).put(fieldValue,metadata);\n\n      return new Promise((resolve, reject) => {\n        uploadTask.on(\n          \"state_changed\",\n          (snapshot) => {\n            var progress =\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                setUploadPercent(progress);\n            console.log(\"Upload is \" + progress + \"% done\");\n          },\n          (error) => {\n            reject(error);\n          },\n          () => {\n            storageRef\n              .child(`video/${pid}`)\n              .getDownloadURL()\n              .then((url) => {\n                setImgUrl(url);\n                resolve(url);\n              });\n          }\n        );\n      });\n    }\n  };\n\n  const registerForm = useFormik({\n    initialValues: {\n      pid: uuidv4(),\n      event: \"\",\n      date:\"\",\n      file: \"\",\n    },\n    validate,\n    onSubmit: async (values) => {\n      console.log(values);\n      const url = await videoUpload(values.pid);\n      // console.log(\"file\",fieldValue);\n      const data = {\n        pid: values.pid,\n        event: values.event,\n        date: values.date,\n        video: url,\n      };\n      firestore\n        .collection(\"video\")\n        .doc(values.pid)\n        .set(data, { merge: true })\n        .then(function () {\n          console.log(\"success\");\n          navigate(\"/home\");\n        });\n    },\n  });\n\n  return (\n    <div>\n      <SideBar />\n      <div\n        className=\"row\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <div>\n          <form role=\"form\" onSubmit={registerForm.handleSubmit}>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>आयोजन </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"आयोजन \"\n                    name=\"event\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.event}\n                  />\n                </div>\n                {registerForm.errors.event ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.event}</p>\n                ) : null}\n              </div>\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>दिनांक </label>\n                  <input\n                    type=\"date\"\n                    placeholder=\"Date\"\n                    className=\"form-control\"\n                    name=\"date\"\n                    onChange={registerForm.handleChange}\n                  />\n                </div>\n                {registerForm.errors.date ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.date}</p>\n                ) : null}\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                {/* text input */}\n                <div className=\"form-group\">\n                  <label>फोटो </label>\n                  <input\n                    type=\"file\"\n                    className=\"form-control\"\n                    placeholder=\"फोटो\"\n                    name=\"file\"\n                    id=\"file\"\n                    // onChange={registerForm.handleChange}\n                    onChange={(event) => {\n                      setFieldValue(event.currentTarget.files[0]);\n                    }}\n                  ></input>\n                </div>\n                {registerForm.errors.file ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.file}</p>\n                ) : null}\n                {uploadPercent ? (\n                    <span>\n                      Video Upload Progress: {uploadPercent}\n                      {\"%\"}\n                    </span>\n                  ) : null}\n              </div>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-info\">\n              ऐड करे{\" \"}\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Video;\n","/home/user/projects/samuhikProject/src/components/DonationMaster.js",["251","252","253","254"],"import React, { useEffect, useState } from \"react\";\nimport { firestore } from \"../firebase.config\";\nimport { navigate } from \"hookrouter\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useFormik } from \"formik\";\n\nexport default function DonationMaster() {\n  const [dtype, setdTypes] = useState([]);\n  const [showResult, setShowResult] = useState(false);\n  const [showForm, setShowForm] = useState(false);\n\n  useEffect(async () => {\n    if (localStorage.getItem(\"logged\") !== \"true\") {\n      navigate(\"/\");\n    }\n    const document = firestore.collection(\"donation_type\");\n    const activeRef = await document.get();\n    var dt = [];\n    activeRef.forEach((docs) => {\n      dt.push(docs.data());\n    });\n\n    setdTypes(dt);\n    setShowResult(true);\n  });\n\n  const changeState = () => {\n    console.log(\"changinhg\");\n    setShowForm(!showForm);\n  };\n\n  const deleteType = (id) => {\n    var data = [];\n    dtype.map((d) => {\n      if (d.id !== id) {\n        data.push(d);\n      }\n    });\n    // console.log(data);\n    setShowResult(data);\n    const query = firestore\n      .collection(\"donation_type\")\n      .where(\"id\", \"==\", id);\n    const exe = query.get().then(function (q) {\n      q.forEach(function (doc) {\n        doc.ref.delete();\n        alert(\"Donation Type Deleted\");\n      });\n    });\n  };\n\n  const validate = (values) => {\n    const errors = {};\n    if (!values.name) {\n      errors.name = \"Name Required\";\n    }\n\n    return errors;\n  };\n  const newFormik = useFormik({\n    initialValues: {\n      id: \"\",\n      name: \"\",\n    },\n    validate,\n    onSubmit: (values) => {\n      console.log(values);\n      let id = uuidv4();\n      const data = {\n        id: id,\n        name: values.name,\n      };\n      console.log(data);\n      firestore\n        .collection(\"donation_type\")\n        .doc(id)\n        .set(data, { merge: true })\n        .then(function () {\n          console.log(\"success\");\n          navigate(\"/home\");\n        });\n    },\n  });\n\n  return (\n    <div>\n      {showResult && (\n        <div>\n          <table id=\"example2\" className=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th>Donation Type</th>\n                <th>Delete</th>\n              </tr>\n            </thead>\n            <tbody>\n              {dtype.map((val, i) => (\n                <tr>\n                  <td>{val.name}</td>\n                  <td>\n                    <span\n                      onClick={() => deleteType(val.id)}\n                      style={{ color: \"blue\" }}\n                    >\n                      <i className=\"fas fa-trash\" style={{ color: \"red\" }}></i>\n                    </span>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              flexDirection: \"row\",\n              width: \"10%\",\n              backgroundColor: \"#007bff\",\n              padding: \"8px\",\n            }}\n            onClick={() => changeState()}\n          >\n            <i className=\"fas fa-plus\" style={{ color: \"black\" }}></i>\n            <h6>Add New</h6>\n          </div>\n        </div>\n      )}\n      <div>\n        {showForm && (\n          <form onSubmit={newFormik.handleSubmit}>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>नाम </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"नाम\"\n                    name=\"name\"\n                    onChange={newFormik.handleChange}\n                    value={newFormik.values.name}\n                  />\n                </div>\n                {newFormik.errors.name ? (\n                  <p style={{ color: \"red\" }}>{newFormik.errors.name}</p>\n                ) : null}\n              </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-info\">\n              सबमिट{\" \"}\n            </button>\n          </form>\n        )}\n      </div>\n    </div>\n  );\n}\n","/home/user/projects/samuhikProject/src/components/ShowMedia.js",["255","256","257","258","259"],"import React, { useState, useEffect } from \"react\";\nimport { navigate } from \"hookrouter\";\nimport { firestore, storage } from \"../firebase.config\";\nimport ReactPlayer from \"react-player\";\n\nexport default function ShowMedia({ type }) {\n  const [finalData, setFinalData] = useState([]);\n  var storageRef = storage.ref();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const query = firestore.collection(type);\n      const exeQuery = await query.get();\n      var data = [];\n\n      exeQuery.forEach((d) => {\n        data.push(d.data());\n      });\n\n      console.log(\"data\", data);\n      setFinalData(data);\n    };\n    fetchData();\n  }, []);\n\n  const deleteMedia = (id) => {\n    var data = [];\n    finalData.map((d) => {\n      if (d.pid !== id) {\n        data.push(d);\n      }\n    });\n    // console.log(data);\n    setFinalData(data);\n    const query = firestore.collection(type).where(\"pid\", \"==\", id);\n    const exe = query.get().then(function (q) {\n      q.forEach(function (doc) {\n        doc.ref.delete();\n        var folder = type === \"photo\" ? \"images\" :\"video\"\n        const delRef = storageRef.child(`${folder}/${id}`);\n        delRef\n          .delete()\n          .then(function () {\n            alert(\"Media deleted\");\n          })\n          .catch(function (err) {\n            console.log(\"Error deleting\");\n          });\n      });\n    });\n  };\n  return (\n    <div>\n      {finalData.length > 0 && (\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n          {finalData.map((val, i) => (\n            <div style={{ flexBasis: \"33.33%\" }}>\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <div className=\"card-title\">\n                    <h3>{val.event}</h3>\n                  </div>\n                </div>\n                <div className=\"card-body\">\n                  {type === \"photo\" ? (\n                    <img\n                      src={val.image}\n                      style={{ width: \"100%\", height: \"100%\" }}\n                    />\n                  ) : (\n                    <ReactPlayer url={val.video} controls={true} width=\"100%\" />\n                  )}\n                </div>\n                <div className=\"card-footer\">\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      flexDirection: \"row\",\n                      flexWrap: \"wrap\",\n                    }}\n                  >\n                    <h6>{val.date}</h6>\n                    <div>\n                      <span\n                        onClick={() => deleteMedia(val.pid)}\n                        style={{ color: \"blue\" }}\n                      >\n                        <i\n                          className=\"fas fa-trash\"\n                          style={{ color: \"red\" }}\n                        ></i>\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n","/home/user/projects/samuhikProject/src/App.js",[],["260","261"],"/home/user/projects/samuhikProject/src/components/Ghoshna.js",[],"/home/user/projects/samuhikProject/src/components/RegNoSearch.js",[],"/home/user/projects/samuhikProject/src/pages/Nirman.js",["262","263"],"import React, { useState } from \"react\";\nimport SideBar from \"../components/Sidebar\";\nimport { useFormik } from \"formik\";\nimport { navigate } from \"hookrouter\";\nimport { firestore, storage } from \"../firebase.config\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Nirman = () => {\n  const [fieldValue, setFieldValue] = useState({});\n  var storageRef = storage.ref();\n  const [imgUrl, setImgUrl] = useState();\n\n  const validate = (values) => {\n    console.log(\"in validate\");\n    const errors = {};\n    if (!fieldValue) {\n      errors.file = \"Image Required\";\n    }\n    if (!values.name) {\n      errors.name = \"Name Required\";\n    }\n\n    if (values.mno && !values.mno.match(/^\\d{10}$/)) {\n      errors.mno = \"Invalid Phone Number. 10 Digits Required\";\n    }\n    return errors;\n  };\n\n  const imageUpload = async (pid) => {\n    // console.log(\"image upload\",fieldValue);\n    if (fieldValue) {\n      const uploadTask = storageRef.child(`images/${pid}`).put(fieldValue);\n\n      return new Promise((resolve, reject) => {\n        uploadTask.on(\n          \"state_changed\",\n          (snapshot) => {},\n          (error) => {\n            reject(error);\n          },\n          () => {\n            storageRef\n              .child(`images/${pid}`)\n              .getDownloadURL()\n              .then((url) => {\n                setImgUrl(url);\n                resolve(url);\n              });\n          }\n        );\n      });\n    }\n  };\n\n  const registerForm = useFormik({\n    initialValues: {\n      pid: uuidv4(),\n      name: \"\",\n      fname: \"\",\n      address: \"\",\n      mno: \"\",\n      file: \"\",\n    },\n    validate,\n    onSubmit: async (values) => {\n      console.log(values);\n      const url = await imageUpload(values.pid);\n      // console.log(\"file\",fieldValue);\n      const data = {\n        pid: values.pid,\n        name: values.name,\n        fname: values.fname,\n        address: values.address,\n        mno: values.mno,\n        image: url,\n      };\n      firestore\n        .collection(\"nirman\")\n        .doc(values.pid)\n        .set(data, { merge: true })\n        .then(function () {\n          console.log(\"success\");\n          navigate(\"/home\");\n        });\n    },\n  });\n\n  return (\n    <div>\n      <SideBar />\n      <div\n        className=\"row\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <div>\n          <form role=\"form\" onSubmit={registerForm.handleSubmit}>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>नाम </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"नाम\"\n                    name=\"name\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.name}\n                  />\n                </div>\n                {registerForm.errors.name ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.name}</p>\n                ) : null}\n              </div>\n              <div className=\"col-sm-6\">\n                {/* text input */}\n                <div className=\"form-group\">\n                  <label>पिता का नाम </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"पिता का नाम\"\n                    name=\"fname\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.fname}\n                  />\n                </div>\n                {registerForm.errors.fname ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.fname}</p>\n                ) : null}\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                {/* text input */}\n                <div className=\"form-group\">\n                  <label>फोटो </label>\n                  <input\n                    type=\"file\"\n                    className=\"form-control\"\n                    placeholder=\"फोटो\"\n                    name=\"file\"\n                    id=\"file\"\n                    // onChange={registerForm.handleChange}\n                    onChange={(event) => {\n                      setFieldValue(event.currentTarget.files[0]);\n                    }}\n                  ></input>\n                </div>\n                {registerForm.errors.file ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.file}</p>\n                ) : null}\n              </div>\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>पता </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Address\"\n                    name=\"address\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.address}\n                  />\n                </div>\n                {registerForm.errors.address ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.address}</p>\n                ) : null}\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>मोबाइल नंबर </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"मोबाइल नंबर \"\n                    name=\"mno\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.mno}\n                  />\n                </div>\n                {registerForm.errors.mno ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.mno}</p>\n                ) : null}\n              </div>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-info\">\n              रजिस्टर{\" \"}\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Nirman;\n","/home/user/projects/samuhikProject/src/pages/Tkp.js",["264","265"],"import React, { useState } from \"react\";\nimport SideBar from \"../components/Sidebar\";\nimport { useFormik } from \"formik\";\nimport { navigate } from \"hookrouter\";\nimport { firestore, storage } from \"../firebase.config\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Tkp = () => {\n  const [fieldValue, setFieldValue] = useState({});\n  var storageRef = storage.ref();\n  const [imgUrl, setImgUrl] = useState();\n\n  const validate = (values) => {\n    console.log(\"in validate\");\n    const errors = {};\n    if (!fieldValue) {\n      errors.file = \"Image Required\";\n    }\n    if (!values.name) {\n      errors.name = \"Name Required\";\n    }\n\n    if (values.mno && !values.mno.match(/^\\d{10}$/)) {\n      errors.mno = \"Invalid Phone Number. 10 Digits Required\";\n    }\n    return errors;\n  };\n\n  const imageUpload = async (pid) => {\n    // console.log(\"image upload\",fieldValue);\n    if (fieldValue) {\n      const uploadTask = storageRef.child(`images/${pid}`).put(fieldValue);\n\n      return new Promise((resolve, reject) => {\n        uploadTask.on(\n          \"state_changed\",\n          (snapshot) => {},\n          (error) => {\n            reject(error);\n          },\n          () => {\n            storageRef\n              .child(`images/${pid}`)\n              .getDownloadURL()\n              .then((url) => {\n                setImgUrl(url);\n                resolve(url);\n              });\n          }\n        );\n      });\n    }\n  };\n\n  const registerForm = useFormik({\n    initialValues: {\n      pid: uuidv4(),\n      name: \"\",\n      fname: \"\",\n      address: \"\",\n      mno: \"\",\n      file: \"\",\n    },\n    validate,\n    onSubmit: async (values) => {\n      console.log(values);\n      const url = await imageUpload(values.pid);\n      // console.log(\"file\",fieldValue);\n      const data = {\n        pid: values.pid,\n        name: values.name,\n        fname: values.fname,\n        address: values.address,\n        mno: values.mno,\n        image: url,\n      };\n      firestore\n        .collection(\"tkp\")\n        .doc(values.pid)\n        .set(data, { merge: true })\n        .then(function () {\n          console.log(\"success\");\n          navigate(\"/home\");\n        });\n    },\n  });\n\n  return (\n    <div>\n      <SideBar />\n      <div\n        className=\"row\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <div>\n          <form role=\"form\" onSubmit={registerForm.handleSubmit}>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>नाम </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"नाम\"\n                    name=\"name\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.name}\n                  />\n                </div>\n                {registerForm.errors.name ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.name}</p>\n                ) : null}\n              </div>\n              <div className=\"col-sm-6\">\n                {/* text input */}\n                <div className=\"form-group\">\n                  <label>पिता का नाम </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"पिता का नाम\"\n                    name=\"fname\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.fname}\n                  />\n                </div>\n                {registerForm.errors.fname ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.fname}</p>\n                ) : null}\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                {/* text input */}\n                <div className=\"form-group\">\n                  <label>फोटो </label>\n                  <input\n                    type=\"file\"\n                    className=\"form-control\"\n                    placeholder=\"फोटो\"\n                    name=\"file\"\n                    id=\"file\"\n                    // onChange={registerForm.handleChange}\n                    onChange={(event) => {\n                      setFieldValue(event.currentTarget.files[0]);\n                    }}\n                  ></input>\n                </div>\n                {registerForm.errors.file ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.file}</p>\n                ) : null}\n              </div>\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>पता </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Address\"\n                    name=\"address\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.address}\n                  />\n                </div>\n                {registerForm.errors.address ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.address}</p>\n                ) : null}\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>मोबाइल नंबर </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"मोबाइल नंबर \"\n                    name=\"mno\"\n                    onChange={registerForm.handleChange}\n                    value={registerForm.values.mno}\n                  />\n                </div>\n                {registerForm.errors.mno ? (\n                  <p style={{ color: \"red\" }}>{registerForm.errors.mno}</p>\n                ) : null}\n              </div>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-info\">\n              रजिस्टर{\" \"}\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Tkp;\n","/home/user/projects/samuhikProject/src/index.js",[],"/home/user/projects/samuhikProject/src/components/GVSearch.js",["266","267","268","269"],"import React,{useState,useEffect} from \"react\"\nimport { firestore } from \"../firebase.config\";\nimport { navigate } from \"hookrouter\";\nimport { useFormik,} from \"formik\";\nimport _ from 'underscore'\nimport Display from './Display'\n\nconst GVSearch = (props) => {\n    const [gaadiName,setGaadiName] = useState([]);\n    const [villageName,setVillageName] = useState([])  \n    const [usersData, setUserData] = useState([]);\n    const [recData, setRecData] = useState([]);\n\n    useEffect( () => {\n        if (localStorage.getItem(\"logged\") !== \"true\") {\n            navigate(\"/\");\n          }\n          loadGaadis()\n    },[]);\n    \n\n    const loadGaadis = async() =>{\n        const document = firestore.collection(\"gaadi_name\")\n        const activeRef =  await document.get()\n          var gaadis = [];\n          activeRef.forEach((docs) => {\n            gaadis.push(docs.data())\n          })\n          \n        setGaadiName(gaadis)\n    }\n\n    const loadVillages = async () =>{\n        if(searchForm.values.gname){\n          const coll_name = \"gaadi_name/\"+searchForm.values.gname+\"/village_name\"\n          const document = await firestore.collection(coll_name).get()\n          //console.log(\"gname\",document.docs)\n          var villages = []\n          document.docs.map((village) => {\n            villages.push(village.data())\n          })\n          // console.log(villages)\n          setVillageName(villages)\n        }else{\n          alert(\"गादी का नाम डाले \")\n        }\n       \n    }\n\n    const mergeData = () =>{\n        // console.log(\"ud \",usersData);\n        // console.log(\"rec \",recData);\n        // console.log(\"ud len\",usersData.length);\n        //  console.log(\"rec len\",recData.length);\n        if(usersData.length > 0 && recData.length > 0)\n           {\n                console.log(\"callback userdata\",usersData);\n                console.log(\"callback recData\",recData);    \n                props.parentCallback(usersData,recData)\n            }else if( usersData.length === 0 || recData.length === 0){\n                props.parentCallback(usersData,recData)\n                alert(\"No data found\")\n\n            }\n    }\n\n   \n    const searchForm = useFormik({\n        initialValues:{\n          gname:\"\",\n          vname:\"\",\n        },\n        onSubmit: async(values) => {\n            console.log(values);\n            if(values.gname.length > 0 && values.vname.length > 0){\n                const query = firestore.collection(\"entries\").where(\"gname\",\"==\",values.gname) .where(\"vname\",\"==\",values.vname) \n                const exeQuery = await query.get();\n                let userData = []\n                let ids = []\n                let recieptData = []\n\n                for(const doc of exeQuery.docs){\n                    userData.push(doc.data())\n                    ids.push(doc.id);\n                }\n                setUserData(userData)\n                ids.forEach(async (id) => {\n                    const getData = firestore.collection(\"all_receipts\").where(\"uid\" ,\"==\",id)\n                    const exeGetData = await getData.get()\n                   for(const d of exeGetData.docs){\n                        recieptData.push(d.data())\n                    }\n                    setRecData(recieptData)\n                })    \n                 \n            mergeData() \n\n            }else if(values.gname.length > 0  && values.vname.length === 0){\n                const query = firestore.collection(\"entries\").where(\"gname\",\"==\",values.gname)\n                const exeQuery = await query.get();\n                var userData = []\n                var ids = []\n                var recieptData = []\n               \n                exeQuery.forEach((d) => {\n                    userData.push(d.data())\n                    ids.push(d.id);\n                })\n                console.log(userData);\n                setUserData(userData)\n                ids.forEach(async (id) => {\n                    const getData = firestore.collection(\"all_receipts\").where(\"uid\" ,\"==\",id)\n                    const exeGetData = await getData.get()\n                    exeGetData.forEach((d) => {\n                         recieptData.push(d.data())\n                    })\n                    setRecData(recieptData)\n                })    \n                 \n                mergeData()\n            }\n        }\n    })\n\n    return(\n        <div>\n           <form onSubmit ={searchForm.handleSubmit}>\n                <div className=\"row\">\n                        <div className=\"col-sm-6\">\n                            <div className=\"form-group\">\n                                <label>गादी का नाम </label>\n                                <select \n                                    className=\"form-control\"\n                                    name=\"gname\" \n                                    value={searchForm.values.gname}\n                                    onChange={searchForm.handleChange}\n                                >\n                                    <option value=\"\" disabled defaultValue=\"select\">Select one</option>\n                                        { gaadiName.map((gaadi) => \n                                        <option value={gaadi.id}>{gaadi.name}</option>\n                                        )}\n                                </select>\n                            </div>\n                         </div>\n                            <div className=\"col-sm-6\">\n                                <div className=\"form-group\" onClick ={() => loadVillages()}>\n                                    <label>गांव का नाम </label>\n                                    <select \n                                        className=\"form-control\"\n                                        name=\"vname\" \n                                        value={searchForm.values.vname}\n                                        onChange={searchForm.handleChange}\n                                    >\n                                        <option value=\"\" disabled defaultValue=\"select\">Select one</option>\n                                            { villageName.map((vname) => \n                                            <option value={vname.id}>{vname.name}</option>\n                                            )}\n                                    </select>\n                                </div>\n                           </div>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-info\">Search </button>\n           </form>\n           {/* <div>\n        //    {usersData && <div className=\"row\">\n        //                  <div className=\"col-12\">\n        //                      <div className=\"card\">\n        //                      <div className=\"card-body\">\n        //                          <table id=\"example2\" className=\"table table-bordered table-hover\">\n        //                          <thead>\n        //                              <tr>\n        //                              <th>Name</th>\n        //                              <th>Father's Name</th>\n        //                              <th>Address</th>\n        //                              <th>Village Name</th>\n        //                              <th>Gaadi Name</th>\n        //                              <th>Mobile Number</th>\n        //                              <th>Donation For</th>\n        //                              <th>Payment type</th>\n        //                              <th>Date</th>\n        //                              <th>Amount</th>\n        //                              <th>Reciept Number</th>\n        //                              <th>Name to be Printed</th>\n        //                              <th>Note</th>\n        //                              </tr>\n        //                          </thead>\n        //                             {usersData.map((val,i) =>{\n        //                                 // console.log(val)\n        //                                 <Display uData = {val}  index = {i} />\n        //                             })}\n        //                          </table>\n        //                      </div>\n        //                      </div>\n                             \n        //                  </div>\n        //                  </div>\n        // </div>   */}\n        </div>\n    )\n}\n\nexport default GVSearch","/home/user/projects/samuhikProject/src/components/GaadiMaster.js",["270"],"import React, { useEffect, useState } from \"react\";\nimport { firestore } from \"../firebase.config\";\nimport { navigate } from \"hookrouter\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useFormik } from \"formik\";\nimport Row from \"../components/Row\";\n\nexport default function GaadiMaster() {\n  const [gName, setgName] = useState([]);\n  const [allGaadis, setAllGaadis] = useState([]);\n  const [showResult, setShowResult] = useState(false);\n  const [showForm, setShowForm] = useState(false);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"logged\") !== \"true\") {\n      navigate(\"/\");\n    }\n\n    loadData();\n  }, []);\n\n  useEffect(() => {\n    console.log(\"gname\", gName);\n  }, [gName]);\n\n  const loadGaadis = async () => {\n    const document = firestore.collection(\"gaadi_name\");\n    const activeRef = await document.get();\n    var gaadis = [];\n    activeRef.forEach((docs) => {\n      gaadis.push(docs.data());\n    });\n    console.log(\"all gaadis\", gaadis);\n    setAllGaadis(gaadis);\n  };\n\n  const loadData = async () => {\n    var data = [];\n    firestore\n      .collection(\"gaadi_name\")\n      .get()\n      .then(function (res) {\n        res.forEach(function (doc) {\n          data.push(doc.data());\n        });\n        // console.log(\"gaadis\",JSON.stringify(data));\n        setgName(data);\n      });\n\n    setShowResult(true);\n  };\n\n  const changeState = () => {\n    console.log(\"changing\");\n    if (showForm === false && allGaadis.length === 0) loadGaadis();\n    setShowForm(!showForm);\n  };\n\n  const validate = (values) => {\n    const errors = {};\n    if (values.gname === \"None\" && !values.name) {\n      errors.name = \"Gaadi Name Required\";\n    }\n    if (values.gname !== \"None\" && !values.vname) {\n      errors.vname = \"Village Name Required\";\n    }\n\n    return errors;\n  };\n  const newFormik = useFormik({\n    initialValues: {\n      id: \"\",\n      name: \"\",\n      gname: \"\",\n      vname: \"\",\n    },\n    validate,\n    onSubmit: (values) => {\n      console.log(values);\n      var data = {};\n      if (values.gname === \"None\") {\n        data[\"name\"] = values.name;\n        data[\"id\"] = values.name;\n        firestore\n          .collection(\"gaadi_name\")\n          .doc(values.name)\n          .set(data, { merge: true })\n          .then(function () {\n            console.log(\"success\");\n            navigate(\"/home\");\n          });\n      }\n      if (values.gname !== \"None\") {\n        data[\"name\"] = data[\"id\"] = values.vname;\n        firestore\n          .collection(\"gaadi_name\")\n          .doc(values.gname)\n          .collection(\"village_name\")\n          .doc(values.vname)\n          .set(data, { merge: true })\n          .then(function () {\n            console.log(\"success\");\n            navigate(\"/home\");\n          });\n      }\n    },\n  });\n\n  return (\n    <div>\n      {showResult && (\n        <div>\n          <table id=\"example2\" className=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th>Gaadi</th>\n                <th>Village</th>\n                <th>Delete</th>\n              </tr>\n            </thead>\n              {gName.map((val, i) => (\n                <Row gname={val} />\n              ))}\n          </table>\n\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              flexDirection: \"row\",\n              width: \"10%\",\n              backgroundColor: \"#007bff\",\n              padding: \"8px\",\n            }}\n            onClick={() => changeState()}\n          >\n            <i className=\"fas fa-plus\" style={{ color: \"black\" }}></i>\n            <h6>Add New</h6>\n          </div>\n        </div>\n      )}\n      <div>\n        {showForm && (\n          <form onSubmit={newFormik.handleSubmit}>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label>गादी </label>\n                  <select\n                    className=\"form-control\"\n                    name=\"gname\"\n                    value={newFormik.values.gname}\n                    onChange={newFormik.handleChange}\n                  >\n                    <option value=\"\" disabled defaultValue=\"select\">\n                      Select one\n                    </option>\n                    {allGaadis.map((gaadi) => (\n                      <option value={gaadi.id}>{gaadi.name}</option>\n                    ))}\n                    <option value=\"None\">None</option>\n                  </select>\n                </div>\n              </div>\n              {newFormik.values.gname === \"None\" && (\n                <div className=\"col-sm-6\">\n                  <div className=\"form-group\">\n                    <label>गादी का नाम </label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"नाम\"\n                      name=\"name\"\n                      onChange={newFormik.handleChange}\n                      value={newFormik.values.name}\n                    />\n                  </div>\n                  {newFormik.errors.name ? (\n                    <p style={{ color: \"red\" }}>{newFormik.errors.name}</p>\n                  ) : null}\n                </div>\n              )}\n              {newFormik.values.gname !== \"None\" && (\n                <div className=\"col-sm-6\">\n                  <div className=\"form-group\">\n                    <label>गांव का नाम </label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"नाम\"\n                      name=\"vname\"\n                      onChange={newFormik.handleChange}\n                    />\n                  </div>\n                  {newFormik.errors.vname ? (\n                    <p style={{ color: \"red\" }}>{newFormik.errors.vname}</p>\n                  ) : null}\n                </div>\n              )}\n            </div>\n            <button type=\"submit\" className=\"btn btn-info\">\n              सबमिट{\" \"}\n            </button>\n          </form>\n        )}\n      </div>\n    </div>\n  );\n}\n","/home/user/projects/samuhikProject/src/pages/SearchEntry.js",["271","272","273","274","275"],"/home/user/projects/samuhikProject/src/pages/MaargDarshan.js",["276","277"],"/home/user/projects/samuhikProject/src/pages/Skp.js",["278","279"],"/home/user/projects/samuhikProject/src/pages/AddEntry.js",["280","281","282","283"],"/home/user/projects/samuhikProject/src/components/NameSearch.js",[],"/home/user/projects/samuhikProject/src/components/Display.js",["284","285","286","287"],{"ruleId":"288","replacedBy":"289"},{"ruleId":"290","replacedBy":"291"},{"ruleId":"292","severity":1,"message":"293","line":3,"column":21,"nodeType":"294","messageId":"295","endLine":3,"endColumn":28},{"ruleId":"292","severity":1,"message":"296","line":4,"column":10,"nodeType":"294","messageId":"295","endLine":4,"endColumn":31},{"ruleId":"292","severity":1,"message":"297","line":8,"column":10,"nodeType":"294","messageId":"295","endLine":8,"endColumn":13},{"ruleId":"292","severity":1,"message":"298","line":8,"column":15,"nodeType":"294","messageId":"295","endLine":8,"endColumn":22},{"ruleId":"299","severity":1,"message":"300","line":30,"column":6,"nodeType":"301","endLine":30,"endColumn":8,"suggestions":"302"},{"ruleId":"303","severity":1,"message":"304","line":34,"column":23,"nodeType":"305","messageId":"306","endLine":34,"endColumn":25},{"ruleId":"292","severity":1,"message":"307","line":42,"column":11,"nodeType":"294","messageId":"295","endLine":42,"endColumn":14},{"ruleId":"308","severity":1,"message":"309","line":96,"column":23,"nodeType":"310","endLine":99,"endColumn":25},{"ruleId":"292","severity":1,"message":"311","line":9,"column":10,"nodeType":"294","messageId":"295","endLine":9,"endColumn":16},{"ruleId":"299","severity":1,"message":"312","line":24,"column":6,"nodeType":"301","endLine":24,"endColumn":8,"suggestions":"313"},{"ruleId":"292","severity":1,"message":"314","line":42,"column":9,"nodeType":"294","messageId":"295","endLine":42,"endColumn":17},{"ruleId":"315","severity":1,"message":"316","line":136,"column":19,"nodeType":"310","endLine":136,"endColumn":74},{"ruleId":"308","severity":1,"message":"309","line":142,"column":27,"nodeType":"310","endLine":145,"endColumn":29},{"ruleId":"288","replacedBy":"317"},{"ruleId":"290","replacedBy":"318"},{"ruleId":"292","severity":1,"message":"319","line":10,"column":10,"nodeType":"294","messageId":"295","endLine":10,"endColumn":16},{"ruleId":"292","severity":1,"message":"320","line":12,"column":7,"nodeType":"294","messageId":"295","endLine":12,"endColumn":10},{"ruleId":"321","severity":1,"message":"322","line":38,"column":54,"nodeType":"323","messageId":"324","endLine":38,"endColumn":55},{"ruleId":"321","severity":1,"message":"322","line":56,"column":54,"nodeType":"323","messageId":"324","endLine":56,"endColumn":55},{"ruleId":"321","severity":1,"message":"322","line":76,"column":54,"nodeType":"323","messageId":"324","endLine":76,"endColumn":55},{"ruleId":"321","severity":1,"message":"322","line":100,"column":54,"nodeType":"323","messageId":"324","endLine":100,"endColumn":55},{"ruleId":"321","severity":1,"message":"322","line":118,"column":54,"nodeType":"323","messageId":"324","endLine":118,"endColumn":55},{"ruleId":"321","severity":1,"message":"322","line":135,"column":54,"nodeType":"323","messageId":"324","endLine":135,"endColumn":55},{"ruleId":"321","severity":1,"message":"322","line":154,"column":54,"nodeType":"323","messageId":"324","endLine":154,"endColumn":55},{"ruleId":"321","severity":1,"message":"322","line":172,"column":54,"nodeType":"323","messageId":"324","endLine":172,"endColumn":55},{"ruleId":"321","severity":1,"message":"322","line":190,"column":54,"nodeType":"323","messageId":"324","endLine":190,"endColumn":55},{"ruleId":"321","severity":1,"message":"322","line":209,"column":54,"nodeType":"323","messageId":"324","endLine":209,"endColumn":55},{"ruleId":"321","severity":1,"message":"322","line":227,"column":54,"nodeType":"323","messageId":"324","endLine":227,"endColumn":55},{"ruleId":"292","severity":1,"message":"311","line":11,"column":10,"nodeType":"294","messageId":"295","endLine":11,"endColumn":16},{"ruleId":"315","severity":1,"message":"316","line":100,"column":11,"nodeType":"310","endLine":100,"endColumn":66},{"ruleId":"288","replacedBy":"325"},{"ruleId":"290","replacedBy":"326"},{"ruleId":"292","severity":1,"message":"327","line":1,"column":17,"nodeType":"294","messageId":"295","endLine":1,"endColumn":26},{"ruleId":"292","severity":1,"message":"311","line":10,"column":10,"nodeType":"294","messageId":"295","endLine":10,"endColumn":16},{"ruleId":"315","severity":1,"message":"316","line":101,"column":11,"nodeType":"310","endLine":101,"endColumn":66},{"ruleId":"292","severity":1,"message":"314","line":21,"column":9,"nodeType":"294","messageId":"295","endLine":21,"endColumn":17},{"ruleId":"299","severity":1,"message":"328","line":10,"column":3,"nodeType":"294","endLine":10,"endColumn":12,"suggestions":"329"},{"ruleId":"299","severity":1,"message":"330","line":10,"column":13,"nodeType":"305","endLine":22,"endColumn":4},{"ruleId":"292","severity":1,"message":"331","line":1,"column":17,"nodeType":"294","messageId":"295","endLine":1,"endColumn":25},{"ruleId":"292","severity":1,"message":"293","line":5,"column":21,"nodeType":"294","messageId":"295","endLine":5,"endColumn":28},{"ruleId":"315","severity":1,"message":"316","line":59,"column":11,"nodeType":"310","endLine":59,"endColumn":66},{"ruleId":"288","replacedBy":"332"},{"ruleId":"290","replacedBy":"333"},{"ruleId":"292","severity":1,"message":"311","line":11,"column":10,"nodeType":"294","messageId":"295","endLine":11,"endColumn":16},{"ruleId":"315","severity":1,"message":"316","line":93,"column":11,"nodeType":"310","endLine":93,"endColumn":66},{"ruleId":"292","severity":1,"message":"331","line":1,"column":17,"nodeType":"294","messageId":"295","endLine":1,"endColumn":25},{"ruleId":"292","severity":1,"message":"293","line":5,"column":21,"nodeType":"294","messageId":"295","endLine":5,"endColumn":28},{"ruleId":"315","severity":1,"message":"316","line":59,"column":11,"nodeType":"310","endLine":59,"endColumn":66},{"ruleId":"299","severity":1,"message":"334","line":10,"column":6,"nodeType":"301","endLine":10,"endColumn":8,"suggestions":"335"},{"ruleId":"303","severity":1,"message":"304","line":36,"column":28,"nodeType":"305","messageId":"306","endLine":36,"endColumn":30},{"ruleId":"292","severity":1,"message":"307","line":46,"column":11,"nodeType":"294","messageId":"295","endLine":46,"endColumn":14},{"ruleId":"315","severity":1,"message":"316","line":51,"column":21,"nodeType":"310","endLine":51,"endColumn":77},{"ruleId":"292","severity":1,"message":"336","line":7,"column":8,"nodeType":"294","messageId":"295","endLine":7,"endColumn":9},{"ruleId":"303","severity":1,"message":"304","line":45,"column":23,"nodeType":"305","messageId":"306","endLine":45,"endColumn":25},{"ruleId":"303","severity":1,"message":"304","line":50,"column":23,"nodeType":"305","messageId":"306","endLine":50,"endColumn":25},{"ruleId":"292","severity":1,"message":"311","line":11,"column":10,"nodeType":"294","messageId":"295","endLine":11,"endColumn":16},{"ruleId":"315","severity":1,"message":"316","line":100,"column":11,"nodeType":"310","endLine":100,"endColumn":66},{"ruleId":"299","severity":1,"message":"337","line":34,"column":6,"nodeType":"301","endLine":34,"endColumn":13,"suggestions":"338"},{"ruleId":"303","severity":1,"message":"304","line":75,"column":35,"nodeType":"305","messageId":"306","endLine":75,"endColumn":37},{"ruleId":"292","severity":1,"message":"311","line":11,"column":10,"nodeType":"294","messageId":"295","endLine":11,"endColumn":16},{"ruleId":"315","severity":1,"message":"316","line":103,"column":11,"nodeType":"310","endLine":103,"endColumn":66},{"ruleId":"299","severity":1,"message":"328","line":12,"column":3,"nodeType":"294","endLine":12,"endColumn":12,"suggestions":"339"},{"ruleId":"299","severity":1,"message":"330","line":12,"column":13,"nodeType":"305","endLine":25,"endColumn":4},{"ruleId":"303","severity":1,"message":"304","line":34,"column":19,"nodeType":"305","messageId":"306","endLine":34,"endColumn":21},{"ruleId":"292","severity":1,"message":"307","line":44,"column":11,"nodeType":"294","messageId":"295","endLine":44,"endColumn":14},{"ruleId":"292","severity":1,"message":"340","line":2,"column":10,"nodeType":"294","messageId":"295","endLine":2,"endColumn":18},{"ruleId":"299","severity":1,"message":"300","line":24,"column":6,"nodeType":"301","endLine":24,"endColumn":8,"suggestions":"341"},{"ruleId":"303","severity":1,"message":"304","line":28,"column":23,"nodeType":"305","messageId":"306","endLine":28,"endColumn":25},{"ruleId":"292","severity":1,"message":"307","line":36,"column":11,"nodeType":"294","messageId":"295","endLine":36,"endColumn":14},{"ruleId":"308","severity":1,"message":"309","line":66,"column":21,"nodeType":"310","endLine":69,"endColumn":23},{"ruleId":"288","replacedBy":"342"},{"ruleId":"290","replacedBy":"343"},{"ruleId":"292","severity":1,"message":"311","line":11,"column":10,"nodeType":"294","messageId":"295","endLine":11,"endColumn":16},{"ruleId":"315","severity":1,"message":"316","line":100,"column":11,"nodeType":"310","endLine":100,"endColumn":66},{"ruleId":"292","severity":1,"message":"311","line":11,"column":10,"nodeType":"294","messageId":"295","endLine":11,"endColumn":16},{"ruleId":"315","severity":1,"message":"316","line":100,"column":11,"nodeType":"310","endLine":100,"endColumn":66},{"ruleId":"292","severity":1,"message":"336","line":5,"column":8,"nodeType":"294","messageId":"295","endLine":5,"endColumn":9},{"ruleId":"292","severity":1,"message":"344","line":6,"column":8,"nodeType":"294","messageId":"295","endLine":6,"endColumn":15},{"ruleId":"303","severity":1,"message":"304","line":39,"column":39,"nodeType":"305","messageId":"306","endLine":39,"endColumn":41},{"ruleId":"345","severity":1,"message":"346","line":76,"column":31,"nodeType":"347","messageId":"348","endLine":76,"endColumn":102,"fix":"349"},{"ruleId":"292","severity":1,"message":"350","line":4,"column":16,"nodeType":"294","messageId":"295","endLine":4,"endColumn":22},{"ruleId":"292","severity":1,"message":"351","line":9,"column":8,"nodeType":"294","messageId":"295","endLine":9,"endColumn":16},{"ruleId":"303","severity":1,"message":"304","line":31,"column":23,"nodeType":"305","messageId":"306","endLine":31,"endColumn":25},{"ruleId":"303","severity":1,"message":"304","line":36,"column":23,"nodeType":"305","messageId":"306","endLine":36,"endColumn":25},{"ruleId":"303","severity":1,"message":"304","line":55,"column":23,"nodeType":"305","messageId":"306","endLine":55,"endColumn":25},{"ruleId":"292","severity":1,"message":"307","line":65,"column":11,"nodeType":"294","messageId":"295","endLine":65,"endColumn":14},{"ruleId":"292","severity":1,"message":"311","line":11,"column":10,"nodeType":"294","messageId":"295","endLine":11,"endColumn":16},{"ruleId":"315","severity":1,"message":"316","line":100,"column":11,"nodeType":"310","endLine":100,"endColumn":66},{"ruleId":"292","severity":1,"message":"311","line":11,"column":10,"nodeType":"294","messageId":"295","endLine":11,"endColumn":16},{"ruleId":"315","severity":1,"message":"316","line":100,"column":11,"nodeType":"310","endLine":100,"endColumn":66},{"ruleId":"303","severity":1,"message":"304","line":49,"column":35,"nodeType":"305","messageId":"306","endLine":49,"endColumn":37},{"ruleId":"303","severity":1,"message":"304","line":101,"column":32,"nodeType":"305","messageId":"306","endLine":101,"endColumn":34},{"ruleId":"352","severity":1,"message":"353","line":193,"column":25,"nodeType":"354","endLine":193,"endColumn":37},{"ruleId":"315","severity":1,"message":"316","line":204,"column":19,"nodeType":"310","endLine":204,"endColumn":74},{"ruleId":"292","severity":1,"message":"355","line":4,"column":12,"nodeType":"294","messageId":"295","endLine":4,"endColumn":21},{"ruleId":"292","severity":1,"message":"356","line":4,"column":23,"nodeType":"294","messageId":"295","endLine":4,"endColumn":35},{"ruleId":"292","severity":1,"message":"357","line":6,"column":11,"nodeType":"294","messageId":"295","endLine":6,"endColumn":18},{"ruleId":"299","severity":1,"message":"358","line":9,"column":7,"nodeType":"301","endLine":9,"endColumn":9,"suggestions":"359"},"no-native-reassign",["360"],"no-negated-in-lhs",["361"],"no-unused-vars","'storage' is defined but never used.","Identifier","unusedVar","'isDOMComponentElement' is defined but never used.","'key' is assigned a value but never used.","'setKeys' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'type'. Either include it or remove the dependency array.","ArrayExpression",["362"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'exe' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'imgUrl' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id.id' and 'loadData'. Either include them or remove the dependency array. If 'setUserType' needs the current value of 'id.id', you can also switch to useReducer instead of useState and read 'id.id' in the reducer.",["363"],"'validate' is assigned a value but never used.","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.",["360"],["361"],"'dtypes' is assigned a value but never used.","'ref' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",["360"],["361"],"'useEffect' is defined but never used.","React Hook useEffect contains a call to 'setdTypes'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["364"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","'useState' is defined but never used.",["360"],["361"],"React Hook useEffect has missing dependencies: 'gname' and 'loadData'. Either include them or remove the dependency array.",["365"],"'_' is defined but never used.","React Hook useEffect has missing dependencies: 'loadUserData' and 'val'. Either include them or remove the dependency array.",["366"],["367"],"'navigate' is defined but never used.",["368"],["360"],["361"],"'Display' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property where.","MemberExpression","unexpectedWhitespace",{"range":"369","text":"370"},"'uuidv4' is defined but never used.","'EditUser' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'finalData' is assigned a value but never used.","'setFinalData' is assigned a value but never used.","'recData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.uData'. Either include it or remove the dependency array.",["371"],"no-global-assign","no-unsafe-negation",{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"378","fix":"379"},{"desc":"380","fix":"381"},{"desc":"376","fix":"382"},{"desc":"372","fix":"383"},[2472,2474],".",{"desc":"384","fix":"385"},"Update the dependencies array to be: [type]",{"range":"386","text":"387"},"Update the dependencies array to be: [id.id, loadData]",{"range":"388","text":"389"},"Add dependencies array: []",{"range":"390","text":"391"},"Update the dependencies array to be: [gname, loadData]",{"range":"392","text":"393"},"Update the dependencies array to be: [id.id, loadUserData, val]",{"range":"394","text":"395"},{"range":"396","text":"391"},{"range":"397","text":"387"},"Update the dependencies array to be: [props.uData]",{"range":"398","text":"399"},[859,861],"[type]",[823,825],"[id.id, loadData]",[605,605],", []",[257,259],"[gname, loadData]",[935,942],"[id.id, loadUserData, val]",[751,751],[648,650],[236,238],"[props.uData]"]