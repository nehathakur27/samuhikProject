[{"C:\\projects\\samuhik\\src\\reportWebVitals.js":"1","C:\\projects\\samuhik\\src\\pages\\Login.js":"2","C:\\projects\\samuhik\\src\\App.js":"3","C:\\projects\\samuhik\\src\\pages\\Home.js":"4","C:\\projects\\samuhik\\src\\components\\Sidebar.js":"5","C:\\projects\\samuhik\\src\\firebase.config.js":"6","C:\\projects\\samuhik\\src\\index.js":"7","C:\\projects\\samuhik\\src\\Routes.js":"8","C:\\projects\\samuhik\\src\\pages\\AddEntry.js":"9","C:\\projects\\samuhik\\src\\pages\\PaymentCondition.js":"10","C:\\projects\\samuhik\\src\\pages\\Reports.js":"11","C:\\projects\\samuhik\\src\\pages\\SearchEntry.js":"12","C:\\projects\\samuhik\\src\\components\\GVSearch.js":"13","C:\\projects\\samuhik\\src\\components\\NameSearch.js":"14","C:\\projects\\samuhik\\src\\components\\RegNoSearch.js":"15","C:\\projects\\samuhik\\src\\components\\PaymentSearch.js":"16","C:\\projects\\samuhik\\src\\components\\ProductSearch.js":"17","C:\\projects\\samuhik\\src\\components\\Display.js":"18","C:\\projects\\samuhik\\src\\pages\\EditUser.js":"19","C:\\projects\\samuhik\\src\\components\\Ghoshna.js":"20","C:\\projects\\samuhik\\src\\components\\Due.js":"21","C:\\projects\\samuhik\\src\\components\\Received.js":"22"},{"size":362,"mtime":1607019289615,"results":"23","hashOfConfig":"24"},{"size":3940,"mtime":1609581092528,"results":"25","hashOfConfig":"24"},{"size":181,"mtime":1609581202977,"results":"26","hashOfConfig":"24"},{"size":4146,"mtime":1609769621464,"results":"27","hashOfConfig":"24"},{"size":1931,"mtime":1611585821692,"results":"28","hashOfConfig":"24"},{"size":576,"mtime":1609580929950,"results":"29","hashOfConfig":"24"},{"size":455,"mtime":1609582072455,"results":"30","hashOfConfig":"24"},{"size":602,"mtime":1615481037372,"results":"31","hashOfConfig":"24"},{"size":17356,"mtime":1609770359083,"results":"32","hashOfConfig":"24"},{"size":2564,"mtime":1615371812442,"results":"33","hashOfConfig":"24"},{"size":7173,"mtime":1615549084590,"results":"34","hashOfConfig":"24"},{"size":7309,"mtime":1615549046558,"results":"35","hashOfConfig":"24"},{"size":8572,"mtime":1615273979593,"results":"36","hashOfConfig":"24"},{"size":4013,"mtime":1615274225486,"results":"37","hashOfConfig":"24"},{"size":4083,"mtime":1615274256477,"results":"38","hashOfConfig":"24"},{"size":4059,"mtime":1615274247990,"results":"39","hashOfConfig":"24"},{"size":4569,"mtime":1615274248533,"results":"40","hashOfConfig":"24"},{"size":1664,"mtime":1614935653139,"results":"41","hashOfConfig":"24"},{"size":20215,"mtime":1615546750102,"results":"42","hashOfConfig":"24"},{"size":5031,"mtime":1615371923472,"results":"43","hashOfConfig":"24"},{"size":6883,"mtime":1615371942841,"results":"44","hashOfConfig":"24"},{"size":7906,"mtime":1615371999979,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"qo99fg",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"55"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\projects\\samuhik\\src\\reportWebVitals.js",[],["104","105"],"C:\\projects\\samuhik\\src\\pages\\Login.js",["106"],"import React from 'react'\r\nimport { useFormik,} from \"formik\";\r\nimport { firestore } from \"../firebase.config\";\r\nimport { navigate } from \"hookrouter\";\r\n\r\nfunction Login(){\r\n    const validate = (values) =>{\r\n        const errors = {}\r\n        if (!values.username) {\r\n          errors.username = \"Username Required\"\r\n        }\r\n        if (!values.password) {\r\n          errors.password = \"Password Required\";\r\n        }\r\n        return errors\r\n     }\r\n    \r\n      const LoginFormik = useFormik({\r\n      initialValues: {\r\n        username: \"\",\r\n        password:\"\",\r\n      },\r\n      validate,\r\n      onSubmit: (values) => {\r\n         firestore\r\n            .collection(\"user\")\r\n            .doc(\"user\")\r\n            .get()\r\n            .then(function (deets){\r\n               if(deets.exists){\r\n                 if(deets.data().password === values.password && deets.data().username === values.username){\r\n                     localStorage.setItem(\"logged\",\"true\" );\r\n                     navigate(\"/home\")\r\n                 }else{\r\n                   alert(\"Invalid Credentials\")\r\n                 }\r\n               }\r\n            })\r\n      }\r\n    })\r\n    return(\r\n        <div>\r\n            <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\" style={{display: 'flex',  justifyContent:'center', alignItems:'center', height: '100vh'}}>\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card card-primary\">\r\n                    <div className=\"card-header\">\r\n                        <h3 className=\"card-title\">Login Form</h3>\r\n                    </div>\r\n                    <form role=\"form\" onSubmit = {LoginFormik.handleSubmit}>\r\n                        <div className=\"card-body\">\r\n                        <div className=\"form-group \">\r\n                            <label htmlFor=\"username\" >Username</label>\r\n                            <div className=\"col-sm-10\">\r\n                            <input \r\n                                type=\"text\" \r\n                                className=\"form-control\"\r\n                                id=\"username\" \r\n                                placeholder=\"Username\" \r\n                                onChange={LoginFormik.handleChange}\r\n                                value={LoginFormik.values.username} \r\n                            />\r\n                            </div>\r\n                        </div>\r\n                        {LoginFormik.errors.username ? \r\n                            (<p style={{color:\"red\"}}>{ LoginFormik.errors.username}</p>) : null\r\n                        }\r\n                        <div className=\"form-group \">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <div className=\"col-sm-10\">\r\n                            <input \r\n                                type=\"password\"\r\n                                className=\"form-control\" \r\n                                id=\"password\"\r\n                                placeholder=\"Password\" \r\n                                onChange={LoginFormik.handleChange}\r\n                                value={LoginFormik.values.password} \r\n                            />\r\n                            </div>\r\n                            {LoginFormik.errors.password ? \r\n                                (<p style={{color:\"red\"}}>{ LoginFormik.errors.password}</p>) : null\r\n                            }\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"card-footer\">\r\n                        <button type=\"submit\" className=\"btn btn-info\">Sign in</button>\r\n                        </div>\r\n                    </form>\r\n                    </div>\r\n                </div>\r\n                \r\n                </div>\r\n                \r\n            </div>\r\n            </section>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login",["107","108"],"C:\\projects\\samuhik\\src\\App.js",[],["109","110"],"C:\\projects\\samuhik\\src\\pages\\Home.js",[],"C:\\projects\\samuhik\\src\\components\\Sidebar.js",[],"C:\\projects\\samuhik\\src\\firebase.config.js",[],["111","112"],"C:\\projects\\samuhik\\src\\index.js",[],"C:\\projects\\samuhik\\src\\Routes.js",[],"C:\\projects\\samuhik\\src\\pages\\AddEntry.js",["113","114","115","116","117"],"import React,{useState,useEffect} from 'react'\r\nimport { firestore } from \"../firebase.config\";\r\nimport { navigate } from \"hookrouter\";\r\nimport SideBar from '../components/Sidebar'\r\nimport { useFormik,} from \"formik\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction AddEntry(){\r\n  const [gaadiName,setGaadiName] = useState([]);\r\n  const [villageName,setVillageName] = useState([])\r\n  const[isRegistered,setRegistered] = useState(false)\r\n  const [getUser,setGetUser] = useState([]);\r\n  const [selected,isSelected] = useState(false)\r\n\r\n    useEffect(async () => {\r\n        if (localStorage.getItem(\"logged\") !== \"true\") {\r\n          navigate(\"/\");\r\n        }\r\n        loadGaadis()\r\n    });\r\n\r\n    function handleRegister(e) {\r\n        if (e.target.value === \"yes\") {\r\n          setRegistered(true);\r\n        } else {\r\n          setRegistered(false);\r\n        }\r\n        console.log(isRegistered)\r\n      }\r\n\r\n    const loadGaadis = async() =>{\r\n        const document = firestore.collection(\"gaadi_name\")\r\n        const activeRef =  await document.get()\r\n          var gaadis = [];\r\n          activeRef.forEach((docs) => {\r\n            gaadis.push(docs.data())\r\n          })\r\n          \r\n          setGaadiName(gaadis)\r\n    }\r\n\r\n    const loadVillages = async () =>{\r\n        if(registerForm.values.gname){\r\n          const coll_name = \"gaadi_name/\"+registerForm.values.gname+\"/village_name\"\r\n          const document = await firestore.collection(coll_name).get()\r\n          //console.log(\"gname\",document.docs)\r\n          var villages = []\r\n          document.docs.map((village) => {\r\n            villages.push(village.data())\r\n          })\r\n          // console.log(villages)\r\n          setVillageName(villages)\r\n        }else{\r\n          alert(\"गादी का नाम डाले \")\r\n        }\r\n       \r\n      }\r\n\r\n    \r\n    function selectUser(e) {\r\n        //console.log(e.target.value)\r\n         localStorage.setItem(\"userid\",e.target.value)\r\n         isSelected(true)\r\n       }\r\n   \r\n       const validate = (values) =>{\r\n           \r\n         console.log(\"in validate\");\r\n           const errors = {}\r\n           if (!values.regno) {\r\n             errors.regno = \"Registration Number Required\";\r\n           }\r\n           if (!values.name) {\r\n               errors.name = \"Name Required\";\r\n           }\r\n           if (!values.vname) {\r\n               errors.vname = \"Village Name Required\";\r\n           }\r\n          if (!values.mno.match(/^\\d{10}$/)) {\r\n             errors.mno = \"Invalid Phone Number. 10 Digits Required\";\r\n           }\r\n           if (!values.gname) {\r\n               errors.gname = \"Gaadi Name Required\";\r\n           }\r\n          \r\n           return errors\r\n        }\r\n\r\n        const checkUserForm = useFormik({\r\n            initialValues:{\r\n              name:\"\"\r\n            },\r\n            onSubmit: (values) => {\r\n              console.log(values);\r\n               firestore\r\n               .collection(\"entries\")\r\n               .where(\"name\",\"==\",values.name)\r\n               .get()\r\n               .then(function (deets){\r\n                  //console.log(deets.docs)\r\n                  if(deets.empty)\r\n                    alert(\"No such user\")\r\n                  else{\r\n                    deets.docs.map((v) => {\r\n                      setGetUser(getUser => [...getUser,v.data()])\r\n                    })\r\n                  }\r\n               })\r\n            }\r\n          })\r\n     \r\n          const registerForm = useFormik({\r\n             initialValues: {\r\n               uid:uuidv4(),\r\n               regno: \"\",\r\n               name:\"\",\r\n               fname:\"\",\r\n               address:\"\",\r\n               vname:\"\",\r\n               gname:\"\",\r\n               mno:\"\",\r\n             },\r\n             validate,\r\n             onSubmit: (values) => {\r\n               console.log(\"here\",values)\r\n                const data = {\r\n                   address : values.address,\r\n                   fname: values.fname,\r\n                   due:false,\r\n                   ghoshna:false,\r\n                   received:false,\r\n                   gname:values.gname,\r\n                   mnno:values.mno,\r\n                   name:values.name,\r\n                   reg_no:values.regno,\r\n                   uid:values.uid,\r\n                   vname:values.vname\r\n                }\r\n                firestore\r\n                .collection(\"entries\")\r\n                .where(\"reg_no\",\"==\",values.regno)\r\n                .get()\r\n                .then(function (deets){\r\n                    if(deets.size > 0){\r\n                      alert(\"Registration Number Exists\")\r\n                    }else{\r\n                      firestore\r\n                      .collection(\"entries\")\r\n                      .doc(values.uid)\r\n                      .set(data,{merge : true})\r\n                      .then(function () {\r\n                        localStorage.setItem(\"userid\",values.uid)\r\n                        navigate(\"/payment\")\r\n                      })\r\n                    }\r\n                })\r\n                   \r\n             }\r\n           })\r\n     \r\n\r\n    return(\r\n        <div>\r\n            <SideBar />\r\n            <div className=\"content-wrapper\">\r\n                <div className=\"content-header\">\r\n                    <div className=\"container-fluid\">\r\n                    <div className=\"row mb-2\">\r\n                        <div className=\"col-sm-6\">\r\n                        <h1 className=\"m-0 text-dark\">New Entry Form</h1>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\" style={{display:\"flex\",justifyContent:\"center\", alignItems:\"center\"}}>\r\n                <div >\r\n                    {/* general form elements disabled */}\r\n                    <div className=\"card card-warning\">\r\n                    {/* /.card-header */}\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                            <div className=\"form-group\">\r\n                                <label>Already registered user?</label>\r\n                                    <div className=\"form-check\">\r\n                                    <input \r\n                                        className=\"form-check-input\"\r\n                                        type=\"radio\" \r\n                                        name=\"isreg\"\r\n                                        value=\"yes\"\r\n                                        id=\"yes\"\r\n                                        onClick={handleRegister}\r\n                                    />\r\n                                    <label className=\"form-check-label\">हां </label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                    <input \r\n                                        className=\"form-check-input\" \r\n                                        type=\"radio\" \r\n                                        name=\"radio1\" \r\n                                        name=\"isreg\"\r\n                                        value=\"no\"\r\n                                        id=\"no\"\r\n                                        onClick={handleRegister}\r\n                                        defaultChecked \r\n                                    />\r\n                                    <label className=\"form-check-label\">ना </label>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n            {!isRegistered && (<form role=\"form\" onSubmit={registerForm.handleSubmit}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-6\">\r\n                            \r\n                            {/* text input */}\r\n                            <div className=\"form-group\">\r\n                                <label>रजिस्ट्रेशन नंबर </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"रजिस्ट्रेशन नंबर\"\r\n                                    name=\"regno\"\r\n                                    onChange={registerForm.handleChange}\r\n                                    value={registerForm.values.regno}\r\n                                />\r\n                            </div>\r\n                            {registerForm.errors.regno ? \r\n                                (<p style={{color:\"red\"}}>{ registerForm.errors.regno}</p>) : null\r\n                            }\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>नाम </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"नाम\"\r\n                                    name=\"name\"\r\n                                    onChange={registerForm.handleChange}\r\n                                    value={registerForm.values.name}\r\n                                />\r\n                            </div>\r\n                            {registerForm.errors.name ? \r\n                                (<p style={{color:\"red\"}}>{ registerForm.errors.name}</p>) : null\r\n                            }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-6\">\r\n                            \r\n                            {/* text input */}\r\n                            <div className=\"form-group\">\r\n                                <label>पिता का नाम </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"पिता का नाम\"\r\n                                    name=\"fname\"\r\n                                    onChange={registerForm.handleChange}\r\n                                    value={registerForm.values.fname}\r\n                                />\r\n                            </div>\r\n                            {registerForm.errors.fname ? \r\n                                (<p style={{color:\"red\"}}>{ registerForm.errors.fname}</p>) : null\r\n                            }\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>पता </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"Address\"\r\n                                    name=\"address\"\r\n                                    onChange={registerForm.handleChange}\r\n                                    value={registerForm.values.address}\r\n                                />\r\n                            </div>\r\n                            {registerForm.errors.address ? \r\n                                (<p style={{color:\"red\"}}>{ registerForm.errors.address}</p>) : null\r\n                            }\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        \r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-6\">\r\n                            {/* select */}\r\n                            <div className=\"form-group\">\r\n                             <label>गादी का नाम </label>\r\n                             <select \r\n                                className=\"form-control\"\r\n                                name=\"gname\" \r\n                                value={registerForm.values.gname}\r\n                                onChange={registerForm.handleChange}\r\n                            >\r\n                                <option value=\"\" disabled selected>Select one</option>\r\n                                { gaadiName.map((gaadi) => \r\n                                    <option value={gaadi.id}>{gaadi.name}</option>\r\n                                )}\r\n                             </select>\r\n                            </div>\r\n                            {registerForm.errors.gname ? \r\n                                (<p style={{color:\"red\"}}>{ registerForm.errors.gname}</p>) : null\r\n                            }\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                            <div className=\"form-group\" onClick ={() => loadVillages()}>\r\n                                <label>गांव का नाम </label>\r\n                                <select \r\n                                    className=\"form-control\"\r\n                                    name=\"vname\" \r\n                                    value={registerForm.values.vname}\r\n                                    onChange={registerForm.handleChange}\r\n                                >\r\n                                <option value=\"\" disabled selected>Select one</option>\r\n                                { villageName.map((vname) => \r\n                                    <option value={vname.id}>{vname.name}</option>\r\n                                )}\r\n                                </select>\r\n                            </div>\r\n                            {registerForm.errors.vname ? \r\n                                (<p style={{color:\"red\"}}>{ registerForm.errors.vname}</p>) : null\r\n                            }\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>मोबाइल नंबर  </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"मोबाइल नंबर \"\r\n                                    name=\"mno\" \r\n                                    onChange={registerForm.handleChange}\r\n                                    value={registerForm.values.mno}\r\n                                />\r\n                            </div>\r\n                            {registerForm.errors.mno ? \r\n                                (<p style={{color:\"red\"}}>{ registerForm.errors.mno}</p>) : null\r\n                            }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-footer\">\r\n                        <button type=\"submit\" className=\"btn btn-info\">रजिस्टर </button>\r\n                        </div>\r\n                        </form>\r\n                        )}\r\n\r\n                        {isRegistered && (\r\n                        <form  onSubmit = {checkUserForm.handleSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label>नाम </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"नाम\"\r\n                                    name=\"name\" \r\n                                    onChange={checkUserForm.handleChange}\r\n                                    value={checkUserForm.values.name}\r\n                                />     \r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <button type=\"submit\" className=\"btn btn-info\">चेक करे  </button>\r\n                            </div>\r\n                        </form>)}\r\n                        <div >\r\n                 {\r\n                  getUser.map((v,i) => \r\n                    <div>\r\n                      <input \r\n                         className=\"form-check-input\" \r\n                         type=\"radio\" \r\n                         name=\"selectUser\"\r\n                         value={v.uid}\r\n                         id={i++}\r\n                         onClick={selectUser}\r\n                      />\r\n                      <p>{v.name}</p>\r\n                      <p>{v.fname}</p>\r\n                      <p>{v.address}</p>\r\n                      <p>{v.gname}</p>\r\n                      <p>{v.vname}</p>\r\n                      <p>{v.mnno}</p>\r\n                    </div>\r\n                  )}\r\n                  {selected && <button className=\"btn btn-info\" onClick={() => navigate(\"/payment\")}>Proceed</button>}\r\n                </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </section>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddEntry","C:\\projects\\samuhik\\src\\pages\\PaymentCondition.js",["118","119","120","121"],"import React, { useState, useEffect } from \"react\";\r\nimport SideBar from \"../components/Sidebar\";\r\nimport { firestore } from \"../firebase.config\";\r\nimport { navigate } from \"hookrouter\";\r\nimport Ghoshna from \"../components/Ghoshna\";\r\nimport Due from \"../components/Due\";\r\nimport Received from \"../components/Received\";\r\n\r\nexport default function Payment() {\r\n  const [dtypes, setdTypes] = useState([]);\r\n  const [ptype, setPType] = useState(\"\");\r\n  let ref = firestore.collection(\"receipts\").doc(\"AllReceipts\");\r\n\r\n  useEffect(async () => {\r\n    if (localStorage.getItem(\"logged\") !== \"true\") {\r\n      navigate(\"/\");\r\n    }\r\n    const document = firestore.collection(\"donation_type\");\r\n    const activeRef = await document.get();\r\n    var dt = [];\r\n    activeRef.forEach((docs) => {\r\n      dt.push(docs.data());\r\n    });\r\n\r\n    setdTypes(dt);\r\n  });\r\n\r\n  const handleType = (e) => {\r\n    console.log(e.target.value);\r\n    setPType(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SideBar />\r\n      <div className=\"content-wrapper\">\r\n        {/* ye */}\r\n        <div className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\">\r\n                <h1 className=\"m-0 text-dark\">Payment Method</h1>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* idhar */}\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <div>\r\n                  <div className=\"form-group\">\r\n                    <label>Payment Type</label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"pc\"\r\n                      onChange={handleType}\r\n                      value={ptype}\r\n                    >\r\n                      <option value=\"\" disabled selected>\r\n                        Select one\r\n                      </option>\r\n                      <option value=\"ghoshna\">Ghoshna</option>\r\n                      <option value=\"due\">Due</option>\r\n                      <option value=\"received\">Received</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                {ptype === \"ghoshna\" && <Ghoshna />}\r\n\r\n                {ptype === \"due\" && <Due  />}\r\n\r\n                {ptype === \"received\" && <Received />}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\projects\\samuhik\\src\\pages\\Reports.js",["122","123","124"],"import React,{useState,useEffect} from 'react'\r\nimport SideBar from '../components/Sidebar'\r\nimport GVSearch from '../components/GVSearch'\r\nimport PaymentSearch from '../components/PaymentSearch.js'\r\nimport ProductSearch from '../components/ProductSearch'\r\nimport { navigate } from \"hookrouter\";\r\nimport _ from 'underscore'\r\n\r\nconst Reports = () =>{\r\n    const [type,setType] = useState('');\r\n    const [finalData,setFinalData] = useState([]);\r\n\r\n    useEffect( () => {\r\n        if (localStorage.getItem(\"logged\") !== \"true\") {\r\n            navigate(\"/\");\r\n          }\r\n    },[]);\r\n    \r\n\r\n    const handleChange = (event) =>{\r\n        setType(event.target.value)\r\n    }\r\n\r\n\r\n    // const getFData = () => {\r\n    //     console.log(\"here\",finalData);\r\n    //     finalData.map((val,i) => {\r\n    //         //console.log(typeof val);\r\n    //         let ind = 0;\r\n    //         if(typeof val[ind] === \"object\"){\r\n    //             Object.entries(val[ind]).map(([key, value]) => {\r\n                  \r\n    //                 ind++;\r\n    //             })\r\n    //             setKeys(ind)\r\n    //         }\r\n            \r\n    //     })\r\n    // }\r\n\r\n    \r\n\r\n    const handleCallback = (s1,s2) =>{\r\n        console.log(\"rec s1\",s1);\r\n        console.log(\"rec s2\",s2);\r\n        console.log(\"merging...\");\r\n        var final = []\r\n        if(s1.length > 0 && s2.length > 0){\r\n            s2.map((val,i) => {\r\n                var data = {}\r\n                data = val;\r\n                var curId = val.uid\r\n                console.log(\"cur id\",val.uid);\r\n                s1.map((v,j) => {\r\n                     if(v.uid === curId ){\r\n                        //  console.log(\"matched val\",v);\r\n                        data = {...data,v}\r\n                     }\r\n                })\r\n                console.log(\"fdata\",data);\r\n                final.push(data)\r\n            })\r\n            setFinalData(final)\r\n        }else{\r\n            setFinalData(final)\r\n            // console.log(\"Error\");\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n        <SideBar />\r\n        <div className=\"content-wrapper\">\r\n           <section class=\"content-header\">\r\n             <div class=\"container-fluid\">\r\n                 <div class=\"row mb-2\">\r\n                 <div class=\"col-sm-6\">\r\n                     <h1>Generate Reports</h1>\r\n                 </div>\r\n                 </div>\r\n             </div>\r\n           </section>\r\n           <section className=\"content\">\r\n             <div className=\"container-fluid\">\r\n                 <div className=\"card\">\r\n                     <div className = \"card-body\">\r\n                        <div className=\"form-group\">\r\n                                 <label>Reports according to : </label>\r\n                                 <select \r\n                                     className=\"form-control\"\r\n                                     name=\"type\" \r\n                                     onChange={handleChange}\r\n                                     value={type}\r\n                                 >\r\n                                     <option value=\"\" disabled defaultValue=\"select\" selected>Select one</option>\r\n                                     <option value=\"place\">Gaadi and Village</option>\r\n                                     <option value=\"pt\">Payment Type</option>\r\n                                     <option value=\"pro\">Product</option>\r\n                                 </select>\r\n                         </div>\r\n                         \r\n                         {type === \"place\" && <GVSearch parentCallback = {handleCallback}/>}\r\n                         {type === \"pt\" && <PaymentSearch parentCallback = {handleCallback} />}\r\n                         {type === \"pro\" && <ProductSearch parentCallback = {handleCallback} />}\r\n                         {/* {type === \"place\" && <GVSearch st1={gvRes} setSt1={setGVRes} st2={recData} setSt2 = {setRecData} />} */}\r\n                         {/* {type === \"pt\" && <PaymentSearch st1={gvRes} setSt1={setGVRes} st2={recData} setSt2 = {setRecData}/>}\r\n                         {type === \"pro\" && <ProductSearch st1={gvRes} setSt1={setGVRes} st2={recData} setSt2 = {setRecData}/>} */}\r\n                         \r\n                        {finalData.length > 0 && <div className=\"row\">\r\n                         <div className=\"col-12\">\r\n                             <div className=\"card\">\r\n                             <div className=\"card-body\">\r\n                                 <table id=\"example2\" className=\"table table-bordered table-hover\">\r\n                                 <thead>\r\n                                     <tr>\r\n                                     <th>Name</th>\r\n                                     <th>Father's Name</th>\r\n                                     <th>Address</th>\r\n                                     <th>Village Name</th>\r\n                                     <th>Gaadi Name</th>\r\n                                     <th>Mobile Number</th>\r\n                                     <th>Donation For</th>\r\n                                     <th>Payment type</th>\r\n                                     <th>Date</th>\r\n                                     <th>Amount</th>\r\n                                     <th>Reciept Number</th>\r\n                                     <th>Name to be Printed</th>\r\n                                     <th>Note</th>\r\n                                     </tr>\r\n                                 </thead>\r\n                                 <tbody>\r\n                                 { finalData.map((val) => \r\n                                            <tr>\r\n                                                <td>{val.v.name}</td>\r\n                                                <td>{val.v.fname}</td>\r\n                                                <td>{val.v.address}</td>\r\n                                                <td>{val.v.vname}</td>\r\n                                                <td>{val.v.gname}</td>\r\n                                                <td>{val.v.mnno}</td>\r\n                                                <td>{val.donation}</td>\r\n                                                <td>{val.type}</td>\r\n                                                <td>{val.date}</td>\r\n                                                <td>{val.amount}</td>\r\n                                                {val.reciept_no  ?  <td>{val.reciept_no}</td> : <td>-</td>}\r\n                                                {val.ntp  ? <td>{val.ntp}</td> : <td>-</td>}\r\n                                                {val.note ? <td>{val.note}</td> : <td>-</td>}\r\n                                            </tr>\r\n                                 )}\r\n                                 </tbody>\r\n                                 \r\n                                 </table>\r\n                             </div>\r\n                             </div>\r\n                             \r\n                         </div>\r\n                         </div>}\r\n                     </div>\r\n                 </div>\r\n             </div>\r\n           </section>\r\n         </div>\r\n     </div>\r\n    )\r\n}\r\n\r\nexport default Reports","C:\\projects\\samuhik\\src\\pages\\SearchEntry.js",["125","126","127","128","129","130"],"import React, { useState, useEffect } from \"react\";\r\nimport SideBar from \"../components/Sidebar\";\r\nimport GVSearch from \"../components/GVSearch\";\r\nimport NameSearch from \"../components/NameSearch\";\r\nimport RegNoSearch from \"../components/RegNoSearch\";\r\n// import _, { object } from 'underscore'\r\nimport { navigate } from \"hookrouter\";\r\nimport { firestore } from \"../firebase.config\";\r\nimport EditUser from \"../pages/EditUser\";\r\n\r\nexport default function SearchEntry() {\r\n  const [type, setType] = useState(\"\");\r\n  const [finalData, setFinalData] = useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    setType(event.target.value);\r\n  };\r\n\r\n  const handleCallback = (s1, s2) => {\r\n    console.log(\"rec s1\", s1);\r\n    console.log(\"rec s2\", s2);\r\n    console.log(\"merging...\");\r\n    var final = [];\r\n    if (s1.length > 0 && s2.length > 0) {\r\n      s2.map((val, i) => {\r\n        var data = {};\r\n        data = val;\r\n        var curId = val.uid;\r\n        console.log(\"cur id\", val.uid);\r\n        s1.map((v, j) => {\r\n          if (v.uid === curId) {\r\n            //  console.log(\"matched val\",v);\r\n            data = { ...data, v };\r\n          }\r\n        });\r\n        // console.log(\"fdata\",data);\r\n        final.push(data);\r\n      });\r\n      console.log(final);\r\n\r\n      setFinalData(final);\r\n    } else {\r\n      setFinalData(final);\r\n    }\r\n  };\r\n\r\n  const deleteUser = (id) => {\r\n    var data = [] \r\n    finalData.map((d) => {\r\n        if(d.reciept_no !== id){\r\n            data.push(d)\r\n        }\r\n    })\r\n    // console.log(data);\r\n    setFinalData(data)\r\n    const query = firestore\r\n      .collection(\"all_receipts\")\r\n      .where(\"reciept_no\", \"==\", id);\r\n    const exe = query.get().then(function (q) {\r\n      q.forEach(function (doc) {\r\n        doc.ref.delete();\r\n        alert(\"User Deleted\");\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SideBar />\r\n      <div className=\"content-wrapper\">\r\n        <section class=\"content-header\">\r\n          <div class=\"container-fluid\">\r\n            <div class=\"row mb-2\">\r\n              <div class=\"col-sm-6\">\r\n                <h1>Search and Edit User Information</h1>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <div className=\"form-group\">\r\n                  <label>Search according to : </label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"type\"\r\n                    onChange={handleChange}\r\n                    value={type}\r\n                  >\r\n                    <option value=\"\" disabled defaultValue=\"select\" selected>\r\n                      Select one\r\n                    </option>\r\n                    <option value=\"place\">Gaadi and Village</option>\r\n                    <option value=\"name\">Name</option>\r\n                    <option value=\"regno\">Registration Number</option>\r\n                  </select>\r\n                </div>\r\n\r\n                {type === \"place\" && (\r\n                  <GVSearch parentCallback={handleCallback} />\r\n                )}\r\n                {type === \"name\" && (\r\n                  <NameSearch parentCallback={handleCallback} />\r\n                )}\r\n                {type === \"regno\" && (\r\n                  <RegNoSearch parentCallback={handleCallback} />\r\n                )}\r\n\r\n                {finalData.length > 0 && (\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                      <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                          <h3 className=\"card-title\">Details</h3>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                          <table id=\"example2\" className=\"table table-bordered\">\r\n                            <thead>\r\n                              <tr>\r\n                                <th>Name</th>\r\n                                <th>Father's Name</th>\r\n                                <th>Address</th>\r\n                                <th>Village Name</th>\r\n                                <th>Gaadi Name</th>\r\n                                <th>Mobile Number</th>\r\n                                <th>Donation For</th>\r\n                                <th>Payment type</th>\r\n                                <th>Date</th>\r\n                                <th>Amount</th>\r\n                                <th>Reciept Number</th>\r\n                                <th>Name to be Printed</th>\r\n                                <th>Note</th>\r\n                                <th>Edit</th>\r\n                                <th>Delete</th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                              {finalData.map((val, i) => (\r\n                                <tr>\r\n                                  <td>{val.v.name}</td>\r\n                                  <td>{val.v.fname}</td>\r\n                                  <td>{val.v.address}</td>\r\n                                  <td>{val.v.vname}</td>\r\n                                  <td>{val.v.gname}</td>\r\n                                  <td>{val.v.mnno}</td>\r\n                                  <td>{val.donation}</td>\r\n                                  <td>{val.type}</td>\r\n                                  <td>{val.date}</td>\r\n                                  <td>{val.amount}</td>\r\n                                  {val.reciept_no ? (\r\n                                    <td>{val.reciept_no}</td>\r\n                                  ) : (\r\n                                    <td>-</td>\r\n                                  )}\r\n                                  {val.ntp ? <td>{val.ntp}</td> : <td>-</td>}\r\n                                  {val.note ? <td>{val.note}</td> : <td>-</td>}\r\n                                  {/* <A href=\"/editUser\" val = {val}><td style={{color:\"blue\"}}>Edit</td></A> */}\r\n                                  <td\r\n                                    onClick={() =>\r\n                                      navigate(\"/editUser/\" + val.id)\r\n                                    }\r\n                                    style={{ color: \"blue\" }}\r\n                                  >\r\n                                    Edit\r\n                                  </td>\r\n                                  {/* <td onClick={() => edit(val)} style={{color:\"blue\"}}>Edit</td> */}\r\n                                  <td\r\n                                    onClick={() => deleteUser(val.reciept_no)}\r\n                                    style={{ color: \"blue\" }}\r\n                                  >\r\n                                    Delete\r\n                                  </td>\r\n                                </tr>\r\n                              ))}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                {/* row */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\projects\\samuhik\\src\\components\\GVSearch.js",["131","132","133","134"],"import React,{useState,useEffect} from \"react\"\r\nimport { firestore } from \"../firebase.config\";\r\nimport { navigate } from \"hookrouter\";\r\nimport { useFormik,} from \"formik\";\r\nimport _ from 'underscore'\r\nimport Display from './Display'\r\n\r\nconst GVSearch = (props) => {\r\n    const [gaadiName,setGaadiName] = useState([]);\r\n    const [villageName,setVillageName] = useState([])  \r\n    const [usersData, setUserData] = useState([]);\r\n    const [recData, setRecData] = useState([]);\r\n\r\n    useEffect( () => {\r\n        if (localStorage.getItem(\"logged\") !== \"true\") {\r\n            navigate(\"/\");\r\n          }\r\n          loadGaadis()\r\n    },[]);\r\n    \r\n\r\n    const loadGaadis = async() =>{\r\n        const document = firestore.collection(\"gaadi_name\")\r\n        const activeRef =  await document.get()\r\n          var gaadis = [];\r\n          activeRef.forEach((docs) => {\r\n            gaadis.push(docs.data())\r\n          })\r\n          \r\n        setGaadiName(gaadis)\r\n    }\r\n\r\n    const loadVillages = async () =>{\r\n        if(searchForm.values.gname){\r\n          const coll_name = \"gaadi_name/\"+searchForm.values.gname+\"/village_name\"\r\n          const document = await firestore.collection(coll_name).get()\r\n          //console.log(\"gname\",document.docs)\r\n          var villages = []\r\n          document.docs.map((village) => {\r\n            villages.push(village.data())\r\n          })\r\n          // console.log(villages)\r\n          setVillageName(villages)\r\n        }else{\r\n          alert(\"गादी का नाम डाले \")\r\n        }\r\n       \r\n    }\r\n\r\n    const mergeData = () =>{\r\n        // console.log(\"ud \",usersData);\r\n        // console.log(\"rec \",recData);\r\n        // console.log(\"ud len\",usersData.length);\r\n        //  console.log(\"rec len\",recData.length);\r\n        if(usersData.length > 0 && recData.length > 0)\r\n           {\r\n                console.log(\"callback userdata\",usersData);\r\n                console.log(\"callback recData\",recData);    \r\n                props.parentCallback(usersData,recData)\r\n            }else if( usersData.length === 0 || recData.length === 0){\r\n                props.parentCallback(usersData,recData)\r\n                alert(\"No data found\")\r\n\r\n            }\r\n    }\r\n\r\n   \r\n    const searchForm = useFormik({\r\n        initialValues:{\r\n          gname:\"\",\r\n          vname:\"\",\r\n        },\r\n        onSubmit: async(values) => {\r\n            console.log(values);\r\n            if(values.gname.length > 0 && values.vname.length > 0){\r\n                const query = firestore.collection(\"entries\").where(\"gname\",\"==\",values.gname) .where(\"vname\",\"==\",values.vname) \r\n                const exeQuery = await query.get();\r\n                let userData = []\r\n                let ids = []\r\n                let recieptData = []\r\n\r\n                for(const doc of exeQuery.docs){\r\n                    userData.push(doc.data())\r\n                    ids.push(doc.id);\r\n                }\r\n                setUserData(userData)\r\n                ids.forEach(async (id) => {\r\n                    const getData = firestore.collection(\"all_receipts\").where(\"uid\" ,\"==\",id)\r\n                    const exeGetData = await getData.get()\r\n                   for(const d of exeGetData.docs){\r\n                        recieptData.push(d.data())\r\n                    }\r\n                    setRecData(recieptData)\r\n                })    \r\n                 \r\n            mergeData() \r\n\r\n            }else if(values.gname.length > 0  && values.vname.length === 0){\r\n                const query = firestore.collection(\"entries\").where(\"gname\",\"==\",values.gname)\r\n                const exeQuery = await query.get();\r\n                var userData = []\r\n                var ids = []\r\n                var recieptData = []\r\n               \r\n                exeQuery.forEach((d) => {\r\n                    userData.push(d.data())\r\n                    ids.push(d.id);\r\n                })\r\n                console.log(userData);\r\n                setUserData(userData)\r\n                ids.forEach(async (id) => {\r\n                    const getData = firestore.collection(\"all_receipts\").where(\"uid\" ,\"==\",id)\r\n                    const exeGetData = await getData.get()\r\n                    exeGetData.forEach((d) => {\r\n                         recieptData.push(d.data())\r\n                    })\r\n                    setRecData(recieptData)\r\n                })    \r\n                 \r\n                mergeData()\r\n            }\r\n        }\r\n    })\r\n\r\n    return(\r\n        <div>\r\n           <form onSubmit ={searchForm.handleSubmit}>\r\n                <div className=\"row\">\r\n                        <div className=\"col-sm-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>गादी का नाम </label>\r\n                                <select \r\n                                    className=\"form-control\"\r\n                                    name=\"gname\" \r\n                                    value={searchForm.values.gname}\r\n                                    onChange={searchForm.handleChange}\r\n                                >\r\n                                    <option value=\"\" disabled defaultValue=\"select\">Select one</option>\r\n                                        { gaadiName.map((gaadi) => \r\n                                        <option value={gaadi.id}>{gaadi.name}</option>\r\n                                        )}\r\n                                </select>\r\n                            </div>\r\n                         </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <div className=\"form-group\" onClick ={() => loadVillages()}>\r\n                                    <label>गांव का नाम </label>\r\n                                    <select \r\n                                        className=\"form-control\"\r\n                                        name=\"vname\" \r\n                                        value={searchForm.values.vname}\r\n                                        onChange={searchForm.handleChange}\r\n                                    >\r\n                                        <option value=\"\" disabled defaultValue=\"select\">Select one</option>\r\n                                            { villageName.map((vname) => \r\n                                            <option value={vname.id}>{vname.name}</option>\r\n                                            )}\r\n                                    </select>\r\n                                </div>\r\n                           </div>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-info\">Search </button>\r\n           </form>\r\n           {/* <div>\r\n        //    {usersData && <div className=\"row\">\r\n        //                  <div className=\"col-12\">\r\n        //                      <div className=\"card\">\r\n        //                      <div className=\"card-body\">\r\n        //                          <table id=\"example2\" className=\"table table-bordered table-hover\">\r\n        //                          <thead>\r\n        //                              <tr>\r\n        //                              <th>Name</th>\r\n        //                              <th>Father's Name</th>\r\n        //                              <th>Address</th>\r\n        //                              <th>Village Name</th>\r\n        //                              <th>Gaadi Name</th>\r\n        //                              <th>Mobile Number</th>\r\n        //                              <th>Donation For</th>\r\n        //                              <th>Payment type</th>\r\n        //                              <th>Date</th>\r\n        //                              <th>Amount</th>\r\n        //                              <th>Reciept Number</th>\r\n        //                              <th>Name to be Printed</th>\r\n        //                              <th>Note</th>\r\n        //                              </tr>\r\n        //                          </thead>\r\n        //                             {usersData.map((val,i) =>{\r\n        //                                 // console.log(val)\r\n        //                                 <Display uData = {val}  index = {i} />\r\n        //                             })}\r\n        //                          </table>\r\n        //                      </div>\r\n        //                      </div>\r\n                             \r\n        //                  </div>\r\n        //                  </div>\r\n        // </div>   */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GVSearch","C:\\projects\\samuhik\\src\\components\\NameSearch.js",[],"C:\\projects\\samuhik\\src\\components\\RegNoSearch.js",[],"C:\\projects\\samuhik\\src\\components\\PaymentSearch.js",[],"C:\\projects\\samuhik\\src\\components\\ProductSearch.js",[],"C:\\projects\\samuhik\\src\\components\\Display.js",["135","136","137","138"],"import React, { useEffect,useState } from 'react'\r\n\r\nexport default function Display(props) {\r\n    const [finalData, setFinalData] = useState([])\r\n    useEffect(() => {\r\n      var recData = [];\r\n      console.log(\"props\",props.uData);\r\n\r\n    },[])\r\n    return (\r\n        // <div>\r\n             <tbody>\r\n                                 {/* {finalData && finalData.map((val,i) => {\r\n                                     let ind = 0\r\n                                     val[ind].map((sub,j) => {\r\n                                     <tr>\r\n                                        <td>{val.name}</td>\r\n                                        <td>{val.fname}</td>\r\n                                        <td>{val.address}</td>\r\n                                        <td>{val.vname}</td>\r\n                                        <td>{val.gname}</td>\r\n                                        <td>{val.mnno}</td>\r\n                                        <td>{sub.donation}</td>\r\n                                        <td>{sub.type}</td>\r\n                                        <td>{sub.date}</td>\r\n                                        <td>{sub.amount}</td>\r\n                                        {sub.reciept_no  && <td>{sub.reciept_no}</td>}\r\n                                        {sub.ntp  &&<td>{sub.ntp}</td>}\r\n                                        <td>{sub.note}</td>\r\n                                    </tr>\r\n                                    ind++;\r\n                                    })\r\n                                })} */}\r\n                                 \r\n             </tbody>\r\n                        \r\n        // </div>\r\n    )\r\n}\r\n","C:\\projects\\samuhik\\src\\pages\\EditUser.js",["139","140","141","142","143","144","145"],"import React,{useState,useEffect} from 'react'\r\nimport SideBar from '../components/Sidebar'\r\nimport { firestore } from \"../firebase.config\";\r\nimport { navigate } from \"hookrouter\";\r\nimport { useFormik,useField} from \"formik\";\r\n\r\nfunction EditUser({id}) {\r\n    // console.log(\"rno:\",rno);\r\n    const [dtypes,setdTypes] = useState([])\r\n    const [val,setVal] = useState({})\r\n    const [allData, setAllData] = useState({})\r\n    const [gaadiName,setGaadiName] = useState([]);\r\n    const [villageName,setVillageName] = useState([])\r\n    \r\n    useEffect(async () => {\r\n        if (localStorage.getItem(\"logged\") !== \"true\") {\r\n          navigate(\"/\");\r\n        }\r\n        const document = firestore.collection(\"donation_type\")\r\n        const activeRef =  await document.get()\r\n          var dt = [];\r\n          activeRef.forEach((docs) => {\r\n            dt.push(docs.data())\r\n          })\r\n          setdTypes(dt)\r\n      },[]);\r\n\r\n    useEffect(async () => {\r\n        loadUserData()\r\n        loadGaadis()\r\n        console.log(\"val\",val);\r\n    },[id.id])   \r\n\r\n    const loadUserData = async() =>{\r\n        var userData = []\r\n        var recieptData = []\r\n        var ids;\r\n        const getData = firestore.collection(\"all_receipts\").where(\"id\" ,\"==\",id.id)\r\n        const exeGetData = await getData.get()\r\n        exeGetData.forEach((d) => {\r\n            recieptData.push(d.data())\r\n            ids = d.data().uid\r\n        })\r\n        const query = firestore.collection(\"entries\").where(\"uid\" ,\"==\",ids)\r\n        const exe = await query.get()\r\n        exe.forEach((d) => {\r\n            userData.push(d.data())\r\n        })\r\n        var final = {...userData[0],...recieptData[0]}\r\n        setVal(final)\r\n    }\r\n\r\n    const loadGaadis = async() =>{\r\n        const document = firestore.collection(\"gaadi_name\")\r\n        const activeRef =  await document.get()\r\n          var gaadis = [];\r\n          activeRef.forEach((docs) => {\r\n            gaadis.push(docs.data())\r\n          })\r\n          \r\n          setGaadiName(gaadis)\r\n    }\r\n\r\n    const loadVillages = async () =>{\r\n        if(newFormik.values.gname){\r\n          const coll_name = \"gaadi_name/\"+newFormik.values.gname+\"/village_name\"\r\n          const document = await firestore.collection(coll_name).get()\r\n          //console.log(\"gname\",document.docs)\r\n          var villages = []\r\n          document.docs.map((village) => {\r\n            villages.push(village.data())\r\n          })\r\n          // console.log(villages)\r\n          setVillageName(villages)\r\n          loadVillages()\r\n        }else{\r\n          alert(\"गादी का नाम डाले \")\r\n        }\r\n       \r\n      }\r\n\r\n      const validate = (values) =>{\r\n           \r\n        console.log(\"in validate\");\r\n          const errors = {}\r\n          if (!values.type) {\r\n            errors.type = \"Type Required\";\r\n          }\r\n          if (!values.address) {\r\n            errors.address = \"Address Required\";\r\n          }\r\n          if (values.type !== \"ghoshna\" && !values.reciept_no) {\r\n            errors.reciept_no = \"Reciept No Required\";\r\n          }\r\n          if (!values.donation) {\r\n            errors.donation = \"Donation Type Required\";\r\n          }\r\n          if (!values.date) {\r\n            errors.date = \"Date Required\";\r\n          }\r\n          if (!values.name) {\r\n              errors.name = \"Name Required\";\r\n          }\r\n          if (!values.vname) {\r\n              errors.vname = \"Village Name Required\";\r\n          }\r\n         if (!values.mnno.match(/^\\d{10}$/)) {\r\n            errors.mnno = \"Invalid Phone Number. 10 Digits Required\";\r\n          }\r\n          if (!values.gname) {\r\n              errors.gname = \"Gaadi Name Required\";\r\n          }\r\n          if (!values.amount) {\r\n            errors.amount = \"Amount  Required\";\r\n          }\r\n          return errors\r\n       }  \r\n\r\n\r\n    const newFormik = useFormik({\r\n        initialValues: val,  \r\n        enableReinitialize: true,\r\n        validate,\r\n        onSubmit:(values) => {\r\n            const uid = val.uid\r\n            if(values.type === \"ghoshna\")\r\n                values.reciept_no = \"\";\r\n            const user_data = {\r\n                address : values.address,\r\n                fname: values.fname,\r\n                due:values.type === \"due\",\r\n                ghoshna:values.type === \"ghoshna\",\r\n                received:values.type === \"received\",\r\n                gname:values.gname,\r\n                mnno:values.mnno,\r\n                name:values.name,\r\n                vname:values.vname\r\n            }\r\n            const rec_data = {\r\n                type: values.type,\r\n                amount: values.amount,\r\n                date: values.date,\r\n                donation: values.donation,\r\n                note: values.note,\r\n                ntp: values.ntp,\r\n                id: id.id,\r\n            }\r\n            console.log(values);\r\n            firestore\r\n                .collection(\"entries\")\r\n                .doc(uid)\r\n                .set(user_data,{merge:true})\r\n                .then(function () {\r\n                    firestore\r\n                        .collection(\"all_receipts\")\r\n                        .doc(id.id)\r\n                        .set(rec_data,{merge:true})\r\n                        .then(function() {\r\n                            navigate(\"/search\")\r\n                        })\r\n                })\r\n        }\r\n    })\r\n    return (\r\n        <div>\r\n            <SideBar />\r\n            <div className=\"content-wrapper\">\r\n                {/* ye */}\r\n                <div className=\"content-header\">\r\n                    <div className=\"container-fluid\">\r\n                    <div className=\"row mb-2\">\r\n                        <div className=\"col-sm-6\">\r\n                        <h1 className=\"m-0 text-dark\">Edit User</h1>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <section className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <form  onSubmit = {newFormik.handleSubmit}>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                            <label>Name</label>\r\n                                            <input \r\n                                                type=\"text\"\r\n                                                // placeholder=\"Name\" \r\n                                                className=\"form-control\" \r\n                                                name=\"name\"\r\n                                                defaultValue={newFormik.values.name}\r\n                                                onChange={newFormik.handleChange}\r\n                                            />\r\n                                            </div>\r\n                                            {newFormik.errors.name ? (<p style={{color:\"red\"}}>{ newFormik.errors.name}</p>) : null}\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                            <label>गादी का नाम </label>\r\n                                            <select \r\n                                                className=\"form-control\"\r\n                                                name=\"gname\" \r\n                                                value={newFormik.values.gname}\r\n                                                onChange={newFormik.handleChange}\r\n                                            >\r\n                                                <option value=\"\" disabled selected>Select one</option>\r\n                                                { gaadiName.map((gaadi) => \r\n                                                    <option  value={gaadi.id}>{gaadi.name}</option>\r\n                                                )}\r\n                                            </select>\r\n                                            </div>\r\n                                            {newFormik.errors.gname ? (<p style={{color:\"red\"}}>{ newFormik.errors.gname}</p>) : null}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\" onClick ={() => loadVillages()}>\r\n                                            <label>गांव का नाम </label>\r\n                                            <select \r\n                                                className=\"form-control\"\r\n                                                name=\"vname\" \r\n                                                value={newFormik.values.vname}\r\n                                                onChange={newFormik.handleChange}\r\n                                            >\r\n                                            <option value=\"\" disabled selected>Select one</option>\r\n                                            { villageName.map((vname) => \r\n                                                <option value={vname.id}>{vname.name}</option>\r\n                                            )}\r\n                                            </select>\r\n                                            </div>\r\n                                            {newFormik.errors.vname ? (<p style={{color:\"red\"}}>{ newFormik.errors.vname}</p>) : null}\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                            <label>Address</label>\r\n                                            <input \r\n                                                type=\"text\"\r\n                                                // placeholder=\"Name\" \r\n                                                className=\"form-control\" \r\n                                                name=\"address\"\r\n                                                defaultValue={newFormik.values.address}\r\n                                                onChange={newFormik.handleChange}\r\n                                            />\r\n                                            </div>\r\n                                            {newFormik.errors.address ? (<p style={{color:\"red\"}}>{ newFormik.errors.address}</p>) : null}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                            <label>Mobile</label>\r\n                                            <input \r\n                                                type=\"text\"\r\n                                                // placeholder=\"Name\" \r\n                                                className=\"form-control\" \r\n                                                name=\"mnno\"\r\n                                                defaultValue={newFormik.values.mnno}\r\n                                                onChange={newFormik.handleChange}\r\n                                            />\r\n                                            </div>\r\n                                            {newFormik.errors.mnno ? (<p style={{color:\"red\"}}>{ newFormik.errors.mnno}</p>) : null}\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                            <label>Type</label>\r\n                                            <select \r\n                                                className=\"form-control\"\r\n                                                name=\"type\" \r\n                                                onChange={newFormik.handleChange}\r\n                                                value={newFormik.values.type}\r\n                                            >\r\n                                                <option value=\"\" disabled selected>Select one</option>\r\n                                                <option value=\"ghoshna\">Ghoshna</option>\r\n                                                <option value=\"due\">Due</option>\r\n                                                <option value=\"received\">Received</option>\r\n                                            </select>\r\n                                            </div>\r\n                                            {newFormik.errors.type ? (<p style={{color:\"red\"}}>{ newFormik.errors.type}</p>) : null}\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                     { newFormik.values.type !== \"ghoshna\" && \r\n                                     <div className=\"col-sm-6\">\r\n                                        <div className=\"form-group\">\r\n                                            <label>Reciept No</label>\r\n                                            <input \r\n                                                type=\"text\"\r\n                                                // placeholder=\"Name\" \r\n                                                className=\"form-control\" \r\n                                                name=\"reciept_no\"\r\n                                                readOnly\r\n                                                defaultValue={newFormik.values.reciept_no}\r\n                                                onChange={newFormik.handleChange}\r\n                                            />\r\n                                         </div>\r\n                                            {newFormik.errors.reciept_no ? (<p style={{color:\"red\"}}>{ newFormik.errors.reciept_no}</p>) : null}\r\n                                     </div>}\r\n                                        \r\n                                        <div className=\"col-sm-6\">\r\n                                        <div className=\"form-group\">\r\n                                        <label>दान के प्रकार </label>\r\n                                        <select \r\n                                            name=\"donation\"\r\n                                            value={newFormik.values.donation}\r\n                                            className=\"form-control\" \r\n                                            onChange={newFormik.handleChange}\r\n                                            tw=\"w-full p-3 bg-white rounded-md font-medium border border-gray-500 text-sm focus:outline-none focus:border-gray-400\"\r\n                                        >\r\n                                            <option value=\"\" disabled selected>Select one</option>\r\n                                            {dtypes.map((dt) => \r\n                                                <option value={dt.id}>{dt.name}</option>\r\n                                            )}\r\n                                        </select>\r\n                                            </div>\r\n                                            {newFormik.errors.donation ? (<p style={{color:\"red\"}}>{ newFormik.errors.donation}</p>) : null}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                            <label>Date</label>\r\n                                            <input \r\n                                                type=\"date\"\r\n                                                placeholder=\"Date\" \r\n                                                className=\"form-control\" \r\n                                                name=\"date\"\r\n                                                defaultValue={newFormik.values.date}\r\n                                                onChange={newFormik.handleChange}\r\n                                            />\r\n                                            </div>\r\n                                            {newFormik.errors.date ? (<p style={{color:\"red\"}}>{ newFormik.errors.date}</p>) : null}\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                        <div className=\"form-group\">\r\n                                            <label>Amount</label>\r\n                                            <input \r\n                                                type=\"text\"\r\n                                                // placeholder=\"Name\" \r\n                                                className=\"form-control\" \r\n                                                name=\"amt\"\r\n                                                defaultValue={newFormik.values.amount}\r\n                                                onChange={newFormik.handleChange}\r\n                                            />\r\n                                            </div>\r\n                                            {newFormik.errors.amt ? (<p style={{color:\"red\"}}>{ newFormik.errors.amt}</p>) : null}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                        <div className=\"form-group\">\r\n                                            <label>Note</label>\r\n                                            <input \r\n                                                type=\"text\"\r\n                                                // placeholder=\"Name\" \r\n                                                className=\"form-control\" \r\n                                                name=\"note\"\r\n                                                defaultValue={newFormik.values.note}\r\n                                                onChange={newFormik.handleChange}\r\n                                            />\r\n                                            </div> \r\n                                            \r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                            <label>Name to be printed</label>\r\n                                            <input \r\n                                                type=\"text\"\r\n                                                // placeholder=\"Name\" \r\n                                                className=\"form-control\" \r\n                                                name=\"ntp\"\r\n                                                defaultValue={newFormik.values.ntp}\r\n                                                onChange={newFormik.handleChange}\r\n                                            />\r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn btn-info\">Edit  </button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditUser\r\n","C:\\projects\\samuhik\\src\\components\\Ghoshna.js",["146","147"],"import React,{useEffect,useState} from \"react\";\r\nimport { firestore } from \"../firebase.config\";\r\nimport { navigate } from \"hookrouter\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useFormik } from \"formik\";\r\n\r\nexport default function Ghoshna(props) {\r\n    const [dtype,setdTypes] = useState([])\r\n\r\n    useEffect(async () => {\r\n        if (localStorage.getItem(\"logged\") !== \"true\") {\r\n          navigate(\"/\");\r\n        }\r\n        const document = firestore.collection(\"donation_type\");\r\n        const activeRef = await document.get();\r\n        var dt = [];\r\n        activeRef.forEach((docs) => {\r\n          dt.push(docs.data());\r\n        });\r\n    \r\n        setdTypes(dt);\r\n    });\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if (!values.date) {\r\n      errors.date = \"Date Required\";\r\n    }\r\n    if (!values.donation) {\r\n      errors.donation = \"Donation Required\";\r\n    }\r\n    if (!values.amt) {\r\n      errors.amt = \"Amount Required\";\r\n    }\r\n\r\n    return errors;\r\n  };\r\n  const newFormik = useFormik({\r\n    initialValues: {\r\n      rno: \"\",\r\n      amt: \"\",\r\n      date: \"\",\r\n      donation: \"\",\r\n      note: \"\",\r\n    },\r\n    validate,\r\n    onSubmit: async (values) => {\r\n      //console.log(values)\r\n      let uid = localStorage.getItem(\"userid\");\r\n      let id = uuidv4();\r\n      //console.log(uid);\r\n      const ghoshna_data = {\r\n        id: id,\r\n        uid: uid,\r\n        date: values.date,\r\n        amount: values.amt,\r\n        donation: values.donation,\r\n        note: values.note,\r\n        type: \"ghoshna\",\r\n      };\r\n      console.log(ghoshna_data);\r\n      //add in ghoshna\r\n      firestore\r\n        .collection(\"all_receipts\")\r\n        .doc(id)\r\n        .set(ghoshna_data, { merge: true })\r\n        .then(function () {\r\n          console.log(\"success\");\r\n          //update in entries\r\n          firestore.collection(\"entries\").doc(uid).update({\r\n            ghoshna: true,\r\n          });\r\n          console.log(\"updated\");\r\n          localStorage.removeItem(\"userid\");\r\n          navigate(\"/home\");\r\n        });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <form onSubmit={newFormik.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-6\">\r\n              <div className=\"form-group\">\r\n                <label>दिनांक </label>\r\n                <input\r\n                  type=\"date\"\r\n                  placeholder=\"Date\"\r\n                  className=\"form-control\"\r\n                  name=\"date\"\r\n                  onChange={newFormik.handleChange}\r\n                />\r\n              </div>\r\n              {newFormik.errors.date ? (\r\n                <p style={{ color: \"red\" }}>{newFormik.errors.date}</p>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"col-sm-6\">\r\n              <div className=\"form-group\">\r\n                <label>दान के प्रकार </label>\r\n                <select\r\n                  name=\"donation\"\r\n                  value={newFormik.values.donation}\r\n                  className=\"form-control\"\r\n                  onChange={newFormik.handleChange}\r\n                  tw=\"w-full p-3 bg-white rounded-md font-medium border border-gray-500 text-sm focus:outline-none focus:border-gray-400\"\r\n                >\r\n                  <option value=\"\" disabled selected>\r\n                    Select one\r\n                  </option>\r\n                  {dtype.map((dt) => (\r\n                    <option value={dt.id}>{dt.name}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              {newFormik.errors.donation ? (\r\n                <p style={{ color: \"red\" }}>{newFormik.errors.donation}</p>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-6\">\r\n              <div className=\"form-group\">\r\n                <label>राशि </label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"राशि\"\r\n                  name=\"amt\"\r\n                  className=\"form-control\"\r\n                  value={newFormik.values.amt}\r\n                  onChange={newFormik.handleChange}\r\n                />\r\n              </div>\r\n\r\n              {newFormik.errors.amt ? (\r\n                <p style={{ color: \"red\" }}>{newFormik.errors.amt}</p>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"col-sm-6\">\r\n              <div className=\"form-group\">\r\n                <label>नोट </label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"नोट \"\r\n                  name=\"note\"\r\n                  className=\"form-control\"\r\n                  value={newFormik.values.note}\r\n                  onChange={newFormik.handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-info\">\r\n            सबमिट{\" \"}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\projects\\samuhik\\src\\components\\Due.js",["148","149"],"import React,{useState,useEffect} from \"react\";\r\nimport { firestore } from \"../firebase.config\";\r\nimport { navigate } from \"hookrouter\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useFormik } from \"formik\";\r\n\r\nexport default function Due() {\r\n  const [dtype, setdTypes] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    if (localStorage.getItem(\"logged\") !== \"true\") {\r\n      navigate(\"/\");\r\n    }\r\n    const document = firestore.collection(\"donation_type\");\r\n    const activeRef = await document.get();\r\n    var dt = [];\r\n    activeRef.forEach((docs) => {\r\n      dt.push(docs.data());\r\n    });\r\n\r\n    setdTypes(dt);\r\n  });\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if (!values.rno) {\r\n      errors.rno = \"Reciept Number Required\";\r\n    }\r\n    if (!values.date) {\r\n      errors.date = \"Date Required\";\r\n    }\r\n    if (!values.donation) {\r\n      errors.donation = \"Donation Required\";\r\n    }\r\n    if (!values.amt) {\r\n      errors.amt = \"Amount Required\";\r\n    }\r\n    return errors;\r\n  };\r\n  const newFormik = useFormik({\r\n    initialValues: {\r\n      note: \"\",\r\n      rno: \"\",\r\n      date: \"\",\r\n      donation: \"\",\r\n      amt: \"\",\r\n      ntp: \"\",\r\n    },\r\n    validate,\r\n    onSubmit: async (values) => {\r\n      //console.log(values)\r\n      let uid = localStorage.getItem(\"userid\");\r\n      let id = uuidv4();\r\n      console.log(\"due val\", values);\r\n\r\n      const due_data = {\r\n        id: id,\r\n        uid: uid,\r\n        date: values.date,\r\n        amount: values.amt,\r\n        donation: values.donation,\r\n        reciept_no: values.rno,\r\n        ntp: values.ntp,\r\n        note: values.note,\r\n        type: \"due\",\r\n      };\r\n      //  console.log(due_data);\r\n      firestore\r\n        .collection(\"all_receipts\")\r\n        .where(\"reciept_no\", \"==\", values.rno)\r\n        .get()\r\n        .then(function (deets) {\r\n          if (deets.size > 0) {\r\n            alert(\"Reciept Number already exists\");\r\n          } else {\r\n            firestore\r\n              .collection(\"all_receipts\")\r\n              // .doc(\"AllReceipts\")\r\n              // .collection(\"due\")\r\n              .doc(id)\r\n              .set(due_data, { merge: true })\r\n              .then(function () {\r\n                console.log(\"success\");\r\n                //update in entries\r\n                firestore.collection(\"entries\").doc(uid).update({\r\n                  due: true,\r\n                });\r\n                console.log(\"updated\");\r\n                localStorage.removeItem(\"userid\");\r\n                navigate(\"/home\");\r\n              });\r\n          }\r\n        });\r\n    },\r\n  });\r\n  return (\r\n    <div>\r\n      <div>\r\n        <form onSubmit={newFormik.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-6\">\r\n              <div className=\"form-group\">\r\n                <label>रसीद नंबर </label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"रसीद नंबर \"\r\n                  name=\"rno\"\r\n                  className=\"form-control\"\r\n                  onChange={newFormik.handleChange}\r\n                  value={newFormik.values.rno}\r\n                />\r\n              </div>\r\n              {newFormik.errors.rno ? (\r\n                <p style={{ color: \"red\" }}>{newFormik.errors.rno}</p>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"col-sm-6\">\r\n              <div className=\"form-group\">\r\n                <label>दिनांक </label>\r\n                <input\r\n                  type=\"date\"\r\n                  placeholder=\"दिनांक \"\r\n                  className=\"form-control\"\r\n                  name=\"date\"\r\n                  onChange={newFormik.handleChange}\r\n                />\r\n              </div>\r\n              {newFormik.errors.date ? (\r\n                <p style={{ color: \"red\" }}>{newFormik.errors.date}</p>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-6\">\r\n              <div className=\"form-group\">\r\n                <label>बाकी राशि </label>\r\n                <input\r\n                  type=\"number\"\r\n                  placeholder=\"बाकी राशि \"\r\n                  name=\"amt\"\r\n                  className=\"form-control\"\r\n                  onChange={newFormik.handleChange}\r\n                  value={newFormik.values.amt}\r\n                />\r\n              </div>\r\n              {newFormik.errors.amt ? (\r\n                <p style={{ color: \"red\" }}>{newFormik.errors.amt}</p>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"col-sm-6\">\r\n              <div className=\"form-group\">\r\n                <label>दान के प्रकार</label>\r\n                <select\r\n                  name=\"donation\"\r\n                  value={newFormik.values.ddonation}\r\n                  className=\"form-control\"\r\n                  onChange={newFormik.handleChange}\r\n                  tw=\"w-full p-3 bg-white rounded-md font-medium border border-gray-500 text-sm focus:outline-none focus:border-gray-400\"\r\n                >\r\n                  <option value=\"\" disabled selected>\r\n                    Select one\r\n                  </option>\r\n                  {dtype.map((dt) => (\r\n                    <option value={dt.id}>{dt.name}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              {newFormik.errors.donation ? (\r\n                <p style={{ color: \"red\" }}>{newFormik.errors.donation}</p>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-6\">\r\n              <div className=\"form-group\">\r\n                <label>Name to be Printed</label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Name to be printed\"\r\n                  name=\"ntp\"\r\n                  className=\"form-control\"\r\n                  onChange={newFormik.handleChange}\r\n                  value={newFormik.values.ntp}\r\n                />\r\n              </div>\r\n              {newFormik.errors.ntp ? (\r\n                <p style={{ color: \"red\" }}>{newFormik.errors.ntp}</p>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"col-sm-6\">\r\n              <div className=\"form-group\">\r\n                <label>नोट </label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"नोट \"\r\n                  name=\"note\"\r\n                  className=\"form-control\"\r\n                  value={newFormik.values.note}\r\n                  onChange={newFormik.handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-info\">\r\n            सबमिट{\" \"}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\projects\\samuhik\\src\\components\\Received.js",["150","151","152"],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":51,"column":21,"nodeType":"159","endLine":51,"endColumn":77},{"ruleId":"153","replacedBy":"160"},{"ruleId":"155","replacedBy":"161"},{"ruleId":"153","replacedBy":"162"},{"ruleId":"155","replacedBy":"163"},{"ruleId":"153","replacedBy":"164"},{"ruleId":"155","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":15,"column":15,"nodeType":"168","endLine":20,"endColumn":6},{"ruleId":"169","severity":1,"message":"170","line":48,"column":39,"nodeType":"168","messageId":"171","endLine":48,"endColumn":41},{"ruleId":"169","severity":1,"message":"170","line":104,"column":40,"nodeType":"168","messageId":"171","endLine":104,"endColumn":42},{"ruleId":"172","severity":1,"message":"173","line":202,"column":41,"nodeType":"174","endLine":202,"endColumn":53},{"ruleId":"157","severity":1,"message":"158","line":212,"column":32,"nodeType":"159","endLine":212,"endColumn":87},{"ruleId":"175","severity":1,"message":"176","line":10,"column":10,"nodeType":"177","messageId":"178","endLine":10,"endColumn":16},{"ruleId":"175","severity":1,"message":"179","line":12,"column":7,"nodeType":"177","messageId":"178","endLine":12,"endColumn":10},{"ruleId":"166","severity":1,"message":"180","line":14,"column":3,"nodeType":"177","endLine":14,"endColumn":12,"suggestions":"181"},{"ruleId":"166","severity":1,"message":"167","line":14,"column":13,"nodeType":"168","endLine":26,"endColumn":4},{"ruleId":"175","severity":1,"message":"182","line":7,"column":8,"nodeType":"177","messageId":"178","endLine":7,"endColumn":9},{"ruleId":"169","severity":1,"message":"170","line":49,"column":28,"nodeType":"168","messageId":"171","endLine":49,"endColumn":30},{"ruleId":"169","severity":1,"message":"170","line":54,"column":30,"nodeType":"168","messageId":"171","endLine":54,"endColumn":32},{"ruleId":"175","severity":1,"message":"183","line":1,"column":27,"nodeType":"177","messageId":"178","endLine":1,"endColumn":36},{"ruleId":"175","severity":1,"message":"184","line":9,"column":8,"nodeType":"177","messageId":"178","endLine":9,"endColumn":16},{"ruleId":"169","severity":1,"message":"170","line":25,"column":23,"nodeType":"168","messageId":"171","endLine":25,"endColumn":25},{"ruleId":"169","severity":1,"message":"170","line":30,"column":23,"nodeType":"168","messageId":"171","endLine":30,"endColumn":25},{"ruleId":"169","severity":1,"message":"170","line":49,"column":23,"nodeType":"168","messageId":"171","endLine":49,"endColumn":25},{"ruleId":"175","severity":1,"message":"185","line":59,"column":11,"nodeType":"177","messageId":"178","endLine":59,"endColumn":14},{"ruleId":"175","severity":1,"message":"182","line":5,"column":8,"nodeType":"177","messageId":"178","endLine":5,"endColumn":9},{"ruleId":"175","severity":1,"message":"186","line":6,"column":8,"nodeType":"177","messageId":"178","endLine":6,"endColumn":15},{"ruleId":"169","severity":1,"message":"170","line":39,"column":39,"nodeType":"168","messageId":"171","endLine":39,"endColumn":41},{"ruleId":"187","severity":1,"message":"188","line":76,"column":31,"nodeType":"189","messageId":"190","endLine":76,"endColumn":102,"fix":"191"},{"ruleId":"175","severity":1,"message":"192","line":4,"column":12,"nodeType":"177","messageId":"178","endLine":4,"endColumn":21},{"ruleId":"175","severity":1,"message":"193","line":4,"column":23,"nodeType":"177","messageId":"178","endLine":4,"endColumn":35},{"ruleId":"175","severity":1,"message":"194","line":6,"column":11,"nodeType":"177","messageId":"178","endLine":6,"endColumn":18},{"ruleId":"166","severity":1,"message":"195","line":9,"column":7,"nodeType":"196","endLine":9,"endColumn":9,"suggestions":"197"},{"ruleId":"175","severity":1,"message":"198","line":5,"column":20,"nodeType":"177","messageId":"178","endLine":5,"endColumn":28},{"ruleId":"175","severity":1,"message":"199","line":11,"column":12,"nodeType":"177","messageId":"178","endLine":11,"endColumn":19},{"ruleId":"175","severity":1,"message":"200","line":11,"column":21,"nodeType":"177","messageId":"178","endLine":11,"endColumn":31},{"ruleId":"166","severity":1,"message":"167","line":15,"column":15,"nodeType":"168","endLine":26,"endColumn":8},{"ruleId":"166","severity":1,"message":"167","line":28,"column":15,"nodeType":"168","endLine":32,"endColumn":6},{"ruleId":"166","severity":1,"message":"201","line":32,"column":7,"nodeType":"196","endLine":32,"endColumn":14,"suggestions":"202"},{"ruleId":"169","severity":1,"message":"170","line":70,"column":39,"nodeType":"168","messageId":"171","endLine":70,"endColumn":41},{"ruleId":"166","severity":1,"message":"180","line":10,"column":5,"nodeType":"177","endLine":10,"endColumn":14,"suggestions":"203"},{"ruleId":"166","severity":1,"message":"167","line":10,"column":15,"nodeType":"168","endLine":22,"endColumn":6},{"ruleId":"166","severity":1,"message":"180","line":10,"column":3,"nodeType":"177","endLine":10,"endColumn":12,"suggestions":"204"},{"ruleId":"166","severity":1,"message":"167","line":10,"column":13,"nodeType":"168","endLine":22,"endColumn":4},{"ruleId":"166","severity":1,"message":"180","line":10,"column":3,"nodeType":"177","endLine":10,"endColumn":12,"suggestions":"205"},{"ruleId":"166","severity":1,"message":"167","line":10,"column":13,"nodeType":"168","endLine":22,"endColumn":4},{"ruleId":"206","severity":1,"message":"207","line":54,"column":7,"nodeType":"208","messageId":"209","endLine":54,"endColumn":11},"no-native-reassign",["210"],"no-negated-in-lhs",["211"],"jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement",["210"],["211"],["210"],["211"],["210"],["211"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'dtypes' is assigned a value but never used.","Identifier","unusedVar","'ref' is assigned a value but never used.","React Hook useEffect contains a call to 'setdTypes'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["212"],"'_' is defined but never used.","'useEffect' is defined but never used.","'EditUser' is defined but never used.","'exe' is assigned a value but never used.","'Display' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property where.","MemberExpression","unexpectedWhitespace",{"range":"213","text":"214"},"'finalData' is assigned a value but never used.","'setFinalData' is assigned a value but never used.","'recData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.uData'. Either include it or remove the dependency array.","ArrayExpression",["215"],"'useField' is defined but never used.","'allData' is assigned a value but never used.","'setAllData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadUserData' and 'val'. Either include them or remove the dependency array.",["216"],["217"],["218"],["219"],"no-dupe-keys","Duplicate key 'note'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"220","fix":"221"},[2547,2549],".",{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"220","fix":"226"},{"desc":"220","fix":"227"},{"desc":"220","fix":"228"},"Add dependencies array: []",{"range":"229","text":"230"},"Update the dependencies array to be: [props.uData]",{"range":"231","text":"232"},"Update the dependencies array to be: [id.id, loadUserData, val]",{"range":"233","text":"234"},{"range":"235","text":"230"},{"range":"236","text":"230"},{"range":"237","text":"230"},[847,847],", []",[244,246],"[props.uData]",[1039,1046],"[id.id, loadUserData, val]",[683,683],[626,626],[631,631]]