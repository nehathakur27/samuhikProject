[{"C:\\projects\\samuhik\\src\\reportWebVitals.js":"1","C:\\projects\\samuhik\\src\\pages\\Login.js":"2","C:\\projects\\samuhik\\src\\App.js":"3","C:\\projects\\samuhik\\src\\pages\\Home.js":"4","C:\\projects\\samuhik\\src\\components\\Sidebar.js":"5","C:\\projects\\samuhik\\src\\firebase.config.js":"6","C:\\projects\\samuhik\\src\\index.js":"7","C:\\projects\\samuhik\\src\\Routes.js":"8","C:\\projects\\samuhik\\src\\pages\\AddEntry.js":"9","C:\\projects\\samuhik\\src\\pages\\PaymentCondition.js":"10","C:\\projects\\samuhik\\src\\pages\\Reports.js":"11","C:\\projects\\samuhik\\src\\pages\\SearchEntry.js":"12","C:\\projects\\samuhik\\src\\components\\GVSearch.js":"13","C:\\projects\\samuhik\\src\\components\\NameSearch.js":"14","C:\\projects\\samuhik\\src\\components\\RegNoSearch.js":"15","C:\\projects\\samuhik\\src\\components\\PaymentSearch.js":"16","C:\\projects\\samuhik\\src\\components\\ProductSearch.js":"17","C:\\projects\\samuhik\\src\\components\\Display.js":"18"},{"size":362,"mtime":1607019289615,"results":"19","hashOfConfig":"20"},{"size":3940,"mtime":1609581092528,"results":"21","hashOfConfig":"20"},{"size":181,"mtime":1609581202977,"results":"22","hashOfConfig":"20"},{"size":4146,"mtime":1609769621464,"results":"23","hashOfConfig":"20"},{"size":1931,"mtime":1611585821692,"results":"24","hashOfConfig":"20"},{"size":576,"mtime":1609580929950,"results":"25","hashOfConfig":"20"},{"size":455,"mtime":1609582072455,"results":"26","hashOfConfig":"20"},{"size":512,"mtime":1611585896960,"results":"27","hashOfConfig":"20"},{"size":17356,"mtime":1609770359083,"results":"28","hashOfConfig":"20"},{"size":24802,"mtime":1611234187725,"results":"29","hashOfConfig":"20"},{"size":6875,"mtime":1613473738775,"results":"30","hashOfConfig":"20"},{"size":5835,"mtime":1611856385348,"results":"31","hashOfConfig":"20"},{"size":10173,"mtime":1613472705694,"results":"32","hashOfConfig":"20"},{"size":3206,"mtime":1611855963926,"results":"33","hashOfConfig":"20"},{"size":3331,"mtime":1611854206778,"results":"34","hashOfConfig":"20"},{"size":3493,"mtime":1611918820337,"results":"35","hashOfConfig":"20"},{"size":3886,"mtime":1611918786216,"results":"36","hashOfConfig":"20"},{"size":1661,"mtime":1612279008152,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"qo99fg",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},"C:\\projects\\samuhik\\src\\reportWebVitals.js",[],["88","89"],"C:\\projects\\samuhik\\src\\pages\\Login.js",["90"],"import React from 'react'\r\nimport { useFormik,} from \"formik\";\r\nimport { firestore } from \"../firebase.config\";\r\nimport { navigate } from \"hookrouter\";\r\n\r\nfunction Login(){\r\n    const validate = (values) =>{\r\n        const errors = {}\r\n        if (!values.username) {\r\n          errors.username = \"Username Required\"\r\n        }\r\n        if (!values.password) {\r\n          errors.password = \"Password Required\";\r\n        }\r\n        return errors\r\n     }\r\n    \r\n      const LoginFormik = useFormik({\r\n      initialValues: {\r\n        username: \"\",\r\n        password:\"\",\r\n      },\r\n      validate,\r\n      onSubmit: (values) => {\r\n         firestore\r\n            .collection(\"user\")\r\n            .doc(\"user\")\r\n            .get()\r\n            .then(function (deets){\r\n               if(deets.exists){\r\n                 if(deets.data().password === values.password && deets.data().username === values.username){\r\n                     localStorage.setItem(\"logged\",\"true\" );\r\n                     navigate(\"/home\")\r\n                 }else{\r\n                   alert(\"Invalid Credentials\")\r\n                 }\r\n               }\r\n            })\r\n      }\r\n    })\r\n    return(\r\n        <div>\r\n            <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\" style={{display: 'flex',  justifyContent:'center', alignItems:'center', height: '100vh'}}>\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card card-primary\">\r\n                    <div className=\"card-header\">\r\n                        <h3 className=\"card-title\">Login Form</h3>\r\n                    </div>\r\n                    <form role=\"form\" onSubmit = {LoginFormik.handleSubmit}>\r\n                        <div className=\"card-body\">\r\n                        <div className=\"form-group \">\r\n                            <label htmlFor=\"username\" >Username</label>\r\n                            <div className=\"col-sm-10\">\r\n                            <input \r\n                                type=\"text\" \r\n                                className=\"form-control\"\r\n                                id=\"username\" \r\n                                placeholder=\"Username\" \r\n                                onChange={LoginFormik.handleChange}\r\n                                value={LoginFormik.values.username} \r\n                            />\r\n                            </div>\r\n                        </div>\r\n                        {LoginFormik.errors.username ? \r\n                            (<p style={{color:\"red\"}}>{ LoginFormik.errors.username}</p>) : null\r\n                        }\r\n                        <div className=\"form-group \">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <div className=\"col-sm-10\">\r\n                            <input \r\n                                type=\"password\"\r\n                                className=\"form-control\" \r\n                                id=\"password\"\r\n                                placeholder=\"Password\" \r\n                                onChange={LoginFormik.handleChange}\r\n                                value={LoginFormik.values.password} \r\n                            />\r\n                            </div>\r\n                            {LoginFormik.errors.password ? \r\n                                (<p style={{color:\"red\"}}>{ LoginFormik.errors.password}</p>) : null\r\n                            }\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"card-footer\">\r\n                        <button type=\"submit\" className=\"btn btn-info\">Sign in</button>\r\n                        </div>\r\n                    </form>\r\n                    </div>\r\n                </div>\r\n                \r\n                </div>\r\n                \r\n            </div>\r\n            </section>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login",["91","92"],"C:\\projects\\samuhik\\src\\App.js",[],["93","94"],"C:\\projects\\samuhik\\src\\pages\\Home.js",[],"C:\\projects\\samuhik\\src\\components\\Sidebar.js",[],"C:\\projects\\samuhik\\src\\firebase.config.js",[],["95","96"],"C:\\projects\\samuhik\\src\\index.js",[],"C:\\projects\\samuhik\\src\\Routes.js",[],"C:\\projects\\samuhik\\src\\pages\\AddEntry.js",["97","98","99","100","101"],"import React,{useState,useEffect} from 'react'\r\nimport { firestore } from \"../firebase.config\";\r\nimport { navigate } from \"hookrouter\";\r\nimport SideBar from '../components/Sidebar'\r\nimport { useFormik,} from \"formik\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction AddEntry(){\r\n  const [gaadiName,setGaadiName] = useState([]);\r\n  const [villageName,setVillageName] = useState([])\r\n  const[isRegistered,setRegistered] = useState(false)\r\n  const [getUser,setGetUser] = useState([]);\r\n  const [selected,isSelected] = useState(false)\r\n\r\n    useEffect(async () => {\r\n        if (localStorage.getItem(\"logged\") !== \"true\") {\r\n          navigate(\"/\");\r\n        }\r\n        loadGaadis()\r\n    });\r\n\r\n    function handleRegister(e) {\r\n        if (e.target.value === \"yes\") {\r\n          setRegistered(true);\r\n        } else {\r\n          setRegistered(false);\r\n        }\r\n        console.log(isRegistered)\r\n      }\r\n\r\n    const loadGaadis = async() =>{\r\n        const document = firestore.collection(\"gaadi_name\")\r\n        const activeRef =  await document.get()\r\n          var gaadis = [];\r\n          activeRef.forEach((docs) => {\r\n            gaadis.push(docs.data())\r\n          })\r\n          \r\n          setGaadiName(gaadis)\r\n    }\r\n\r\n    const loadVillages = async () =>{\r\n        if(registerForm.values.gname){\r\n          const coll_name = \"gaadi_name/\"+registerForm.values.gname+\"/village_name\"\r\n          const document = await firestore.collection(coll_name).get()\r\n          //console.log(\"gname\",document.docs)\r\n          var villages = []\r\n          document.docs.map((village) => {\r\n            villages.push(village.data())\r\n          })\r\n          // console.log(villages)\r\n          setVillageName(villages)\r\n        }else{\r\n          alert(\"गादी का नाम डाले \")\r\n        }\r\n       \r\n      }\r\n\r\n    \r\n    function selectUser(e) {\r\n        //console.log(e.target.value)\r\n         localStorage.setItem(\"userid\",e.target.value)\r\n         isSelected(true)\r\n       }\r\n   \r\n       const validate = (values) =>{\r\n           \r\n         console.log(\"in validate\");\r\n           const errors = {}\r\n           if (!values.regno) {\r\n             errors.regno = \"Registration Number Required\";\r\n           }\r\n           if (!values.name) {\r\n               errors.name = \"Name Required\";\r\n           }\r\n           if (!values.vname) {\r\n               errors.vname = \"Village Name Required\";\r\n           }\r\n          if (!values.mno.match(/^\\d{10}$/)) {\r\n             errors.mno = \"Invalid Phone Number. 10 Digits Required\";\r\n           }\r\n           if (!values.gname) {\r\n               errors.gname = \"Gaadi Name Required\";\r\n           }\r\n          \r\n           return errors\r\n        }\r\n\r\n        const checkUserForm = useFormik({\r\n            initialValues:{\r\n              name:\"\"\r\n            },\r\n            onSubmit: (values) => {\r\n              console.log(values);\r\n               firestore\r\n               .collection(\"entries\")\r\n               .where(\"name\",\"==\",values.name)\r\n               .get()\r\n               .then(function (deets){\r\n                  //console.log(deets.docs)\r\n                  if(deets.empty)\r\n                    alert(\"No such user\")\r\n                  else{\r\n                    deets.docs.map((v) => {\r\n                      setGetUser(getUser => [...getUser,v.data()])\r\n                    })\r\n                  }\r\n               })\r\n            }\r\n          })\r\n     \r\n          const registerForm = useFormik({\r\n             initialValues: {\r\n               uid:uuidv4(),\r\n               regno: \"\",\r\n               name:\"\",\r\n               fname:\"\",\r\n               address:\"\",\r\n               vname:\"\",\r\n               gname:\"\",\r\n               mno:\"\",\r\n             },\r\n             validate,\r\n             onSubmit: (values) => {\r\n               console.log(\"here\",values)\r\n                const data = {\r\n                   address : values.address,\r\n                   fname: values.fname,\r\n                   due:false,\r\n                   ghoshna:false,\r\n                   received:false,\r\n                   gname:values.gname,\r\n                   mnno:values.mno,\r\n                   name:values.name,\r\n                   reg_no:values.regno,\r\n                   uid:values.uid,\r\n                   vname:values.vname\r\n                }\r\n                firestore\r\n                .collection(\"entries\")\r\n                .where(\"reg_no\",\"==\",values.regno)\r\n                .get()\r\n                .then(function (deets){\r\n                    if(deets.size > 0){\r\n                      alert(\"Registration Number Exists\")\r\n                    }else{\r\n                      firestore\r\n                      .collection(\"entries\")\r\n                      .doc(values.uid)\r\n                      .set(data,{merge : true})\r\n                      .then(function () {\r\n                        localStorage.setItem(\"userid\",values.uid)\r\n                        navigate(\"/payment\")\r\n                      })\r\n                    }\r\n                })\r\n                   \r\n             }\r\n           })\r\n     \r\n\r\n    return(\r\n        <div>\r\n            <SideBar />\r\n            <div className=\"content-wrapper\">\r\n                <div className=\"content-header\">\r\n                    <div className=\"container-fluid\">\r\n                    <div className=\"row mb-2\">\r\n                        <div className=\"col-sm-6\">\r\n                        <h1 className=\"m-0 text-dark\">New Entry Form</h1>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\" style={{display:\"flex\",justifyContent:\"center\", alignItems:\"center\"}}>\r\n                <div >\r\n                    {/* general form elements disabled */}\r\n                    <div className=\"card card-warning\">\r\n                    {/* /.card-header */}\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                            <div className=\"form-group\">\r\n                                <label>Already registered user?</label>\r\n                                    <div className=\"form-check\">\r\n                                    <input \r\n                                        className=\"form-check-input\"\r\n                                        type=\"radio\" \r\n                                        name=\"isreg\"\r\n                                        value=\"yes\"\r\n                                        id=\"yes\"\r\n                                        onClick={handleRegister}\r\n                                    />\r\n                                    <label className=\"form-check-label\">हां </label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                    <input \r\n                                        className=\"form-check-input\" \r\n                                        type=\"radio\" \r\n                                        name=\"radio1\" \r\n                                        name=\"isreg\"\r\n                                        value=\"no\"\r\n                                        id=\"no\"\r\n                                        onClick={handleRegister}\r\n                                        defaultChecked \r\n                                    />\r\n                                    <label className=\"form-check-label\">ना </label>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n            {!isRegistered && (<form role=\"form\" onSubmit={registerForm.handleSubmit}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-6\">\r\n                            \r\n                            {/* text input */}\r\n                            <div className=\"form-group\">\r\n                                <label>रजिस्ट्रेशन नंबर </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"रजिस्ट्रेशन नंबर\"\r\n                                    name=\"regno\"\r\n                                    onChange={registerForm.handleChange}\r\n                                    value={registerForm.values.regno}\r\n                                />\r\n                            </div>\r\n                            {registerForm.errors.regno ? \r\n                                (<p style={{color:\"red\"}}>{ registerForm.errors.regno}</p>) : null\r\n                            }\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>नाम </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"नाम\"\r\n                                    name=\"name\"\r\n                                    onChange={registerForm.handleChange}\r\n                                    value={registerForm.values.name}\r\n                                />\r\n                            </div>\r\n                            {registerForm.errors.name ? \r\n                                (<p style={{color:\"red\"}}>{ registerForm.errors.name}</p>) : null\r\n                            }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-6\">\r\n                            \r\n                            {/* text input */}\r\n                            <div className=\"form-group\">\r\n                                <label>पिता का नाम </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"पिता का नाम\"\r\n                                    name=\"fname\"\r\n                                    onChange={registerForm.handleChange}\r\n                                    value={registerForm.values.fname}\r\n                                />\r\n                            </div>\r\n                            {registerForm.errors.fname ? \r\n                                (<p style={{color:\"red\"}}>{ registerForm.errors.fname}</p>) : null\r\n                            }\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>पता </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"Address\"\r\n                                    name=\"address\"\r\n                                    onChange={registerForm.handleChange}\r\n                                    value={registerForm.values.address}\r\n                                />\r\n                            </div>\r\n                            {registerForm.errors.address ? \r\n                                (<p style={{color:\"red\"}}>{ registerForm.errors.address}</p>) : null\r\n                            }\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        \r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-6\">\r\n                            {/* select */}\r\n                            <div className=\"form-group\">\r\n                             <label>गादी का नाम </label>\r\n                             <select \r\n                                className=\"form-control\"\r\n                                name=\"gname\" \r\n                                value={registerForm.values.gname}\r\n                                onChange={registerForm.handleChange}\r\n                            >\r\n                                <option value=\"\" disabled selected>Select one</option>\r\n                                { gaadiName.map((gaadi) => \r\n                                    <option value={gaadi.id}>{gaadi.name}</option>\r\n                                )}\r\n                             </select>\r\n                            </div>\r\n                            {registerForm.errors.gname ? \r\n                                (<p style={{color:\"red\"}}>{ registerForm.errors.gname}</p>) : null\r\n                            }\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                            <div className=\"form-group\" onClick ={() => loadVillages()}>\r\n                                <label>गांव का नाम </label>\r\n                                <select \r\n                                    className=\"form-control\"\r\n                                    name=\"vname\" \r\n                                    value={registerForm.values.vname}\r\n                                    onChange={registerForm.handleChange}\r\n                                >\r\n                                <option value=\"\" disabled selected>Select one</option>\r\n                                { villageName.map((vname) => \r\n                                    <option value={vname.id}>{vname.name}</option>\r\n                                )}\r\n                                </select>\r\n                            </div>\r\n                            {registerForm.errors.vname ? \r\n                                (<p style={{color:\"red\"}}>{ registerForm.errors.vname}</p>) : null\r\n                            }\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>मोबाइल नंबर  </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"मोबाइल नंबर \"\r\n                                    name=\"mno\" \r\n                                    onChange={registerForm.handleChange}\r\n                                    value={registerForm.values.mno}\r\n                                />\r\n                            </div>\r\n                            {registerForm.errors.mno ? \r\n                                (<p style={{color:\"red\"}}>{ registerForm.errors.mno}</p>) : null\r\n                            }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-footer\">\r\n                        <button type=\"submit\" className=\"btn btn-info\">रजिस्टर </button>\r\n                        </div>\r\n                        </form>\r\n                        )}\r\n\r\n                        {isRegistered && (\r\n                        <form  onSubmit = {checkUserForm.handleSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label>नाम </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"नाम\"\r\n                                    name=\"name\" \r\n                                    onChange={checkUserForm.handleChange}\r\n                                    value={checkUserForm.values.name}\r\n                                />     \r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <button type=\"submit\" className=\"btn btn-info\">चेक करे  </button>\r\n                            </div>\r\n                        </form>)}\r\n                        <div >\r\n                 {\r\n                  getUser.map((v,i) => \r\n                    <div>\r\n                      <input \r\n                         className=\"form-check-input\" \r\n                         type=\"radio\" \r\n                         name=\"selectUser\"\r\n                         value={v.uid}\r\n                         id={i++}\r\n                         onClick={selectUser}\r\n                      />\r\n                      <p>{v.name}</p>\r\n                      <p>{v.fname}</p>\r\n                      <p>{v.address}</p>\r\n                      <p>{v.gname}</p>\r\n                      <p>{v.vname}</p>\r\n                      <p>{v.mnno}</p>\r\n                    </div>\r\n                  )}\r\n                  {selected && <button className=\"btn btn-info\" onClick={() => navigate(\"/payment\")}>Proceed</button>}\r\n                </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </section>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddEntry","C:\\projects\\samuhik\\src\\pages\\PaymentCondition.js",["102","103","104"],"import React,{useState,useEffect} from 'react'\r\nimport SideBar from '../components/Sidebar'\r\nimport { firestore } from \"../firebase.config\";\r\nimport { navigate } from \"hookrouter\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useFormik,} from \"formik\";\r\n\r\nexport default function Payment(){\r\n    \r\n    const [dtypes,setdTypes] = useState([])\r\n    let ref =  firestore.collection(\"receipts\").doc(\"AllReceipts\")\r\n\r\n    useEffect(async () => {\r\n      if (localStorage.getItem(\"logged\") !== \"true\") {\r\n        navigate(\"/\");\r\n      }\r\n      const document = firestore.collection(\"donation_type\")\r\n      const activeRef =  await document.get()\r\n        var dt = [];\r\n        activeRef.forEach((docs) => {\r\n          dt.push(docs.data())\r\n        })\r\n        \r\n        setdTypes(dt)\r\n\r\n    });\r\n\r\n\r\n    const validate = (values) =>{\r\n        \r\n        const errors = {}\r\n        if(values.pc ===\"ghoshna\"){\r\n          if (!values.date) {\r\n            errors.date = \"Date Required\";\r\n          }\r\n          if (!values.donation) {\r\n            errors.donation = \"Donation Required\";\r\n          }\r\n          if (!values.amt) {\r\n            errors.amt = \"Amount Required\";\r\n          }\r\n        }else if(values.pc === \"due\"){\r\n          if (!values.drno) {\r\n            errors.drno = \"Reciept Number Required\";\r\n          }\r\n          if (!values.ddate) {\r\n            errors.ddate = \"Date Required\";\r\n          }\r\n          if (!values.ddonation) {\r\n            errors.ddonation = \"Donation Required\";\r\n          }\r\n          if (!values.damt) {\r\n            errors.damt = \"Amount Required\";\r\n          }\r\n        }else{\r\n          if (!values.rrno) {\r\n            errors.rrno = \"Reciept Number Required\";\r\n          }\r\n          if (!values.pm) {\r\n            errors.pm = \"Payment Mode Required\";\r\n          }\r\n          if (!values.rdate) {\r\n            errors.rdate = \"Date Required\";\r\n          }\r\n          if (!values.rdonation) {\r\n            errors.rdonation = \"Donation Required\";\r\n          }\r\n          if (!values.ramt) {\r\n            errors.ramt = \"Amount Required\";\r\n          }\r\n        }\r\n        return errors;\r\n      }\r\n       const newFormik = useFormik({\r\n          initialValues: {\r\n           rno:\"\",\r\n           amt:\"\",\r\n           date:\"\",\r\n           donation:\"\",\r\n           pc:\"\",\r\n           drno:\"\",\r\n           ddate:\"\",\r\n           ddonation:\"\",\r\n           damt:\"\",\r\n           dntp:\"\",\r\n           rrno:\"\",\r\n           rdate:\"\",\r\n           rdonation:\"\",\r\n           ramt:\"\",\r\n           rntp:\"\",\r\n           pm:\"\",\r\n           note:\"\",\r\n           rnote:\"\",\r\n           dnote:\"\",\r\n          },\r\n           validate,\r\n          onSubmit: async (values) => {\r\n              //console.log(values)\r\n              let uid = localStorage.getItem(\"userid\")\r\n              let id = uuidv4()\r\n              //console.log(uid);\r\n              if(values.pc === \"ghoshna\"){\r\n                const ghoshna_data = {\r\n                  gid:id,\r\n                  uid:uid,\r\n                  date:values.date,\r\n                  amount:values.amt,\r\n                  donation:values.donation,\r\n                  note:values.note,\r\n                  type:\"ghoshna\"\r\n               }\r\n               console.log(ghoshna_data);\r\n               //add in ghoshna\r\n                firestore\r\n                .collection(\"all_receipts\")\r\n                // .doc(\"AllReceipts\")\r\n                // .collection(\"ghoshna\")\r\n                .doc(id)\r\n                .set(ghoshna_data,{merge : true})\r\n                .then(function () {\r\n                   console.log(\"success\");\r\n                   //update in entries\r\n                    firestore\r\n                    .collection(\"entries\")\r\n                    .doc(uid)\r\n                    .update({\r\n                      \"ghoshna\":true\r\n                    })\r\n                    console.log(\"updated\");\r\n                    localStorage.removeItem(\"userid\")\r\n                    navigate(\"/home\")\r\n                })\r\n  \r\n              }else if(values.pc === \"due\"){\r\n                console.log(\"due val\",values);\r\n  \r\n                const due_data = {\r\n                  did:id,\r\n                  uid:uid,\r\n                  date:values.ddate,\r\n                  amount:values.damt,\r\n                  donation:values.ddonation,\r\n                  reciept_no:values.drno,\r\n                  ntp:values.dntp,\r\n                  note:values.dnote,\r\n                  type:\"due\",\r\n               }\r\n              //  console.log(due_data);\r\n              firestore.collection(\"all_receipts\")\r\n              .where(\"reciept_no\",\"==\",values.drno)\r\n              .get()\r\n              .then(function (deets){\r\n                if(deets.size > 0)\r\n                 {\r\n                  alert(\"Reciept Number already exists\");\r\n                 }else{\r\n                        firestore\r\n                          .collection(\"all_receipts\")\r\n                          // .doc(\"AllReceipts\")\r\n                          // .collection(\"due\")\r\n                          .doc(id)\r\n                          .set(due_data,{merge : true})\r\n                          .then(function () {\r\n                            console.log(\"success\");\r\n                            //update in entries\r\n                              firestore\r\n                              .collection(\"entries\")\r\n                              .doc(uid)\r\n                              .update({\r\n                                \"due\":true\r\n                              })\r\n                              console.log(\"updated\");\r\n                              localStorage.removeItem(\"userid\")\r\n                              navigate(\"/home\")\r\n                          })\r\n                 }\r\n              })\r\n              \r\n              }else{\r\n                  const rec_data = {\r\n                    rid:id,\r\n                    uid:uid,\r\n                    date:values.rdate,\r\n                    amount:values.ramt,\r\n                    donation:values.rdonation,\r\n                    reciept_no:values.rrno,\r\n                    ntp:values.rntp,\r\n                    note:values.rnote,\r\n                    type:\"received\"\r\n                 }\r\n                 console.log(rec_data);\r\n                 //check rrno\r\n                 firestore.collection(\"all_receipts\")\r\n                 .where(\"reciept_no\",\"==\",values.rrno)\r\n                 .get()\r\n                 .then(function (deets){\r\n                   if(deets.size > 0)\r\n                    {\r\n                     alert(\"Reciept Number already exists\");\r\n                    }else{\r\n                           firestore\r\n                             .collection(\"all_receipts\")\r\n                            //  .doc(\"AllReceipts\")\r\n                            //  .collection(\"recieved\")\r\n                             .doc(id)\r\n                             .set(rec_data,{merge : true})\r\n                             .then(function () {\r\n                               console.log(\"success\");\r\n                               //update in entries\r\n                                 firestore\r\n                                 .collection(\"entries\")\r\n                                 .doc(uid)\r\n                                 .update({\r\n                                   \"received\":true\r\n                                 })\r\n                                 console.log(\"updated\");\r\n                                 localStorage.removeItem(\"userid\")\r\n                                 navigate(\"/home\")\r\n                             })\r\n                    }\r\n                 }) \r\n                 \r\n              }\r\n              \r\n          }\r\n        })\r\n\r\n        \r\n    return(\r\n        <div>\r\n            <SideBar />\r\n            <div className=\"content-wrapper\">\r\n                {/* ye */}\r\n                <div className=\"content-header\">\r\n                    <div className=\"container-fluid\">\r\n                    <div className=\"row mb-2\">\r\n                        <div className=\"col-sm-6\">\r\n                        <h1 className=\"m-0 text-dark\">Payment Method</h1>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                {/* idhar */}\r\n                <section className=\"content\">\r\n                  <div className=\"container-fluid\">\r\n                    <div className=\"card\">\r\n                     <div className=\"card-body\">\r\n                     <form  onSubmit = {newFormik.handleSubmit}>\r\n                        <div>\r\n                            <div className=\"form-group\">\r\n                                <label>Payment Type</label>\r\n                                    <select \r\n                                        className=\"form-control\"\r\n                                        name=\"pc\" \r\n                                        onChange={newFormik.handleChange}\r\n                                        value={newFormik.values.pc}\r\n                                    >\r\n                                        <option value=\"\" disabled selected>Select one</option>\r\n                                        <option value=\"ghoshna\">Ghoshna</option>\r\n                                        <option value=\"due\">Due</option>\r\n                                        <option value=\"received\">Received</option>\r\n                                    </select>\r\n                            </div>\r\n                        </div>\r\n                        {newFormik.values.pc === \"ghoshna\" && \r\n                        <div>\r\n                         <div className=\"row\">\r\n                            <div className=\"col-sm-6\">\r\n                                <div className=\"form-group\">\r\n                                <label>दिनांक </label>\r\n                                <input \r\n                                    type=\"date\"\r\n                                    placeholder=\"Date\" \r\n                                    className=\"form-control\" \r\n                                    name=\"date\"\r\n                                    onChange={newFormik.handleChange}\r\n                                />\r\n                            </div>\r\n                            {newFormik.errors.date ? \r\n                                    (<p style={{color:\"red\"}}>{ newFormik.errors.date}</p>) : null\r\n                                }\r\n                          </div>\r\n                          <div className=\"col-sm-6\">\r\n                          <div className=\"form-group\">\r\n                            <label>दान के प्रकार </label>\r\n                            <select \r\n                                name=\"donation\"\r\n                                value={newFormik.values.donation}\r\n                                className=\"form-control\" \r\n                                onChange={newFormik.handleChange}\r\n                                tw=\"w-full p-3 bg-white rounded-md font-medium border border-gray-500 text-sm focus:outline-none focus:border-gray-400\"\r\n                            >\r\n                                <option value=\"\" disabled selected>Select one</option>\r\n                                {dtypes.map((dt) => \r\n                                    <option value={dt.id}>{dt.name}</option>\r\n                                )}\r\n                            </select>\r\n                        </div>\r\n                        {newFormik.errors.donation ? \r\n                                (<p style={{color:\"red\"}}>{ newFormik.errors.donation}</p>) : null\r\n                            }\r\n                          </div>\r\n                      </div>\r\n                     <div className = \"row\">\r\n                      <div className=\"col-sm-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>राशि </label>\r\n                            <input \r\n                                type=\"text\"\r\n                                placeholder=\"राशि\"\r\n                                name=\"amt\" \r\n                                className=\"form-control\" \r\n                                value={newFormik.values.amt}\r\n                                onChange={newFormik.handleChange}\r\n                            />\r\n                        </div>\r\n                        \r\n                        {newFormik.errors.amt ? \r\n                                (<p style={{color:\"red\"}}>{ newFormik.errors.amt}</p>) : null\r\n                            }\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                            <div className=\"form-group\">\r\n                            <label>नोट </label>\r\n                            <input \r\n                                type=\"text\"\r\n                                placeholder=\"नोट \"\r\n                                name=\"note\" \r\n                                className=\"form-control\" \r\n                                value={newFormik.values.note}\r\n                                onChange={newFormik.handleChange}\r\n                            />\r\n                        </div>\r\n                        </div>\r\n                      </div>\r\n                        </div>\r\n                        }\r\n\r\n                    {newFormik.values.pc === \"due\" && (\r\n                        <div>\r\n                           <div className=\"row\">\r\n                            <div className=\"col-sm-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>रसीद नंबर </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    placeholder=\"रसीद नंबर \" \r\n                                    name=\"drno\" \r\n                                    className=\"form-control\"\r\n                                    onChange={newFormik.handleChange}\r\n                                    value={newFormik.values.drno}\r\n                                /> \r\n                            </div>\r\n                            {newFormik.errors.drno ? (<p style={{color:\"red\"}}>{ newFormik.errors.drno}</p>) : null}\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>दिनांक </label>\r\n                            <input \r\n                                type=\"date\"\r\n                                placeholder=\"दिनांक \" \r\n                                className=\"form-control\"\r\n                                name=\"ddate\"\r\n                                onChange={newFormik.handleChange}\r\n                            />\r\n                        </div>\r\n                        {newFormik.errors.ddate ? (<p style={{color:\"red\"}}>{ newFormik.errors.ddate}</p>) : null}\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>बाकी राशि </label>\r\n                                <input \r\n                                    type=\"number\"\r\n                                    placeholder=\"बाकी राशि \"\r\n                                    name=\"damt\"\r\n                                    className=\"form-control\"\r\n                                    onChange={newFormik.handleChange}\r\n                                    value={newFormik.values.damt}\r\n                                />\r\n                            </div>\r\n                            {newFormik.errors.damt ? (<p style={{color:\"red\"}}>{ newFormik.errors.damt}</p>) : null}\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                            <div className=\"form-group\">\r\n                                <label >दान के प्रकार</label>\r\n                                <select \r\n                                    name=\"ddonation\"\r\n                                    value={newFormik.values.ddonation}\r\n                                    className=\"form-control\"\r\n                                    onChange={newFormik.handleChange}\r\n                                    tw=\"w-full p-3 bg-white rounded-md font-medium border border-gray-500 text-sm focus:outline-none focus:border-gray-400\"\r\n                                >\r\n                                    <option value=\"\" disabled selected>Select one</option>\r\n                                    {dtypes.map((dt) => \r\n                                    <option value={dt.id}>{dt.name}</option>\r\n                                )}\r\n                                </select>\r\n                            </div>\r\n                            {newFormik.errors.ddonation ? (<p style={{color:\"red\"}}>{ newFormik.errors.ddonation}</p>) : null}\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"row\">\r\n                            <div className=\"col-sm-6\">\r\n                            \r\n                            <div className=\"form-group\">\r\n                                <label>Name to be Printed</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    placeholder=\"Name to be printed\" \r\n                                    name=\"dntp\"\r\n                                    className=\"form-control\"\r\n                                    onChange={newFormik.handleChange}\r\n                                    value={newFormik.values.dntp}\r\n                            />\r\n                            </div>\r\n                            {newFormik.errors.dntp ? (<p style={{color:\"red\"}}>{ newFormik.errors.dntp}</p>) : null}\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                            <div className=\"form-group\">\r\n                            <label>नोट </label>\r\n                            <input \r\n                                type=\"text\"\r\n                                placeholder=\"नोट \"\r\n                                name=\"dnote\" \r\n                                className=\"form-control\"\r\n                                value={newFormik.values.dnote}\r\n                                onChange={newFormik.handleChange}\r\n                            />\r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n                            </div>\r\n                        )}\r\n                    \r\n                    {newFormik.values.pc === \"received\" && (\r\n                  <div>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-sm-6\">\r\n                        <div className=\"form-group\">\r\n                        <label >रसीद नंबर </label>\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"रसीद नंबर \" \r\n                            name=\"rrno\" \r\n                            className=\"form-control\" \r\n                            onChange={newFormik.handleChange}\r\n                            value={newFormik.values.rrno}\r\n                        />\r\n                    </div>\r\n                    {newFormik.errors.rrno ? (<p style={{color:\"red\"}}>{ newFormik.errors.rrno}</p>) : null}\r\n                    </div>\r\n                    <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"rdate\">दिनांक </label>\r\n                      <input \r\n                          type=\"date\"\r\n                          placeholder=\"दिनांक \"\r\n                          className=\"form-control\"  \r\n                          name=\"rdate\"\r\n                          onChange={newFormik.handleChange}\r\n                      />\r\n                  </div>\r\n                  {newFormik.errors.rdate ? (<p style={{color:\"red\"}}>{ newFormik.errors.rdate}</p>) : null}\r\n                  </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"rntp\">Name to be Printed</label>\r\n                        <input \r\n                              type=\"text\" \r\n                              placeholder=\"Name to be printed\" \r\n                              className=\"form-control\" \r\n                              name=\"rntp\"\r\n                              onChange={newFormik.handleChange}\r\n                             value={newFormik.values.rntp}\r\n                       />\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"pm\">Payment Mode</label>\r\n                        <select \r\n                            name=\"pm\"\r\n                            value={newFormik.values.pm}\r\n                            className=\"form-control\" \r\n                            onChange={newFormik.handleChange}\r\n                            tw=\"w-full p-3 bg-white rounded-md font-medium border border-gray-500 text-sm focus:outline-none focus:border-gray-400\"\r\n                        >\r\n                            <option value=\"\" disabled selected>Select one</option>\r\n                            <option value=\"cheque\">Cheque</option>\r\n                            <option value=\"cash\">Cash</option>\r\n                            <option value=\"transfer\">Bank Transfer</option>\r\n                            <option value=\"gpay\">Google Pay</option>\r\n                            <option value=\"ptm\">PayTm</option>\r\n                            <option value=\"ppay\">Phone Pay</option>\r\n                        </select>\r\n                    </div>\r\n                    {newFormik.errors.pm ?(<p style={{color:\"red\"}}>{ newFormik.errors.pm}</p>) : null}\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-sm-6\">\r\n                        <div className=\"form-group\">\r\n                        <label >दान  प्रकार </label>\r\n                        <select \r\n                            name=\"rdonation\"\r\n                            value={newFormik.values.rdonation}\r\n                            onChange={newFormik.handleChange}\r\n                            className=\"form-control\" \r\n                        >\r\n                            <option value=\"\" disabled selected>Select one</option>\r\n                            {dtypes.map((dt) => \r\n                            <option value={dt.id}>{dt.name}</option>\r\n                          )}\r\n                        </select>\r\n                    </div>\r\n                    {newFormik.errors.rdonation ?(<p style={{color:\"red\"}}>{ newFormik.errors.rdonation}</p>) : null}\r\n                    </div>\r\n                    <div className=\"col-sm-6\">\r\n                        <div className=\"form-group\">\r\n                        <label>राशि</label>\r\n                        <input \r\n                              type=\"text\" \r\n                              placeholder=\"राशि\" \r\n                              name=\"ramt\"\r\n                              className=\"form-control\" \r\n                              onChange={newFormik.handleChange}\r\n                             value={newFormik.values.ramt}\r\n                       />\r\n                    </div>\r\n                    {newFormik.errors.ramt ? (<p style={{color:\"red\"}}>{ newFormik.errors.ramt}</p>) : null}\r\n                    </div>\r\n                    </div>\r\n                     <div className=\"col-sm-6\">\r\n                        <div className=\"form-group\">\r\n                      <label htmlFor=\"rnote\">नोट </label>\r\n                      <input \r\n                         type=\"text\"\r\n                         placeholder=\"नोट \"\r\n                         name=\"rnote\" \r\n                         className=\"form-control\" \r\n                         value={newFormik.values.rnote}\r\n                         onChange={newFormik.handleChange}\r\n                      />\r\n                  </div>\r\n                  </div>\r\n                  </div>\r\n               )}\r\n                    <button type=\"submit\" className=\"btn btn-info\">सबमिट  </button>\r\n                        </form>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </section>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\projects\\samuhik\\src\\pages\\Reports.js",["105","106","107"],"C:\\projects\\samuhik\\src\\pages\\SearchEntry.js",["108"],"import React,{useState,useEffect} from 'react'\r\nimport SideBar from '../components/Sidebar'\r\nimport GVSearch from '../components/GVSearch'\r\nimport NameSearch from '../components/NameSearch'\r\nimport RegNoSearch from '../components/RegNoSearch'\r\n\r\n\r\nexport default function SearchEntry(){\r\n    \r\n    const [type,setType] = useState('');\r\n    const [gvRes,setGVRes] = useState([]);\r\n    const [recData,setRecData] = useState([])\r\n\r\n    const handleChange = (event) =>{\r\n        setType(event.target.value)\r\n    }\r\n\r\n\r\n    return(\r\n        <div>\r\n           <SideBar />\r\n           <div className=\"content-wrapper\">\r\n              <section class=\"content-header\">\r\n                <div class=\"container-fluid\">\r\n                    <div class=\"row mb-2\">\r\n                    <div class=\"col-sm-6\">\r\n                        <h1>Search and Edit User Information</h1>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n              </section>\r\n              <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"card\">\r\n                        <div className = \"card-body\">\r\n                           <div className=\"form-group\">\r\n                                    <label>Search according to : </label>\r\n                                    <select \r\n                                        className=\"form-control\"\r\n                                        name=\"type\" \r\n                                        onChange={handleChange}\r\n                                        value={type}\r\n                                    >\r\n                                        <option value=\"\" disabled defaultValue=\"select\" selected>Select one</option>\r\n                                        <option value=\"place\">Gaadi and Village</option>\r\n                                        <option value=\"name\">Name</option>\r\n                                        <option value=\"regno\">Registration Number</option>\r\n                                    </select>\r\n                            </div>\r\n                            \r\n                            {type === \"place\" && <GVSearch st1={gvRes} setSt1={setGVRes} st2={recData} setSt2 = {setRecData} />}\r\n                            {type === \"name\" && <NameSearch st1={gvRes} setSt1={setGVRes} st2={recData} setSt2 = {setRecData}/>}\r\n                            {type === \"regno\" && <RegNoSearch st1={gvRes} setSt1={setGVRes} st2={recData} setSt2 = {setRecData}/>}\r\n                            \r\n                            { gvRes.length > 0 && <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"card\">\r\n                                <div className=\"card-header\">\r\n                                    <h3 className=\"card-title\">Details</h3>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <table id=\"example2\" className=\"table table-bordered table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Father's Name</th>\r\n                                        <th>Address</th>\r\n                                        <th>Village Name</th>\r\n                                        <th>Gaadi Name</th>\r\n                                        <th>Mobile Number</th>\r\n                                        <th>Donation For</th>\r\n                                        <th>Payment type</th>\r\n                                        <th>Date</th>\r\n                                        <th>Amount</th>\r\n                                        <th>Reciept Number</th>\r\n                                        <th>Name to be Printed</th>\r\n                                        <th>Note</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    { gvRes && recData && recData.map((val,i) => \r\n                                        <tr>\r\n                                                <td>{val.name}</td>\r\n                                                <td>{val.fname}</td>\r\n                                                <td>{val.address}</td>\r\n                                                <td>{val.vname}</td>\r\n                                                <td>{val.gname}</td>\r\n                                                <td>{val.mnno}</td>\r\n                                                <td>{val.donation}</td>\r\n                                                <td>{val.type}</td>\r\n                                                <td>{recData[i].date}</td>\r\n                                                <td>{recData[i].amount}</td>\r\n                                                {recData[i].reciept_no  && <td>{recData[i].reciept_no}</td>}\r\n                                                {recData[i].ntp  &&<td>{recData[i].ntp}</td>}\r\n                                                <td>{recData[i].note}</td>\r\n                                        </tr>\r\n                                    )}\r\n                                    \r\n                                    </tbody>\r\n                                    \r\n                                    </table>\r\n                                </div>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            </div>}\r\n                    {/* row */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n              </section>\r\n            </div>\r\n        </div>\r\n    )\r\n}",["109","110"],"C:\\projects\\samuhik\\src\\components\\GVSearch.js",["111","112","113","114","115","116","117","118"],"C:\\projects\\samuhik\\src\\components\\NameSearch.js",["119","120","121","122"],"import React,{useState,useEffect} from \"react\"\r\nimport { firestore } from \"../firebase.config\";\r\nimport { navigate } from \"hookrouter\";\r\nimport { useFormik,} from \"formik\";\r\n\r\nconst NameSearch = (props) => {\r\n    const [searchRes, setSearchRes] = useState([]);\r\n    // console.log(props);\r\n\r\n    useEffect( () => {\r\n        if (localStorage.getItem(\"logged\") !== \"true\") {\r\n            navigate(\"/\");\r\n          }\r\n    });\r\n\r\n\r\n    const searchForm = useFormik({\r\n        initialValues:{\r\n          name:\"\"\r\n        },\r\n        onSubmit: (values) => {\r\n            console.log(values);\r\n                firestore\r\n                    .collection(\"entries\")\r\n                    .where(\"name\",\"==\",values.name)\r\n                    .get()\r\n                    .then(function (deets){\r\n                        // console.log(deets.docs);\r\n                        if(deets.empty)\r\n                            {alert(\"No data found\");props.setSt1([])}\r\n                        else{\r\n                            let userData = []\r\n                            let ids = []\r\n                            deets.docs.map((v) => {\r\n                                userData.push(v.data())\r\n                                ids.push(v.id);\r\n                            })\r\n                            props.setSt1(userData)\r\n                            console.log(\"userData of both ...\",userData);\r\n                            let recieptData = []\r\n                            ids.forEach((id) => {\r\n                                firestore\r\n                                    .collection(\"all_receipts\")\r\n                                    .where(\"uid\" ,\"==\",id)\r\n                                    .get()\r\n                                    .then(function (d) {\r\n                                        d.docs.map((val) => {\r\n                                            recieptData.push(val.data())\r\n                                        })\r\n                                    })\r\n                            })\r\n                            props.setSt2(recieptData)\r\n                            console.log(\"rec data\",recieptData);\r\n                        }\r\n                    })\r\n            \r\n        }\r\n    })\r\n\r\n    return(\r\n        <div>\r\n           <form onSubmit ={searchForm.handleSubmit}>\r\n                <div className=\"row\">\r\n                        <div className=\"col-sm-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>नाम </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"नाम\"\r\n                                    name=\"name\" \r\n                                    onChange={searchForm.handleChange}\r\n                                    value={searchForm.values.name}\r\n                                /> \r\n                            </div>\r\n                         </div>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-info\">Search </button>\r\n           </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NameSearch","C:\\projects\\samuhik\\src\\components\\RegNoSearch.js",["123","124","125","126"],"import React,{useState,useEffect} from \"react\"\r\nimport { firestore } from \"../firebase.config\";\r\nimport { navigate } from \"hookrouter\";\r\nimport { useFormik,} from \"formik\";\r\n\r\nconst RegNoSearch = (props) => {\r\n    const [searchRes, setSearchRes] = useState([]);\r\n    // console.log(props);\r\n\r\n    useEffect( () => {\r\n        if (localStorage.getItem(\"logged\") !== \"true\") {\r\n            navigate(\"/\");\r\n          }\r\n    });\r\n\r\n\r\n    const searchForm = useFormik({\r\n        initialValues:{\r\n          regno:\"\"\r\n        },\r\n        onSubmit: (values) => {\r\n            console.log(values);\r\n                firestore\r\n                    .collection(\"entries\")\r\n                    .where(\"reg_no\",\"==\",values.regno)\r\n                    .get()\r\n                    .then(function (deets){\r\n                        // console.log(deets.docs);\r\n                        if(deets.empty)\r\n                            {alert(\"No data found\");props.setSt1([])}\r\n                        else{\r\n                            let userData = []\r\n                            let ids = []\r\n                            console.log(deets);\r\n                            deets.docs.map((v) => {\r\n                                userData.push(v.data())\r\n                                ids.push(v.id);\r\n                            })\r\n                            props.setSt1(userData)\r\n                            console.log(\"userData of both ...\",userData);\r\n                            let recieptData = []\r\n                            ids.forEach((id) => {\r\n                                firestore\r\n                                    .collection(\"all_receipts\")\r\n                                    .where(\"uid\" ,\"==\",id)\r\n                                    .get()\r\n                                    .then(function (d) {\r\n                                        d.docs.map((val) => {\r\n                                            recieptData.push(val.data())\r\n                                        })\r\n                                    })\r\n                            })\r\n                            props.setSt2(recieptData)\r\n                            console.log(\"rec data\",recieptData);\r\n                        }\r\n                    })\r\n            \r\n        }\r\n    })\r\n\r\n    return(\r\n        <div>\r\n           <form onSubmit ={searchForm.handleSubmit}>\r\n                <div className=\"row\">\r\n                        <div className=\"col-sm-6\">\r\n                            <div className=\"form-group\">\r\n                            <label>रजिस्ट्रेशन नंबर </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"रजिस्ट्रेशन नंबर\"\r\n                                    name=\"regno\"\r\n                                    onChange={searchForm.handleChange}\r\n                                    value={searchForm.values.regno}\r\n                                />\r\n                            </div>\r\n                         </div>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-info\">Search </button>\r\n           </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegNoSearch","C:\\projects\\samuhik\\src\\components\\PaymentSearch.js",["127","128","129","130"],"import React,{useState,useEffect} from \"react\"\r\nimport { firestore } from \"../firebase.config\";\r\nimport { navigate } from \"hookrouter\";\r\nimport { useFormik,} from \"formik\";\r\n\r\nconst PaymentSearch = (props) => {\r\n    const [searchRes, setSearchRes] = useState([]);\r\n    // console.log(props);\r\n\r\n    useEffect( () => {\r\n        if (localStorage.getItem(\"logged\") !== \"true\") {\r\n            navigate(\"/\");\r\n          }\r\n    });\r\n\r\n\r\n    const searchForm = useFormik({\r\n        initialValues:{\r\n          pc:\"\"\r\n        },\r\n        onSubmit: (values) => {\r\n            console.log(values);\r\n            firestore\r\n                .collection(\"all_receipts\")\r\n                .where(\"type\",\"==\",values.pc)\r\n                .get()\r\n                .then(function (deets) {\r\n                    if(deets.empty){\r\n                        alert(\"no user found\")\r\n                        //props.setSt1([])\r\n                    }else{\r\n                        let receiptData = []\r\n                        let ids = new Set()\r\n                        deets.docs.map((v) => {\r\n                            receiptData.push(v.data());\r\n                            ids.add(v.data().uid);\r\n                        })\r\n                        // console.log(ids);\r\n                        //props.setSt2(receiptData)\r\n                        console.log(\"rec data..\",receiptData);\r\n                        \r\n                        let userData = []\r\n                        ids.forEach((id) =>{\r\n                            firestore\r\n                                .collection(\"entries\")\r\n                                .where(\"uid\",\"==\",id)\r\n                                .get()\r\n                                .then(function (d) {\r\n                                    d.docs.map((val) => {\r\n                                        userData.push(val.data())\r\n                                    })\r\n                                })\r\n                        })\r\n                        //props.setSt1(userData)\r\n                        console.log(\"User data\",userData);\r\n                        props.parentCallback(userData,receiptData)\r\n                    }\r\n                })\r\n\r\n            \r\n        }\r\n    })\r\n\r\n    return(\r\n        <div>\r\n           <form onSubmit ={searchForm.handleSubmit}>\r\n                <div className=\"row\">\r\n                        <div className=\"col-sm-6\">\r\n                            <div className=\"form-group\">\r\n                            <label>Payment Type</label>\r\n                                    <select \r\n                                        className=\"form-control\"\r\n                                        name=\"pc\" \r\n                                        onChange={searchForm.handleChange}\r\n                                        value={searchForm.values.pc}\r\n                                    >\r\n                                        <option value=\"\" disabled selected>Select one</option>\r\n                                        <option value=\"ghoshna\">Ghoshna</option>\r\n                                        <option value=\"due\">Due</option>\r\n                                        <option value=\"received\">Received</option>\r\n                                    </select>\r\n                            </div>\r\n                         </div>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-info\">Search </button>\r\n           </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentSearch","C:\\projects\\samuhik\\src\\components\\ProductSearch.js",["131","132","133","134"],"import React,{useState,useEffect} from \"react\"\r\nimport { firestore } from \"../firebase.config\";\r\nimport { navigate } from \"hookrouter\";\r\nimport { useFormik,} from \"formik\";\r\n\r\nconst ProductSearch = (props) => {\r\n    const [searchRes, setSearchRes] = useState([]);\r\n    const [dtypes,setdTypes] = useState([])\r\n    // console.log(props);\r\n\r\n    useEffect( () => {\r\n        if (localStorage.getItem(\"logged\") !== \"true\") {\r\n            navigate(\"/\");\r\n          }\r\n          loadDonation()\r\n    });\r\n\r\n    const loadDonation = async() =>{\r\n        const document = firestore.collection(\"donation_type\")\r\n        const activeRef =  await document.get()\r\n        var dt = [];\r\n        activeRef.forEach((docs) => {\r\n          dt.push(docs.data())\r\n        })\r\n        \r\n        setdTypes(dt)\r\n    }\r\n\r\n\r\n    const searchForm = useFormik({\r\n        initialValues:{\r\n          pro:\"\"\r\n        },\r\n        onSubmit: (values) => {\r\n            console.log(values);\r\n            firestore\r\n                .collection(\"all_receipts\")\r\n                .where(\"donation\",\"==\",values.pro)\r\n                .get()\r\n                .then(function (deets) {\r\n                    if(deets.empty){\r\n                        alert(\"no user found\")\r\n                        //props.setSt1([])\r\n                    }else{\r\n                        let receiptData = []\r\n                        let ids = new Set()\r\n                        deets.docs.map((v) => {\r\n                            receiptData.push(v.data());\r\n                            ids.add(v.data().uid);\r\n                        })\r\n                        // console.log(ids);\r\n                        //props.setSt1(receiptData)\r\n                        console.log(\"rec data..\",receiptData);\r\n                        \r\n                        let userData = []\r\n                        ids.forEach((id) =>{\r\n                            firestore\r\n                                .collection(\"entries\")\r\n                                .where(\"uid\",\"==\",id)\r\n                                .get()\r\n                                .then(function (d) {\r\n                                    d.docs.map((val) => {\r\n                                        userData.push(val.data())\r\n                                    })\r\n                                })\r\n                        })\r\n                        //props.setSt2(userData)\r\n                        console.log(\"User data\",userData);\r\n                        props.parentCallback(userData,receiptData)\r\n                    }\r\n                })\r\n\r\n            \r\n        }\r\n    })\r\n\r\n    return(\r\n        <div>\r\n           <form onSubmit ={searchForm.handleSubmit}>\r\n                <div className=\"row\">\r\n                        <div className=\"col-sm-6\">\r\n                            <div className=\"form-group\">\r\n                            <label >दान के प्रकार</label>\r\n                                        <select \r\n                                            name=\"pro\"\r\n                                            value={searchForm.values.donation}\r\n                                            className=\"form-control\"\r\n                                            onChange={searchForm.handleChange}\r\n                                        >\r\n                                            <option value=\"\" disabled selected>Select one</option>\r\n                                            {dtypes.map((dt) => \r\n                                            <option value={dt.id}>{dt.name}</option>\r\n                                        )}\r\n                                        </select>\r\n                            </div>\r\n                         </div>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-info\">Search </button>\r\n           </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductSearch","C:\\projects\\samuhik\\src\\components\\Display.js",["135","136","137"],"import React, { useEffect,useState } from 'react'\r\n\r\nexport default function Display(props) {\r\n    const [finalData, setFinalData] = useState([])\r\n    useEffect(() => {\r\n      var recData = [];\r\n      console.log(\"props\",props.uData);\r\n\r\n    })\r\n    return (\r\n        // <div>\r\n             <tbody>\r\n                                 {/* {finalData && finalData.map((val,i) => {\r\n                                     let ind = 0\r\n                                     val[ind].map((sub,j) => {\r\n                                     <tr>\r\n                                        <td>{val.name}</td>\r\n                                        <td>{val.fname}</td>\r\n                                        <td>{val.address}</td>\r\n                                        <td>{val.vname}</td>\r\n                                        <td>{val.gname}</td>\r\n                                        <td>{val.mnno}</td>\r\n                                        <td>{sub.donation}</td>\r\n                                        <td>{sub.type}</td>\r\n                                        <td>{sub.date}</td>\r\n                                        <td>{sub.amount}</td>\r\n                                        {sub.reciept_no  && <td>{sub.reciept_no}</td>}\r\n                                        {sub.ntp  &&<td>{sub.ntp}</td>}\r\n                                        <td>{sub.note}</td>\r\n                                    </tr>\r\n                                    ind++;\r\n                                    })\r\n                                })} */}\r\n                                 \r\n             </tbody>\r\n                        \r\n        // </div>\r\n    )\r\n}\r\n",{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":51,"column":21,"nodeType":"144","endLine":51,"endColumn":77},{"ruleId":"138","replacedBy":"145"},{"ruleId":"140","replacedBy":"146"},{"ruleId":"138","replacedBy":"147"},{"ruleId":"140","replacedBy":"148"},{"ruleId":"138","replacedBy":"149"},{"ruleId":"140","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":15,"column":15,"nodeType":"153","endLine":20,"endColumn":6},{"ruleId":"154","severity":1,"message":"155","line":48,"column":39,"nodeType":"153","messageId":"156","endLine":48,"endColumn":41},{"ruleId":"154","severity":1,"message":"155","line":104,"column":40,"nodeType":"153","messageId":"156","endLine":104,"endColumn":42},{"ruleId":"157","severity":1,"message":"158","line":202,"column":41,"nodeType":"159","endLine":202,"endColumn":53},{"ruleId":"142","severity":1,"message":"143","line":212,"column":32,"nodeType":"144","endLine":212,"endColumn":87},{"ruleId":"160","severity":1,"message":"161","line":11,"column":9,"nodeType":"162","messageId":"163","endLine":11,"endColumn":12},{"ruleId":"151","severity":1,"message":"164","line":13,"column":5,"nodeType":"162","endLine":13,"endColumn":14,"suggestions":"165"},{"ruleId":"151","severity":1,"message":"152","line":13,"column":15,"nodeType":"153","endLine":26,"endColumn":6},{"ruleId":"160","severity":1,"message":"166","line":12,"column":12,"nodeType":"162","messageId":"163","endLine":12,"endColumn":16},{"ruleId":"154","severity":1,"message":"155","line":27,"column":31,"nodeType":"153","messageId":"156","endLine":27,"endColumn":33},{"ruleId":"154","severity":1,"message":"155","line":31,"column":61,"nodeType":"153","messageId":"156","endLine":31,"endColumn":63},{"ruleId":"160","severity":1,"message":"167","line":1,"column":24,"nodeType":"162","messageId":"163","endLine":1,"endColumn":33},{"ruleId":"138","replacedBy":"168"},{"ruleId":"140","replacedBy":"169"},{"ruleId":"160","severity":1,"message":"170","line":5,"column":8,"nodeType":"162","messageId":"163","endLine":5,"endColumn":9},{"ruleId":"160","severity":1,"message":"171","line":6,"column":8,"nodeType":"162","messageId":"163","endLine":6,"endColumn":15},{"ruleId":"160","severity":1,"message":"172","line":21,"column":11,"nodeType":"162","messageId":"163","endLine":21,"endColumn":19},{"ruleId":"151","severity":1,"message":"173","line":36,"column":8,"nodeType":"174","endLine":36,"endColumn":27,"suggestions":"175"},{"ruleId":"154","severity":1,"message":"155","line":57,"column":39,"nodeType":"153","messageId":"156","endLine":57,"endColumn":41},{"ruleId":"176","severity":1,"message":"177","line":85,"column":31,"nodeType":"178","messageId":"179","endLine":85,"endColumn":102,"fix":"180"},{"ruleId":"154","severity":1,"message":"155","line":129,"column":48,"nodeType":"153","messageId":"156","endLine":129,"endColumn":50},{"ruleId":"154","severity":1,"message":"155","line":141,"column":58,"nodeType":"153","messageId":"156","endLine":141,"endColumn":60},{"ruleId":"160","severity":1,"message":"181","line":7,"column":12,"nodeType":"162","messageId":"163","endLine":7,"endColumn":21},{"ruleId":"160","severity":1,"message":"182","line":7,"column":23,"nodeType":"162","messageId":"163","endLine":7,"endColumn":35},{"ruleId":"154","severity":1,"message":"155","line":34,"column":48,"nodeType":"153","messageId":"156","endLine":34,"endColumn":50},{"ruleId":"154","severity":1,"message":"155","line":47,"column":58,"nodeType":"153","messageId":"156","endLine":47,"endColumn":60},{"ruleId":"160","severity":1,"message":"181","line":7,"column":12,"nodeType":"162","messageId":"163","endLine":7,"endColumn":21},{"ruleId":"160","severity":1,"message":"182","line":7,"column":23,"nodeType":"162","messageId":"163","endLine":7,"endColumn":35},{"ruleId":"154","severity":1,"message":"155","line":35,"column":48,"nodeType":"153","messageId":"156","endLine":35,"endColumn":50},{"ruleId":"154","severity":1,"message":"155","line":48,"column":58,"nodeType":"153","messageId":"156","endLine":48,"endColumn":60},{"ruleId":"160","severity":1,"message":"181","line":7,"column":12,"nodeType":"162","messageId":"163","endLine":7,"endColumn":21},{"ruleId":"160","severity":1,"message":"182","line":7,"column":23,"nodeType":"162","messageId":"163","endLine":7,"endColumn":35},{"ruleId":"154","severity":1,"message":"155","line":34,"column":44,"nodeType":"153","messageId":"156","endLine":34,"endColumn":46},{"ruleId":"154","severity":1,"message":"155","line":49,"column":54,"nodeType":"153","messageId":"156","endLine":49,"endColumn":56},{"ruleId":"160","severity":1,"message":"181","line":7,"column":12,"nodeType":"162","messageId":"163","endLine":7,"endColumn":21},{"ruleId":"160","severity":1,"message":"182","line":7,"column":23,"nodeType":"162","messageId":"163","endLine":7,"endColumn":35},{"ruleId":"154","severity":1,"message":"155","line":47,"column":44,"nodeType":"153","messageId":"156","endLine":47,"endColumn":46},{"ruleId":"154","severity":1,"message":"155","line":62,"column":54,"nodeType":"153","messageId":"156","endLine":62,"endColumn":56},{"ruleId":"160","severity":1,"message":"183","line":4,"column":12,"nodeType":"162","messageId":"163","endLine":4,"endColumn":21},{"ruleId":"160","severity":1,"message":"184","line":4,"column":23,"nodeType":"162","messageId":"163","endLine":4,"endColumn":35},{"ruleId":"160","severity":1,"message":"185","line":6,"column":11,"nodeType":"162","messageId":"163","endLine":6,"endColumn":18},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement",["186"],["187"],["186"],["187"],["186"],["187"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'ref' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect contains a call to 'setdTypes'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["188"],"'keys' is assigned a value but never used.","'useEffect' is defined but never used.",["186"],["187"],"'_' is defined but never used.","'Display' is defined but never used.","'callback' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["189"],"no-whitespace-before-property","Unexpected whitespace before property where.","MemberExpression","unexpectedWhitespace",{"range":"190","text":"191"},"'searchRes' is assigned a value but never used.","'setSearchRes' is assigned a value but never used.","'finalData' is assigned a value but never used.","'setFinalData' is assigned a value but never used.","'recData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},[2824,2826],".","Add dependencies array: []",{"range":"196","text":"197"},"Update the dependencies array to be: [usersData, recData, props]",{"range":"198","text":"199"},[788,788],", []",[1239,1258],"[usersData, recData, props]"]